#include <java.base.h>

#include <java/lang/ClassEntry.h>
#include <java/lang/Library.h>
#include <java/lang/ModuleInfo.h>
#include <java/lang/ResourceEntry.h>
#include <jcpp.h>
#include <module-info>

#include <java/lang/Array.h>
#include <apple/security/AppleProvider.h>
#include <apple/security/AppleProvider$1.h>
#include <apple/security/AppleProvider$ProviderService.h>
#include <apple/security/KeychainStore.h>
#include <apple/security/KeychainStore$CertKeychainItemPair.h>
#include <apple/security/KeychainStore$KeyEntry.h>
#include <apple/security/KeychainStore$TrustedCertEntry.h>
#include <com/sun/crypto/provider/AESCipher.h>
#include <com/sun/crypto/provider/AESCipher$AES128_CBC_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES128_CFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES128_ECB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES128_OFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES192_CBC_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES192_CFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES192_ECB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES192_OFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES256_CBC_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES256_CFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES256_ECB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$AES256_OFB_NoPadding.h>
#include <com/sun/crypto/provider/AESCipher$General.h>
#include <com/sun/crypto/provider/AESCipher$OidImpl.h>
#include <com/sun/crypto/provider/AESConstants.h>
#include <com/sun/crypto/provider/AESCrypt.h>
#include <com/sun/crypto/provider/AESKeyGenerator.h>
#include <com/sun/crypto/provider/AESKeyWrap.h>
#include <com/sun/crypto/provider/AESKeyWrapPadded.h>
#include <com/sun/crypto/provider/AESParameters.h>
#include <com/sun/crypto/provider/ARCFOURCipher.h>
#include <com/sun/crypto/provider/BlockCipherParamsCore.h>
#include <com/sun/crypto/provider/BlowfishCipher.h>
#include <com/sun/crypto/provider/BlowfishConstants.h>
#include <com/sun/crypto/provider/BlowfishCrypt.h>
#include <com/sun/crypto/provider/BlowfishKeyGenerator.h>
#include <com/sun/crypto/provider/BlowfishParameters.h>
#include <com/sun/crypto/provider/ChaCha20Cipher.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$ChaCha20Only.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$ChaCha20Poly1305.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$EngineAEADDec.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$EngineAEADEnc.h>
#include <com/sun/crypto/provider/ChaCha20Cipher$EngineStreamOnly.h>
#include <com/sun/crypto/provider/ChaCha20Poly1305Parameters.h>
#include <com/sun/crypto/provider/CipherBlockChaining.h>
#include <com/sun/crypto/provider/CipherCore.h>
#include <com/sun/crypto/provider/CipherFeedback.h>
#include <com/sun/crypto/provider/CipherForKeyProtector.h>
#include <com/sun/crypto/provider/CipherTextStealing.h>
#include <com/sun/crypto/provider/ConstructKeys.h>
#include <com/sun/crypto/provider/CounterMode.h>
#include <com/sun/crypto/provider/DESCipher.h>
#include <com/sun/crypto/provider/DESConstants.h>
#include <com/sun/crypto/provider/DESCrypt.h>
#include <com/sun/crypto/provider/DESKey.h>
#include <com/sun/crypto/provider/DESKeyFactory.h>
#include <com/sun/crypto/provider/DESKeyGenerator.h>
#include <com/sun/crypto/provider/DESParameters.h>
#include <com/sun/crypto/provider/DESedeCipher.h>
#include <com/sun/crypto/provider/DESedeCrypt.h>
#include <com/sun/crypto/provider/DESedeKey.h>
#include <com/sun/crypto/provider/DESedeKeyFactory.h>
#include <com/sun/crypto/provider/DESedeKeyGenerator.h>
#include <com/sun/crypto/provider/DESedeParameters.h>
#include <com/sun/crypto/provider/DESedeWrapCipher.h>
#include <com/sun/crypto/provider/DHKeyAgreement.h>
#include <com/sun/crypto/provider/DHKeyAgreement$AllowKDF.h>
#include <com/sun/crypto/provider/DHKeyFactory.h>
#include <com/sun/crypto/provider/DHKeyPairGenerator.h>
#include <com/sun/crypto/provider/DHParameterGenerator.h>
#include <com/sun/crypto/provider/DHParameters.h>
#include <com/sun/crypto/provider/DHPrivateKey.h>
#include <com/sun/crypto/provider/DHPublicKey.h>
#include <com/sun/crypto/provider/ElectronicCodeBook.h>
#include <com/sun/crypto/provider/EncryptedPrivateKeyInfo.h>
#include <com/sun/crypto/provider/FeedbackCipher.h>
#include <com/sun/crypto/provider/GCM.h>
#include <com/sun/crypto/provider/GCMParameters.h>
#include <com/sun/crypto/provider/GCTR.h>
#include <com/sun/crypto/provider/GHASH.h>
#include <com/sun/crypto/provider/GaloisCounterMode.h>
#include <com/sun/crypto/provider/GaloisCounterMode$AES128.h>
#include <com/sun/crypto/provider/GaloisCounterMode$AES192.h>
#include <com/sun/crypto/provider/GaloisCounterMode$AES256.h>
#include <com/sun/crypto/provider/GaloisCounterMode$AESGCM.h>
#include <com/sun/crypto/provider/GaloisCounterMode$GCMDecrypt.h>
#include <com/sun/crypto/provider/GaloisCounterMode$GCMEncrypt.h>
#include <com/sun/crypto/provider/GaloisCounterMode$GCMEngine.h>
#include <com/sun/crypto/provider/GaloisCounterMode$GCTRGHASH.h>
#include <com/sun/crypto/provider/HmacCore.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA224.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA256.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA384.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA3_224.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA3_256.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA3_384.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA3_512.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA512.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA512_224.h>
#include <com/sun/crypto/provider/HmacCore$HmacSHA512_256.h>
#include <com/sun/crypto/provider/HmacMD5.h>
#include <com/sun/crypto/provider/HmacMD5KeyGenerator.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA1.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA224.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA256.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA384.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA512.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_224.h>
#include <com/sun/crypto/provider/HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_256.h>
#include <com/sun/crypto/provider/HmacSHA1.h>
#include <com/sun/crypto/provider/HmacSHA1KeyGenerator.h>
#include <com/sun/crypto/provider/ISO10126Padding.h>
#include <com/sun/crypto/provider/JceKeyStore.h>
#include <com/sun/crypto/provider/JceKeyStore$DeserializationChecker.h>
#include <com/sun/crypto/provider/JceKeyStore$PrivateKeyEntry.h>
#include <com/sun/crypto/provider/JceKeyStore$SecretKeyEntry.h>
#include <com/sun/crypto/provider/JceKeyStore$TrustedCertEntry.h>
#include <com/sun/crypto/provider/KWUtil.h>
#include <com/sun/crypto/provider/KeyGeneratorCore.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$ARCFOURKeyGenerator.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$ChaCha20KeyGenerator.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA224.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA256.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA384.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA3_224.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA3_256.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA3_384.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA3_512.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA512.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA512_224.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$HmacKG$SHA512_256.h>
#include <com/sun/crypto/provider/KeyGeneratorCore$RC2KeyGenerator.h>
#include <com/sun/crypto/provider/KeyProtector.h>
#include <com/sun/crypto/provider/KeyWrapCipher.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES128_KWP_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES128_KW_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES128_KW_PKCS5Padding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES192_KWP_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES192_KW_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES192_KW_PKCS5Padding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES256_KWP_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES256_KW_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES256_KW_PKCS5Padding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES_KWP_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES_KW_NoPadding.h>
#include <com/sun/crypto/provider/KeyWrapCipher$AES_KW_PKCS5Padding.h>
#include <com/sun/crypto/provider/OAEPParameters.h>
#include <com/sun/crypto/provider/OutputFeedback.h>
#include <com/sun/crypto/provider/PBEKey.h>
#include <com/sun/crypto/provider/PBEKeyFactory.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_256.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_256.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_256.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_256.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_256.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndDES.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndTripleDES.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndDESede.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_40.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_128.h>
#include <com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_40.h>
#include <com/sun/crypto/provider/PBEParameters.h>
#include <com/sun/crypto/provider/PBES1Core.h>
#include <com/sun/crypto/provider/PBES2Core.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Parameters.h>
#include <com/sun/crypto/provider/PBES2Parameters$General.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_256.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_128.h>
#include <com/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_256.h>
#include <com/sun/crypto/provider/PBEWithMD5AndDESCipher.h>
#include <com/sun/crypto/provider/PBEWithMD5AndTripleDESCipher.h>
#include <com/sun/crypto/provider/PBKDF2Core.h>
#include <com/sun/crypto/provider/PBKDF2Core$HmacSHA1.h>
#include <com/sun/crypto/provider/PBKDF2Core$HmacSHA224.h>
#include <com/sun/crypto/provider/PBKDF2Core$HmacSHA256.h>
#include <com/sun/crypto/provider/PBKDF2Core$HmacSHA384.h>
#include <com/sun/crypto/provider/PBKDF2Core$HmacSHA512.h>
#include <com/sun/crypto/provider/PBKDF2HmacSHA1Factory.h>
#include <com/sun/crypto/provider/PBKDF2KeyImpl.h>
#include <com/sun/crypto/provider/PBKDF2KeyImpl$1.h>
#include <com/sun/crypto/provider/PBMAC1Core.h>
#include <com/sun/crypto/provider/PBMAC1Core$HmacSHA1.h>
#include <com/sun/crypto/provider/PBMAC1Core$HmacSHA224.h>
#include <com/sun/crypto/provider/PBMAC1Core$HmacSHA256.h>
#include <com/sun/crypto/provider/PBMAC1Core$HmacSHA384.h>
#include <com/sun/crypto/provider/PBMAC1Core$HmacSHA512.h>
#include <com/sun/crypto/provider/PCBC.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndDESede.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_128.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_40.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_128.h>
#include <com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_40.h>
#include <com/sun/crypto/provider/PKCS5Padding.h>
#include <com/sun/crypto/provider/Padding.h>
#include <com/sun/crypto/provider/Poly1305.h>
#include <com/sun/crypto/provider/PrivateKeyInfo.h>
#include <com/sun/crypto/provider/RC2Cipher.h>
#include <com/sun/crypto/provider/RC2Crypt.h>
#include <com/sun/crypto/provider/RC2Parameters.h>
#include <com/sun/crypto/provider/RSACipher.h>
#include <com/sun/crypto/provider/SealedObjectForKeyProtector.h>
#include <com/sun/crypto/provider/SealedObjectForKeyProtector$DeserializationChecker.h>
#include <com/sun/crypto/provider/SslMacCore.h>
#include <com/sun/crypto/provider/SslMacCore$SslMacMD5.h>
#include <com/sun/crypto/provider/SslMacCore$SslMacSHA1.h>
#include <com/sun/crypto/provider/SunJCE.h>
#include <com/sun/crypto/provider/SunJCE$1.h>
#include <com/sun/crypto/provider/SunJCE$SecureRandomHolder.h>
#include <com/sun/crypto/provider/SymmetricCipher.h>
#include <com/sun/crypto/provider/TlsKeyMaterialGenerator.h>
#include <com/sun/crypto/provider/TlsMasterSecretGenerator.h>
#include <com/sun/crypto/provider/TlsMasterSecretGenerator$TlsMasterSecretKey.h>
#include <com/sun/crypto/provider/TlsPrfGenerator.h>
#include <com/sun/crypto/provider/TlsPrfGenerator$V10.h>
#include <com/sun/crypto/provider/TlsPrfGenerator$V12.h>
#include <com/sun/crypto/provider/TlsRsaPremasterSecretGenerator.h>
#include <com/sun/security/ntlm/Client.h>
#include <com/sun/security/ntlm/NTLM.h>
#include <com/sun/security/ntlm/NTLM$Reader.h>
#include <com/sun/security/ntlm/NTLM$Writer.h>
#include <com/sun/security/ntlm/NTLMException.h>
#include <com/sun/security/ntlm/Server.h>
#include <com/sun/security/ntlm/Version.h>
#include <java/io/Bits.h>
#include <java/io/BufferedInputStream.h>
#include <java/io/BufferedOutputStream.h>
#include <java/io/BufferedReader.h>
#include <java/io/BufferedReader$1.h>
#include <java/io/BufferedWriter.h>
#include <java/io/ByteArrayInputStream.h>
#include <java/io/ByteArrayOutputStream.h>
#include <java/io/CharArrayReader.h>
#include <java/io/CharArrayWriter.h>
#include <java/io/CharConversionException.h>
#include <java/io/Closeable.h>
#include <java/io/Console.h>
#include <java/io/Console$1.h>
#include <java/io/Console$2.h>
#include <java/io/Console$3.h>
#include <java/io/Console$LineReader.h>
#include <java/io/DataInput.h>
#include <java/io/DataInputStream.h>
#include <java/io/DataOutput.h>
#include <java/io/DataOutputStream.h>
#include <java/io/DefaultFileSystem.h>
#include <java/io/DeleteOnExitHook.h>
#include <java/io/DeleteOnExitHook$1.h>
#include <java/io/EOFException.h>
#include <java/io/ExpiringCache.h>
#include <java/io/ExpiringCache$1.h>
#include <java/io/ExpiringCache$Entry.h>
#include <java/io/Externalizable.h>
#include <java/io/File.h>
#include <java/io/File$PathStatus.h>
#include <java/io/File$TempDirectory.h>
#include <java/io/FileCleanable.h>
#include <java/io/FileDescriptor.h>
#include <java/io/FileDescriptor$1.h>
#include <java/io/FileFilter.h>
#include <java/io/FileInputStream.h>
#include <java/io/FileInputStream$1.h>
#include <java/io/FileNotFoundException.h>
#include <java/io/FileOutputStream.h>
#include <java/io/FileOutputStream$1.h>
#include <java/io/FilePermission.h>
#include <java/io/FilePermission$1.h>
#include <java/io/FilePermission$2.h>
#include <java/io/FilePermissionCollection.h>
#include <java/io/FilePermissionCollection$1.h>
#include <java/io/FileReader.h>
#include <java/io/FileSystem.h>
#include <java/io/FileWriter.h>
#include <java/io/FilenameFilter.h>
#include <java/io/FilterInputStream.h>
#include <java/io/FilterOutputStream.h>
#include <java/io/FilterReader.h>
#include <java/io/FilterWriter.h>
#include <java/io/Flushable.h>
#include <java/io/IOError.h>
#include <java/io/IOException.h>
#include <java/io/InputStream.h>
#include <java/io/InputStream$1.h>
#include <java/io/InputStreamReader.h>
#include <java/io/InterruptedIOException.h>
#include <java/io/InvalidClassException.h>
#include <java/io/InvalidObjectException.h>
#include <java/io/LineNumberInputStream.h>
#include <java/io/LineNumberReader.h>
#include <java/io/NotActiveException.h>
#include <java/io/NotSerializableException.h>
#include <java/io/ObjectInput.h>
#include <java/io/ObjectInputFilter.h>
#include <java/io/ObjectInputFilter$Config.h>
#include <java/io/ObjectInputFilter$Config$BuiltinFilterFactory.h>
#include <java/io/ObjectInputFilter$Config$Global.h>
#include <java/io/ObjectInputFilter$Config$MergeFilter.h>
#include <java/io/ObjectInputFilter$Config$PredicateFilter.h>
#include <java/io/ObjectInputFilter$Config$RejectUndecidedFilter.h>
#include <java/io/ObjectInputFilter$Config$RejectUndecidedFilter$SerialInfo.h>
#include <java/io/ObjectInputFilter$FilterInfo.h>
#include <java/io/ObjectInputFilter$Status.h>
#include <java/io/ObjectInputStream.h>
#include <java/io/ObjectInputStream$1.h>
#include <java/io/ObjectInputStream$BlockDataInputStream.h>
#include <java/io/ObjectInputStream$Caches.h>
#include <java/io/ObjectInputStream$FieldValues.h>
#include <java/io/ObjectInputStream$FilterValues.h>
#include <java/io/ObjectInputStream$GetField.h>
#include <java/io/ObjectInputStream$HandleTable.h>
#include <java/io/ObjectInputStream$HandleTable$HandleList.h>
#include <java/io/ObjectInputStream$Logging.h>
#include <java/io/ObjectInputStream$PeekInputStream.h>
#include <java/io/ObjectInputStream$ValidationList.h>
#include <java/io/ObjectInputStream$ValidationList$1.h>
#include <java/io/ObjectInputStream$ValidationList$Callback.h>
#include <java/io/ObjectInputValidation.h>
#include <java/io/ObjectOutput.h>
#include <java/io/ObjectOutputStream.h>
#include <java/io/ObjectOutputStream$1.h>
#include <java/io/ObjectOutputStream$BlockDataOutputStream.h>
#include <java/io/ObjectOutputStream$Caches.h>
#include <java/io/ObjectOutputStream$DebugTraceInfoStack.h>
#include <java/io/ObjectOutputStream$HandleTable.h>
#include <java/io/ObjectOutputStream$PutField.h>
#include <java/io/ObjectOutputStream$PutFieldImpl.h>
#include <java/io/ObjectOutputStream$ReplaceTable.h>
#include <java/io/ObjectStreamClass.h>
#include <java/io/ObjectStreamClass$1.h>
#include <java/io/ObjectStreamClass$2.h>
#include <java/io/ObjectStreamClass$3.h>
#include <java/io/ObjectStreamClass$4.h>
#include <java/io/ObjectStreamClass$5.h>
#include <java/io/ObjectStreamClass$Caches.h>
#include <java/io/ObjectStreamClass$ClassDataSlot.h>
#include <java/io/ObjectStreamClass$DeserializationConstructorsCache.h>
#include <java/io/ObjectStreamClass$DeserializationConstructorsCache$Key.h>
#include <java/io/ObjectStreamClass$DeserializationConstructorsCache$Key$Impl.h>
#include <java/io/ObjectStreamClass$DeserializationConstructorsCache$Key$Lookup.h>
#include <java/io/ObjectStreamClass$EntryFuture.h>
#include <java/io/ObjectStreamClass$EntryFuture$1.h>
#include <java/io/ObjectStreamClass$ExceptionInfo.h>
#include <java/io/ObjectStreamClass$FieldReflector.h>
#include <java/io/ObjectStreamClass$FieldReflectorKey.h>
#include <java/io/ObjectStreamClass$MemberSignature.h>
#include <java/io/ObjectStreamClass$RecordSupport.h>
#include <java/io/ObjectStreamClass$WeakClassKey.h>
#include <java/io/ObjectStreamConstants.h>
#include <java/io/ObjectStreamException.h>
#include <java/io/ObjectStreamField.h>
#include <java/io/OptionalDataException.h>
#include <java/io/OutputStream.h>
#include <java/io/OutputStream$1.h>
#include <java/io/OutputStreamWriter.h>
#include <java/io/PipedInputStream.h>
#include <java/io/PipedOutputStream.h>
#include <java/io/PipedReader.h>
#include <java/io/PipedWriter.h>
#include <java/io/PrintStream.h>
#include <java/io/PrintWriter.h>
#include <java/io/PushbackInputStream.h>
#include <java/io/PushbackReader.h>
#include <java/io/RandomAccessFile.h>
#include <java/io/RandomAccessFile$1.h>
#include <java/io/RandomAccessFile$2.h>
#include <java/io/Reader.h>
#include <java/io/Reader$1.h>
#include <java/io/SequenceInputStream.h>
#include <java/io/Serial.h>
#include <java/io/SerialCallbackContext.h>
#include <java/io/Serializable.h>
#include <java/io/SerializablePermission.h>
#include <java/io/StreamCorruptedException.h>
#include <java/io/StreamTokenizer.h>
#include <java/io/StringBufferInputStream.h>
#include <java/io/StringReader.h>
#include <java/io/StringWriter.h>
#include <java/io/SyncFailedException.h>
#include <java/io/UTFDataFormatException.h>
#include <java/io/UncheckedIOException.h>
#include <java/io/UnixFileSystem.h>
#include <java/io/UnsupportedEncodingException.h>
#include <java/io/WriteAbortedException.h>
#include <java/io/Writer.h>
#include <java/io/Writer$1.h>
#include <java/lang/AbstractMethodError.h>
#include <java/lang/AbstractStringBuilder.h>
#include <java/lang/Appendable.h>
#include <java/lang/ApplicationShutdownHooks.h>
#include <java/lang/ApplicationShutdownHooks$1.h>
#include <java/lang/ArithmeticException.h>
#include <java/lang/ArrayIndexOutOfBoundsException.h>
#include <java/lang/ArrayStoreException.h>
#include <java/lang/AssertionError.h>
#include <java/lang/AssertionStatusDirectives.h>
#include <java/lang/AutoCloseable.h>
#include <java/lang/Boolean.h>
#include <java/lang/BootstrapMethodError.h>
#include <java/lang/Byte.h>
#include <java/lang/Byte$ByteCache.h>
#include <java/lang/CharSequence.h>
#include <java/lang/CharSequence$1CharIterator.h>
#include <java/lang/CharSequence$1CodePointIterator.h>
#include <java/lang/Character.h>
#include <java/lang/Character$CharacterCache.h>
#include <java/lang/Character$Subset.h>
#include <java/lang/Character$UnicodeBlock.h>
#include <java/lang/Character$UnicodeScript.h>
#include <java/lang/CharacterData.h>
#include <java/lang/CharacterData00.h>
#include <java/lang/CharacterData01.h>
#include <java/lang/CharacterData02.h>
#include <java/lang/CharacterData03.h>
#include <java/lang/CharacterData0E.h>
#include <java/lang/CharacterDataLatin1.h>
#include <java/lang/CharacterDataPrivateUse.h>
#include <java/lang/CharacterDataUndefined.h>
#include <java/lang/CharacterName.h>
#include <java/lang/CharacterName$1.h>
#include <java/lang/Class.h>
#include <java/lang/Class$1.h>
#include <java/lang/Class$2.h>
#include <java/lang/Class$3.h>
#include <java/lang/Class$AnnotationData.h>
#include <java/lang/Class$Atomic.h>
#include <java/lang/Class$EnclosingMethodInfo.h>
#include <java/lang/Class$ReflectionData.h>
#include <java/lang/ClassCastException.h>
#include <java/lang/ClassCircularityError.h>
#include <java/lang/ClassFormatError.h>
#include <java/lang/ClassLoader.h>
#include <java/lang/ClassLoader$1.h>
#include <java/lang/ClassLoader$ParallelLoaders.h>
#include <java/lang/ClassNotFoundException.h>
#include <java/lang/ClassValue.h>
#include <java/lang/ClassValue$ClassValueMap.h>
#include <java/lang/ClassValue$Entry.h>
#include <java/lang/ClassValue$Identity.h>
#include <java/lang/ClassValue$Version.h>
#include <java/lang/CloneNotSupportedException.h>
#include <java/lang/Cloneable.h>
#include <java/lang/Comparable.h>
#include <java/lang/Compiler.h>
#include <java/lang/CompoundEnumeration.h>
#include <java/lang/ConditionalSpecialCasing.h>
#include <java/lang/ConditionalSpecialCasing$Entry.h>
#include <java/lang/Deprecated.h>
#include <java/lang/Double.h>
#include <java/lang/Enum.h>
#include <java/lang/Enum$EnumDesc.h>
#include <java/lang/EnumConstantNotPresentException.h>
#include <java/lang/Error.h>
#include <java/lang/Exception.h>
#include <java/lang/ExceptionInInitializerError.h>
#include <java/lang/FdLibm.h>
#include <java/lang/FdLibm$Cbrt.h>
#include <java/lang/FdLibm$Exp.h>
#include <java/lang/FdLibm$Hypot.h>
#include <java/lang/FdLibm$Pow.h>
#include <java/lang/Float.h>
#include <java/lang/FunctionalInterface.h>
#include <java/lang/IllegalAccessError.h>
#include <java/lang/IllegalAccessException.h>
#include <java/lang/IllegalArgumentException.h>
#include <java/lang/IllegalCallerException.h>
#include <java/lang/IllegalMonitorStateException.h>
#include <java/lang/IllegalStateException.h>
#include <java/lang/IllegalThreadStateException.h>
#include <java/lang/IncompatibleClassChangeError.h>
#include <java/lang/IndexOutOfBoundsException.h>
#include <java/lang/InheritableThreadLocal.h>
#include <java/lang/InstantiationError.h>
#include <java/lang/InstantiationException.h>
#include <java/lang/Integer.h>
#include <java/lang/Integer$IntegerCache.h>
#include <java/lang/InternalError.h>
#include <java/lang/InterruptedException.h>
#include <java/lang/Iterable.h>
#include <java/lang/LayerInstantiationException.h>
#include <java/lang/LinkageError.h>
#include <java/lang/LiveStackFrame.h>
#include <java/lang/LiveStackFrame$PrimitiveSlot.h>
#include <java/lang/LiveStackFrameInfo.h>
#include <java/lang/LiveStackFrameInfo$PrimitiveSlot32.h>
#include <java/lang/LiveStackFrameInfo$PrimitiveSlot64.h>
#include <java/lang/Long.h>
#include <java/lang/Long$LongCache.h>
#include <java/lang/Math.h>
#include <java/lang/Math$RandomNumberGeneratorHolder.h>
#include <java/lang/Module.h>
#include <java/lang/Module$1.h>
#include <java/lang/Module$1DummyModuleInfo.h>
#include <java/lang/Module$2.h>
#include <java/lang/Module$ArchivedData.h>
#include <java/lang/Module$ReflectionData.h>
#include <java/lang/ModuleLayer.h>
#include <java/lang/ModuleLayer$Controller.h>
#include <java/lang/NamedPackage.h>
#include <java/lang/NegativeArraySizeException.h>
#include <java/lang/NoClassDefFoundError.h>
#include <java/lang/NoSuchFieldError.h>
#include <java/lang/NoSuchFieldException.h>
#include <java/lang/NoSuchMethodError.h>
#include <java/lang/NoSuchMethodException.h>
#include <java/lang/NullPointerException.h>
#include <java/lang/Number.h>
#include <java/lang/NumberFormatException.h>
#include <java/lang/Object.h>
#include <java/lang/OutOfMemoryError.h>
#include <java/lang/Override.h>
#include <java/lang/Package.h>
#include <java/lang/Package$1PackageInfoProxy.h>
#include <java/lang/Package$VersionInfo.h>
#include <java/lang/Process.h>
#include <java/lang/Process$1.h>
#include <java/lang/Process$CharsetHolder.h>
#include <java/lang/Process$PipeInputStream.h>
#include <java/lang/ProcessBuilder.h>
#include <java/lang/ProcessBuilder$NullInputStream.h>
#include <java/lang/ProcessBuilder$NullOutputStream.h>
#include <java/lang/ProcessBuilder$Redirect.h>
#include <java/lang/ProcessBuilder$Redirect$1.h>
#include <java/lang/ProcessBuilder$Redirect$2.h>
#include <java/lang/ProcessBuilder$Redirect$3.h>
#include <java/lang/ProcessBuilder$Redirect$4.h>
#include <java/lang/ProcessBuilder$Redirect$5.h>
#include <java/lang/ProcessBuilder$Redirect$6.h>
#include <java/lang/ProcessBuilder$Redirect$Type.h>
#include <java/lang/ProcessBuilder$RedirectPipeImpl.h>
#include <java/lang/ProcessEnvironment.h>
#include <java/lang/ProcessEnvironment$ExternalData.h>
#include <java/lang/ProcessEnvironment$StringEntry.h>
#include <java/lang/ProcessEnvironment$StringEntrySet.h>
#include <java/lang/ProcessEnvironment$StringEntrySet$1.h>
#include <java/lang/ProcessEnvironment$StringEntrySet$2.h>
#include <java/lang/ProcessEnvironment$StringEnvironment.h>
#include <java/lang/ProcessEnvironment$StringKeySet.h>
#include <java/lang/ProcessEnvironment$StringKeySet$1.h>
#include <java/lang/ProcessEnvironment$StringValues.h>
#include <java/lang/ProcessEnvironment$StringValues$1.h>
#include <java/lang/ProcessEnvironment$Value.h>
#include <java/lang/ProcessEnvironment$Variable.h>
#include <java/lang/ProcessHandle.h>
#include <java/lang/ProcessHandle$Info.h>
#include <java/lang/ProcessHandleImpl.h>
#include <java/lang/ProcessHandleImpl$1.h>
#include <java/lang/ProcessHandleImpl$ExitCompletion.h>
#include <java/lang/ProcessHandleImpl$Info.h>
#include <java/lang/ProcessImpl.h>
#include <java/lang/ProcessImpl$1.h>
#include <java/lang/ProcessImpl$DeferredCloseInputStream.h>
#include <java/lang/ProcessImpl$DeferredCloseProcessPipeInputStream.h>
#include <java/lang/ProcessImpl$LaunchMechanism.h>
#include <java/lang/ProcessImpl$Platform.h>
#include <java/lang/ProcessImpl$ProcessPipeInputStream.h>
#include <java/lang/ProcessImpl$ProcessPipeOutputStream.h>
#include <java/lang/PublicMethods.h>
#include <java/lang/PublicMethods$Key.h>
#include <java/lang/PublicMethods$MethodList.h>
#include <java/lang/Readable.h>
#include <java/lang/Record.h>
#include <java/lang/ReflectiveOperationException.h>
#include <java/lang/Runnable.h>
#include <java/lang/Runtime.h>
#include <java/lang/Runtime$Version.h>
#include <java/lang/Runtime$VersionPattern.h>
#include <java/lang/RuntimeException.h>
#include <java/lang/RuntimePermission.h>
#include <java/lang/SafeVarargs.h>
#include <java/lang/SecurityException.h>
#include <java/lang/SecurityManager.h>
#include <java/lang/SecurityManager$1.h>
#include <java/lang/SecurityManager$2.h>
#include <java/lang/Short.h>
#include <java/lang/Short$ShortCache.h>
#include <java/lang/Shutdown.h>
#include <java/lang/Shutdown$Lock.h>
#include <java/lang/StackFrameInfo.h>
#include <java/lang/StackOverflowError.h>
#include <java/lang/StackStreamFactory.h>
#include <java/lang/StackStreamFactory$1.h>
#include <java/lang/StackStreamFactory$AbstractStackWalker.h>
#include <java/lang/StackStreamFactory$CallerClassFinder.h>
#include <java/lang/StackStreamFactory$CallerClassFinder$ClassBuffer.h>
#include <java/lang/StackStreamFactory$FrameBuffer.h>
#include <java/lang/StackStreamFactory$LiveStackInfoTraverser.h>
#include <java/lang/StackStreamFactory$LiveStackInfoTraverser$LiveStackFrameBuffer.h>
#include <java/lang/StackStreamFactory$StackFrameTraverser.h>
#include <java/lang/StackStreamFactory$StackFrameTraverser$StackFrameBuffer.h>
#include <java/lang/StackStreamFactory$WalkerState.h>
#include <java/lang/StackTraceElement.h>
#include <java/lang/StackTraceElement$HashedModules.h>
#include <java/lang/StackWalker.h>
#include <java/lang/StackWalker$ExtendedOption.h>
#include <java/lang/StackWalker$Option.h>
#include <java/lang/StackWalker$StackFrame.h>
#include <java/lang/StrictMath.h>
#include <java/lang/StrictMath$RandomNumberGeneratorHolder.h>
#include <java/lang/String.h>
#include <java/lang/String$CaseInsensitiveComparator.h>
#include <java/lang/StringBuffer.h>
#include <java/lang/StringBuilder.h>
#include <java/lang/StringCoding.h>
#include <java/lang/StringConcatHelper.h>
#include <java/lang/StringIndexOutOfBoundsException.h>
#include <java/lang/StringLatin1.h>
#include <java/lang/StringLatin1$CharsSpliterator.h>
#include <java/lang/StringLatin1$LinesSpliterator.h>
#include <java/lang/StringUTF16.h>
#include <java/lang/StringUTF16$CharsSpliterator.h>
#include <java/lang/StringUTF16$CodePointsSpliterator.h>
#include <java/lang/StringUTF16$LinesSpliterator.h>
#include <java/lang/SuppressWarnings.h>
#include <java/lang/System.h>
#include <java/lang/System$1.h>
#include <java/lang/System$2.h>
#include <java/lang/System$CallersHolder.h>
#include <java/lang/System$Logger.h>
#include <java/lang/System$Logger$Level.h>
#include <java/lang/System$LoggerFinder.h>
#include <java/lang/Terminator.h>
#include <java/lang/Terminator$1.h>
#include <java/lang/Thread.h>
#include <java/lang/Thread$1.h>
#include <java/lang/Thread$Caches.h>
#include <java/lang/Thread$State.h>
#include <java/lang/Thread$UncaughtExceptionHandler.h>
#include <java/lang/Thread$WeakClassKey.h>
#include <java/lang/ThreadDeath.h>
#include <java/lang/ThreadGroup.h>
#include <java/lang/ThreadLocal.h>
#include <java/lang/ThreadLocal$SuppliedThreadLocal.h>
#include <java/lang/ThreadLocal$ThreadLocalMap.h>
#include <java/lang/ThreadLocal$ThreadLocalMap$Entry.h>
#include <java/lang/Throwable.h>
#include <java/lang/Throwable$PrintStreamOrWriter.h>
#include <java/lang/Throwable$SentinelHolder.h>
#include <java/lang/Throwable$WrappedPrintStream.h>
#include <java/lang/Throwable$WrappedPrintWriter.h>
#include <java/lang/TypeNotPresentException.h>
#include <java/lang/UnknownError.h>
#include <java/lang/UnsatisfiedLinkError.h>
#include <java/lang/UnsupportedClassVersionError.h>
#include <java/lang/UnsupportedOperationException.h>
#include <java/lang/VerifyError.h>
#include <java/lang/VersionProps.h>
#include <java/lang/VirtualMachineError.h>
#include <java/lang/Void.h>
#include <java/lang/WeakPairMap.h>
#include <java/lang/WeakPairMap$Pair.h>
#include <java/lang/WeakPairMap$Pair$Lookup.h>
#include <java/lang/WeakPairMap$Pair$Weak.h>
#include <java/lang/WeakPairMap$Pair$Weak$1.h>
#include <java/lang/WeakPairMap$WeakRefPeer.h>
#include <java/lang/annotation/Annotation.h>
#include <java/lang/annotation/AnnotationFormatError.h>
#include <java/lang/annotation/AnnotationTypeMismatchException.h>
#include <java/lang/annotation/Documented.h>
#include <java/lang/annotation/ElementType.h>
#include <java/lang/annotation/IncompleteAnnotationException.h>
#include <java/lang/annotation/Inherited.h>
#include <java/lang/annotation/Native.h>
#include <java/lang/annotation/Repeatable.h>
#include <java/lang/annotation/Retention.h>
#include <java/lang/annotation/RetentionPolicy.h>
#include <java/lang/annotation/Target.h>
#include <java/lang/constant/AsTypeMethodHandleDesc.h>
#include <java/lang/constant/ClassDesc.h>
#include <java/lang/constant/Constable.h>
#include <java/lang/constant/ConstantDesc.h>
#include <java/lang/constant/ConstantDescs.h>
#include <java/lang/constant/ConstantUtils.h>
#include <java/lang/constant/DirectMethodHandleDesc.h>
#include <java/lang/constant/DirectMethodHandleDesc$1.h>
#include <java/lang/constant/DirectMethodHandleDesc$Kind.h>
#include <java/lang/constant/DirectMethodHandleDescImpl.h>
#include <java/lang/constant/DirectMethodHandleDescImpl$1.h>
#include <java/lang/constant/DynamicCallSiteDesc.h>
#include <java/lang/constant/DynamicConstantDesc.h>
#include <java/lang/constant/DynamicConstantDesc$AnonymousDynamicConstantDesc.h>
#include <java/lang/constant/DynamicConstantDesc$CanonicalMapHolder.h>
#include <java/lang/constant/MethodHandleDesc.h>
#include <java/lang/constant/MethodHandleDesc$1.h>
#include <java/lang/constant/MethodTypeDesc.h>
#include <java/lang/constant/MethodTypeDescImpl.h>
#include <java/lang/constant/MethodTypeDescImpl$1.h>
#include <java/lang/constant/PrimitiveClassDescImpl.h>
#include <java/lang/constant/ReferenceClassDescImpl.h>
#include <java/lang/invoke/AbstractConstantGroup.h>
#include <java/lang/invoke/AbstractConstantGroup$AsIterator.h>
#include <java/lang/invoke/AbstractConstantGroup$AsList.h>
#include <java/lang/invoke/AbstractConstantGroup$BSCIWithCache.h>
#include <java/lang/invoke/AbstractConstantGroup$SubGroup.h>
#include <java/lang/invoke/AbstractConstantGroup$WithCache.h>
#include <java/lang/invoke/AbstractValidatingLambdaMetafactory.h>
#include <java/lang/invoke/BootstrapCallInfo.h>
#include <java/lang/invoke/BootstrapMethodInvoker.h>
#include <java/lang/invoke/BootstrapMethodInvoker$PullAdapter.h>
#include <java/lang/invoke/BootstrapMethodInvoker$PushAdapter.h>
#include <java/lang/invoke/BootstrapMethodInvoker$VM_BSCI.h>
#include <java/lang/invoke/BoundMethodHandle.h>
#include <java/lang/invoke/BoundMethodHandle$1.h>
#include <java/lang/invoke/BoundMethodHandle$Specializer.h>
#include <java/lang/invoke/BoundMethodHandle$Specializer$Factory.h>
#include <java/lang/invoke/BoundMethodHandle$SpeciesData.h>
#include <java/lang/invoke/BoundMethodHandle$Species_L.h>
#include <java/lang/invoke/CallSite.h>
#include <java/lang/invoke/ClassSpecializer.h>
#include <java/lang/invoke/ClassSpecializer$1.h>
#include <java/lang/invoke/ClassSpecializer$Factory.h>
#include <java/lang/invoke/ClassSpecializer$Factory$1.h>
#include <java/lang/invoke/ClassSpecializer$Factory$1Var.h>
#include <java/lang/invoke/ClassSpecializer$SpeciesData.h>
#include <java/lang/invoke/ConstantBootstraps.h>
#include <java/lang/invoke/ConstantCallSite.h>
#include <java/lang/invoke/ConstantGroup.h>
#include <java/lang/invoke/ConstantGroup$1.h>
#include <java/lang/invoke/ConstantGroup$1Impl.h>
#include <java/lang/invoke/DelegatingMethodHandle.h>
#include <java/lang/invoke/DelegatingMethodHandle$Holder.h>
#include <java/lang/invoke/DirectMethodHandle.h>
#include <java/lang/invoke/DirectMethodHandle$1.h>
#include <java/lang/invoke/DirectMethodHandle$2.h>
#include <java/lang/invoke/DirectMethodHandle$Accessor.h>
#include <java/lang/invoke/DirectMethodHandle$Constructor.h>
#include <java/lang/invoke/DirectMethodHandle$EnsureInitialized.h>
#include <java/lang/invoke/DirectMethodHandle$Holder.h>
#include <java/lang/invoke/DirectMethodHandle$Interface.h>
#include <java/lang/invoke/DirectMethodHandle$Special.h>
#include <java/lang/invoke/DirectMethodHandle$StaticAccessor.h>
#include <java/lang/invoke/GenerateJLIClassesHelper.h>
#include <java/lang/invoke/GenerateJLIClassesHelper$HolderClassBuilder.h>
#include <java/lang/invoke/IndirectVarHandle.h>
#include <java/lang/invoke/InfoFromMemberName.h>
#include <java/lang/invoke/InfoFromMemberName$1.h>
#include <java/lang/invoke/InjectedProfile.h>
#include <java/lang/invoke/InnerClassLambdaMetafactory.h>
#include <java/lang/invoke/InnerClassLambdaMetafactory$1.h>
#include <java/lang/invoke/InnerClassLambdaMetafactory$2.h>
#include <java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.h>
#include <java/lang/invoke/InvokeDynamic.h>
#include <java/lang/invoke/InvokerBytecodeGenerator.h>
#include <java/lang/invoke/InvokerBytecodeGenerator$1.h>
#include <java/lang/invoke/InvokerBytecodeGenerator$2.h>
#include <java/lang/invoke/InvokerBytecodeGenerator$BytecodeGenerationException.h>
#include <java/lang/invoke/InvokerBytecodeGenerator$ClassData.h>
#include <java/lang/invoke/Invokers.h>
#include <java/lang/invoke/Invokers$Holder.h>
#include <java/lang/invoke/Invokers$Lazy.h>
#include <java/lang/invoke/LambdaConversionException.h>
#include <java/lang/invoke/LambdaForm.h>
#include <java/lang/invoke/LambdaForm$1.h>
#include <java/lang/invoke/LambdaForm$BasicType.h>
#include <java/lang/invoke/LambdaForm$Compiled.h>
#include <java/lang/invoke/LambdaForm$Holder.h>
#include <java/lang/invoke/LambdaForm$Kind.h>
#include <java/lang/invoke/LambdaForm$Name.h>
#include <java/lang/invoke/LambdaForm$NamedFunction.h>
#include <java/lang/invoke/LambdaFormBuffer.h>
#include <java/lang/invoke/LambdaFormEditor.h>
#include <java/lang/invoke/LambdaFormEditor$1.h>
#include <java/lang/invoke/LambdaFormEditor$Transform.h>
#include <java/lang/invoke/LambdaFormEditor$TransformKey.h>
#include <java/lang/invoke/LambdaMetafactory.h>
#include <java/lang/invoke/LambdaProxyClassArchive.h>
#include <java/lang/invoke/MemberName.h>
#include <java/lang/invoke/MemberName$Factory.h>
#include <java/lang/invoke/MemoryAccessVarHandleBase.h>
#include <java/lang/invoke/MemoryAccessVarHandleByteHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleCharHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleDoubleHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleFloatHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleIntHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleLongHelper.h>
#include <java/lang/invoke/MemoryAccessVarHandleShortHelper.h>
#include <java/lang/invoke/MethodHandle.h>
#include <java/lang/invoke/MethodHandle$1.h>
#include <java/lang/invoke/MethodHandle$PolymorphicSignature.h>
#include <java/lang/invoke/MethodHandleImpl.h>
#include <java/lang/invoke/MethodHandleImpl$1.h>
#include <java/lang/invoke/MethodHandleImpl$2.h>
#include <java/lang/invoke/MethodHandleImpl$ArrayAccess.h>
#include <java/lang/invoke/MethodHandleImpl$ArrayAccessor.h>
#include <java/lang/invoke/MethodHandleImpl$ArrayAccessor$1.h>
#include <java/lang/invoke/MethodHandleImpl$AsVarargsCollector.h>
#include <java/lang/invoke/MethodHandleImpl$BindCaller.h>
#include <java/lang/invoke/MethodHandleImpl$BindCaller$1.h>
#include <java/lang/invoke/MethodHandleImpl$CasesHolder.h>
#include <java/lang/invoke/MethodHandleImpl$CountingWrapper.h>
#include <java/lang/invoke/MethodHandleImpl$CountingWrapper$1.h>
#include <java/lang/invoke/MethodHandleImpl$Intrinsic.h>
#include <java/lang/invoke/MethodHandleImpl$IntrinsicMethodHandle.h>
#include <java/lang/invoke/MethodHandleImpl$LoopClauses.h>
#include <java/lang/invoke/MethodHandleImpl$Makers.h>
#include <java/lang/invoke/MethodHandleImpl$Makers$1.h>
#include <java/lang/invoke/MethodHandleImpl$Makers$2.h>
#include <java/lang/invoke/MethodHandleImpl$Makers$3.h>
#include <java/lang/invoke/MethodHandleImpl$TableSwitchCacheKey.h>
#include <java/lang/invoke/MethodHandleImpl$WrappedMember.h>
#include <java/lang/invoke/MethodHandleInfo.h>
#include <java/lang/invoke/MethodHandleNatives.h>
#include <java/lang/invoke/MethodHandleNatives$CallSiteContext.h>
#include <java/lang/invoke/MethodHandleNatives$Constants.h>
#include <java/lang/invoke/MethodHandleProxies.h>
#include <java/lang/invoke/MethodHandleProxies$1.h>
#include <java/lang/invoke/MethodHandleProxies$2.h>
#include <java/lang/invoke/MethodHandleStatics.h>
#include <java/lang/invoke/MethodHandles.h>
#include <java/lang/invoke/MethodHandles$1.h>
#include <java/lang/invoke/MethodHandles$Lookup.h>
#include <java/lang/invoke/MethodHandles$Lookup$ClassDefiner.h>
#include <java/lang/invoke/MethodHandles$Lookup$ClassFile.h>
#include <java/lang/invoke/MethodHandles$Lookup$ClassOption.h>
#include <java/lang/invoke/MethodType.h>
#include <java/lang/invoke/MethodType$ConcurrentWeakInternSet.h>
#include <java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry.h>
#include <java/lang/invoke/MethodType$OffsetHolder.h>
#include <java/lang/invoke/MethodTypeForm.h>
#include <java/lang/invoke/MutableCallSite.h>
#include <java/lang/invoke/NativeMethodHandle.h>
#include <java/lang/invoke/NativeMethodHandle$Lazy.h>
#include <java/lang/invoke/ProxyClassesDumper.h>
#include <java/lang/invoke/ProxyClassesDumper$1.h>
#include <java/lang/invoke/ResolvedMethodName.h>
#include <java/lang/invoke/SerializedLambda.h>
#include <java/lang/invoke/SerializedLambda$1.h>
#include <java/lang/invoke/SimpleMethodHandle.h>
#include <java/lang/invoke/StringConcatException.h>
#include <java/lang/invoke/StringConcatFactory.h>
#include <java/lang/invoke/StringConcatFactory$1.h>
#include <java/lang/invoke/StringConcatFactory$2.h>
#include <java/lang/invoke/StringConcatFactory$3.h>
#include <java/lang/invoke/SwitchPoint.h>
#include <java/lang/invoke/TypeConvertingMethodAdapter.h>
#include <java/lang/invoke/TypeDescriptor.h>
#include <java/lang/invoke/TypeDescriptor$OfField.h>
#include <java/lang/invoke/TypeDescriptor$OfMethod.h>
#include <java/lang/invoke/VarForm.h>
#include <java/lang/invoke/VarHandle.h>
#include <java/lang/invoke/VarHandle$1.h>
#include <java/lang/invoke/VarHandle$2.h>
#include <java/lang/invoke/VarHandle$AccessDescriptor.h>
#include <java/lang/invoke/VarHandle$AccessMode.h>
#include <java/lang/invoke/VarHandle$AccessType.h>
#include <java/lang/invoke/VarHandle$TypesAndInvokers.h>
#include <java/lang/invoke/VarHandle$VarHandleDesc.h>
#include <java/lang/invoke/VarHandle$VarHandleDesc$Kind.h>
#include <java/lang/invoke/VarHandleBooleans.h>
#include <java/lang/invoke/VarHandleBooleans$Array.h>
#include <java/lang/invoke/VarHandleBooleans$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleBooleans$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleBooleans$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleBooleans$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleByteArrayAsChars.h>
#include <java/lang/invoke/VarHandleByteArrayAsChars$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsChars$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsChars$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsDoubles.h>
#include <java/lang/invoke/VarHandleByteArrayAsDoubles$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsDoubles$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsFloats.h>
#include <java/lang/invoke/VarHandleByteArrayAsFloats$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsFloats$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsFloats$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsInts.h>
#include <java/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsInts$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsInts$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsLongs.h>
#include <java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsLongs$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsShorts.h>
#include <java/lang/invoke/VarHandleByteArrayAsShorts$ArrayHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsShorts$ByteArrayViewVarHandle.h>
#include <java/lang/invoke/VarHandleByteArrayAsShorts$ByteBufferHandle.h>
#include <java/lang/invoke/VarHandleByteArrayBase.h>
#include <java/lang/invoke/VarHandleBytes.h>
#include <java/lang/invoke/VarHandleBytes$Array.h>
#include <java/lang/invoke/VarHandleBytes$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleBytes$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleBytes$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleBytes$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleChars.h>
#include <java/lang/invoke/VarHandleChars$Array.h>
#include <java/lang/invoke/VarHandleChars$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleChars$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleChars$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleChars$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleDoubles.h>
#include <java/lang/invoke/VarHandleDoubles$Array.h>
#include <java/lang/invoke/VarHandleDoubles$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleDoubles$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleDoubles$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleDoubles$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleFloats.h>
#include <java/lang/invoke/VarHandleFloats$Array.h>
#include <java/lang/invoke/VarHandleFloats$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleFloats$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleFloats$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleFloats$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleGuards.h>
#include <java/lang/invoke/VarHandleInts.h>
#include <java/lang/invoke/VarHandleInts$Array.h>
#include <java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleInts$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleInts$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleLongs.h>
#include <java/lang/invoke/VarHandleLongs$Array.h>
#include <java/lang/invoke/VarHandleLongs$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleLongs$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleLongs$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleReferences.h>
#include <java/lang/invoke/VarHandleReferences$Array.h>
#include <java/lang/invoke/VarHandleReferences$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleReferences$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleReferences$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandleShorts.h>
#include <java/lang/invoke/VarHandleShorts$Array.h>
#include <java/lang/invoke/VarHandleShorts$FieldInstanceReadOnly.h>
#include <java/lang/invoke/VarHandleShorts$FieldInstanceReadWrite.h>
#include <java/lang/invoke/VarHandleShorts$FieldStaticReadOnly.h>
#include <java/lang/invoke/VarHandleShorts$FieldStaticReadWrite.h>
#include <java/lang/invoke/VarHandles.h>
#include <java/lang/invoke/VarHandles$1.h>
#include <java/lang/invoke/VarHandles$2.h>
#include <java/lang/invoke/VolatileCallSite.h>
#include <java/lang/invoke/WrongMethodTypeException.h>
#include <java/lang/module/Configuration.h>
#include <java/lang/module/FindException.h>
#include <java/lang/module/InvalidModuleDescriptorException.h>
#include <java/lang/module/ModuleDescriptor.h>
#include <java/lang/module/ModuleDescriptor$1.h>
#include <java/lang/module/ModuleDescriptor$Builder.h>
#include <java/lang/module/ModuleDescriptor$Exports.h>
#include <java/lang/module/ModuleDescriptor$Exports$Modifier.h>
#include <java/lang/module/ModuleDescriptor$Modifier.h>
#include <java/lang/module/ModuleDescriptor$Opens.h>
#include <java/lang/module/ModuleDescriptor$Opens$Modifier.h>
#include <java/lang/module/ModuleDescriptor$Provides.h>
#include <java/lang/module/ModuleDescriptor$Requires.h>
#include <java/lang/module/ModuleDescriptor$Requires$Modifier.h>
#include <java/lang/module/ModuleDescriptor$Version.h>
#include <java/lang/module/ModuleFinder.h>
#include <java/lang/module/ModuleFinder$1.h>
#include <java/lang/module/ModuleFinder$2.h>
#include <java/lang/module/ModuleReader.h>
#include <java/lang/module/ModuleReference.h>
#include <java/lang/module/ResolutionException.h>
#include <java/lang/module/ResolvedModule.h>
#include <java/lang/module/Resolver.h>
#include <java/lang/module/RuntimeModuleReference.h>
#include <java/lang/ref/Cleaner.h>
#include <java/lang/ref/Cleaner$1.h>
#include <java/lang/ref/Cleaner$Cleanable.h>
#include <java/lang/ref/FinalReference.h>
#include <java/lang/ref/Finalizer.h>
#include <java/lang/ref/Finalizer$1.h>
#include <java/lang/ref/Finalizer$2.h>
#include <java/lang/ref/Finalizer$FinalizerThread.h>
#include <java/lang/ref/FinalizerHistogram.h>
#include <java/lang/ref/FinalizerHistogram$Entry.h>
#include <java/lang/ref/PhantomReference.h>
#include <java/lang/ref/Reference.h>
#include <java/lang/ref/Reference$1.h>
#include <java/lang/ref/Reference$ReferenceHandler.h>
#include <java/lang/ref/ReferenceQueue.h>
#include <java/lang/ref/ReferenceQueue$Lock.h>
#include <java/lang/ref/ReferenceQueue$Null.h>
#include <java/lang/ref/SoftReference.h>
#include <java/lang/ref/WeakReference.h>
#include <java/lang/reflect/AccessibleObject.h>
#include <java/lang/reflect/AccessibleObject$Cache.h>
#include <java/lang/reflect/AnnotatedArrayType.h>
#include <java/lang/reflect/AnnotatedElement.h>
#include <java/lang/reflect/AnnotatedParameterizedType.h>
#include <java/lang/reflect/AnnotatedType.h>
#include <java/lang/reflect/AnnotatedTypeVariable.h>
#include <java/lang/reflect/AnnotatedWildcardType.h>
#include <java/lang/reflect/Array.h>
#include <java/lang/reflect/Constructor.h>
#include <java/lang/reflect/Executable.h>
#include <java/lang/reflect/Field.h>
#include <java/lang/reflect/GenericArrayType.h>
#include <java/lang/reflect/GenericDeclaration.h>
#include <java/lang/reflect/GenericSignatureFormatError.h>
#include <java/lang/reflect/InaccessibleObjectException.h>
#include <java/lang/reflect/InvocationHandler.h>
#include <java/lang/reflect/InvocationTargetException.h>
#include <java/lang/reflect/MalformedParameterizedTypeException.h>
#include <java/lang/reflect/MalformedParametersException.h>
#include <java/lang/reflect/Member.h>
#include <java/lang/reflect/Method.h>
#include <java/lang/reflect/Modifier.h>
#include <java/lang/reflect/Parameter.h>
#include <java/lang/reflect/ParameterizedType.h>
#include <java/lang/reflect/Proxy.h>
#include <java/lang/reflect/Proxy$1.h>
#include <java/lang/reflect/Proxy$2.h>
#include <java/lang/reflect/Proxy$InvocationException.h>
#include <java/lang/reflect/Proxy$ProxyBuilder.h>
#include <java/lang/reflect/Proxy$ProxyBuilder$1.h>
#include <java/lang/reflect/ProxyGenerator.h>
#include <java/lang/reflect/ProxyGenerator$1.h>
#include <java/lang/reflect/ProxyGenerator$PrimitiveTypeInfo.h>
#include <java/lang/reflect/ProxyGenerator$ProxyMethod.h>
#include <java/lang/reflect/RecordComponent.h>
#include <java/lang/reflect/ReflectAccess.h>
#include <java/lang/reflect/ReflectPermission.h>
#include <java/lang/reflect/Type.h>
#include <java/lang/reflect/TypeVariable.h>
#include <java/lang/reflect/UndeclaredThrowableException.h>
#include <java/lang/reflect/WildcardType.h>
#include <java/lang/runtime/ObjectMethods.h>
#include <java/lang/runtime/ObjectMethods$1.h>
#include <java/lang/runtime/SwitchBootstraps.h>
#include <java/math/BigDecimal.h>
#include <java/math/BigDecimal$1.h>
#include <java/math/BigDecimal$LongOverflow.h>
#include <java/math/BigDecimal$StringBuilderHelper.h>
#include <java/math/BigDecimal$UnsafeHolder.h>
#include <java/math/BigInteger.h>
#include <java/math/BigInteger$UnsafeHolder.h>
#include <java/math/BitSieve.h>
#include <java/math/MathContext.h>
#include <java/math/MutableBigInteger.h>
#include <java/math/RoundingMode.h>
#include <java/math/SignedMutableBigInteger.h>
#include <java/net/AbstractPlainDatagramSocketImpl.h>
#include <java/net/AbstractPlainSocketImpl.h>
#include <java/net/Authenticator.h>
#include <java/net/Authenticator$RequestorType.h>
#include <java/net/BindException.h>
#include <java/net/CacheRequest.h>
#include <java/net/CacheResponse.h>
#include <java/net/ConnectException.h>
#include <java/net/ContentHandler.h>
#include <java/net/ContentHandlerFactory.h>
#include <java/net/CookieHandler.h>
#include <java/net/CookieManager.h>
#include <java/net/CookieManager$CookieComparator.h>
#include <java/net/CookiePolicy.h>
#include <java/net/CookiePolicy$1.h>
#include <java/net/CookiePolicy$2.h>
#include <java/net/CookiePolicy$3.h>
#include <java/net/CookieStore.h>
#include <java/net/DatagramPacket.h>
#include <java/net/DatagramSocket.h>
#include <java/net/DatagramSocket$1.h>
#include <java/net/DatagramSocketImpl.h>
#include <java/net/DatagramSocketImplFactory.h>
#include <java/net/DefaultDatagramSocketImplFactory.h>
#include <java/net/DefaultInterface.h>
#include <java/net/DelegatingSocketImpl.h>
#include <java/net/FactoryURLClassLoader.h>
#include <java/net/FileNameMap.h>
#include <java/net/HostPortrange.h>
#include <java/net/HttpConnectSocketImpl.h>
#include <java/net/HttpConnectSocketImpl$1.h>
#include <java/net/HttpConnectSocketImpl$2.h>
#include <java/net/HttpCookie.h>
#include <java/net/HttpCookie$1.h>
#include <java/net/HttpCookie$10.h>
#include <java/net/HttpCookie$11.h>
#include <java/net/HttpCookie$12.h>
#include <java/net/HttpCookie$2.h>
#include <java/net/HttpCookie$3.h>
#include <java/net/HttpCookie$4.h>
#include <java/net/HttpCookie$5.h>
#include <java/net/HttpCookie$6.h>
#include <java/net/HttpCookie$7.h>
#include <java/net/HttpCookie$8.h>
#include <java/net/HttpCookie$9.h>
#include <java/net/HttpCookie$CookieAttributeAssignor.h>
#include <java/net/HttpRetryException.h>
#include <java/net/HttpURLConnection.h>
#include <java/net/IDN.h>
#include <java/net/IDN$1.h>
#include <java/net/InMemoryCookieStore.h>
#include <java/net/Inet4Address.h>
#include <java/net/Inet4AddressImpl.h>
#include <java/net/Inet6Address.h>
#include <java/net/Inet6Address$Inet6AddressHolder.h>
#include <java/net/Inet6AddressImpl.h>
#include <java/net/InetAddress.h>
#include <java/net/InetAddress$1.h>
#include <java/net/InetAddress$Addresses.h>
#include <java/net/InetAddress$CachedAddresses.h>
#include <java/net/InetAddress$CachedLocalHost.h>
#include <java/net/InetAddress$HostsFileNameService.h>
#include <java/net/InetAddress$InetAddressHolder.h>
#include <java/net/InetAddress$NameService.h>
#include <java/net/InetAddress$NameServiceAddresses.h>
#include <java/net/InetAddress$PlatformNameService.h>
#include <java/net/InetAddressContainer.h>
#include <java/net/InetAddressImpl.h>
#include <java/net/InetAddressImplFactory.h>
#include <java/net/InetSocketAddress.h>
#include <java/net/InetSocketAddress$InetSocketAddressHolder.h>
#include <java/net/InterfaceAddress.h>
#include <java/net/JarURLConnection.h>
#include <java/net/MalformedURLException.h>
#include <java/net/MulticastSocket.h>
#include <java/net/NetMulticastSocket.h>
#include <java/net/NetMulticastSocket$1.h>
#include <java/net/NetPermission.h>
#include <java/net/NetworkInterface.h>
#include <java/net/NetworkInterface$1.h>
#include <java/net/NoRouteToHostException.h>
#include <java/net/PasswordAuthentication.h>
#include <java/net/PlainDatagramSocketImpl.h>
#include <java/net/PlainSocketImpl.h>
#include <java/net/PortUnreachableException.h>
#include <java/net/ProtocolException.h>
#include <java/net/ProtocolFamily.h>
#include <java/net/Proxy.h>
#include <java/net/Proxy$Type.h>
#include <java/net/ProxySelector.h>
#include <java/net/ProxySelector$StaticProxySelector.h>
#include <java/net/ResponseCache.h>
#include <java/net/SecureCacheResponse.h>
#include <java/net/ServerSocket.h>
#include <java/net/Socket.h>
#include <java/net/Socket$SocketInputStream.h>
#include <java/net/Socket$SocketOutputStream.h>
#include <java/net/SocketAddress.h>
#include <java/net/SocketCleanable.h>
#include <java/net/SocketException.h>
#include <java/net/SocketImpl.h>
#include <java/net/SocketImplFactory.h>
#include <java/net/SocketInputStream.h>
#include <java/net/SocketOption.h>
#include <java/net/SocketOptions.h>
#include <java/net/SocketOutputStream.h>
#include <java/net/SocketPermission.h>
#include <java/net/SocketPermission$1.h>
#include <java/net/SocketPermission$EphemeralRange.h>
#include <java/net/SocketPermissionCollection.h>
#include <java/net/SocketPermissionCollection$1.h>
#include <java/net/SocketTimeoutException.h>
#include <java/net/SocksConsts.h>
#include <java/net/SocksSocketImpl.h>
#include <java/net/SocksSocketImpl$1.h>
#include <java/net/SocksSocketImpl$2.h>
#include <java/net/SocksSocketImpl$3.h>
#include <java/net/StandardProtocolFamily.h>
#include <java/net/StandardSocketOptions.h>
#include <java/net/StandardSocketOptions$StdSocketOption.h>
#include <java/net/URI.h>
#include <java/net/URI$1.h>
#include <java/net/URI$Parser.h>
#include <java/net/URISyntaxException.h>
#include <java/net/URL.h>
#include <java/net/URL$1.h>
#include <java/net/URL$2.h>
#include <java/net/URL$3.h>
#include <java/net/URL$DefaultFactory.h>
#include <java/net/URLClassLoader.h>
#include <java/net/URLClassLoader$1.h>
#include <java/net/URLClassLoader$2.h>
#include <java/net/URLClassLoader$3.h>
#include <java/net/URLClassLoader$3$1.h>
#include <java/net/URLClassLoader$4.h>
#include <java/net/URLClassLoader$5.h>
#include <java/net/URLClassLoader$6.h>
#include <java/net/URLConnection.h>
#include <java/net/URLConnection$1.h>
#include <java/net/URLConnection$2.h>
#include <java/net/URLDecoder.h>
#include <java/net/URLEncoder.h>
#include <java/net/URLPermission.h>
#include <java/net/URLPermission$Authority.h>
#include <java/net/URLStreamHandler.h>
#include <java/net/URLStreamHandlerFactory.h>
#include <java/net/UnixDomainSocketAddress.h>
#include <java/net/UnixDomainSocketAddress$Ser.h>
#include <java/net/UnknownContentHandler.h>
#include <java/net/UnknownHostException.h>
#include <java/net/UnknownServiceException.h>
#include <java/net/UrlDeserializedState.h>
#include <java/net/spi/URLStreamHandlerProvider.h>
#include <java/nio/Bits.h>
#include <java/nio/Bits$1.h>
#include <java/nio/Buffer.h>
#include <java/nio/Buffer$1.h>
#include <java/nio/BufferMismatch.h>
#include <java/nio/BufferOverflowException.h>
#include <java/nio/BufferUnderflowException.h>
#include <java/nio/ByteBuffer.h>
#include <java/nio/ByteBufferAsCharBufferB.h>
#include <java/nio/ByteBufferAsCharBufferL.h>
#include <java/nio/ByteBufferAsCharBufferRB.h>
#include <java/nio/ByteBufferAsCharBufferRL.h>
#include <java/nio/ByteBufferAsDoubleBufferB.h>
#include <java/nio/ByteBufferAsDoubleBufferL.h>
#include <java/nio/ByteBufferAsDoubleBufferRB.h>
#include <java/nio/ByteBufferAsDoubleBufferRL.h>
#include <java/nio/ByteBufferAsFloatBufferB.h>
#include <java/nio/ByteBufferAsFloatBufferL.h>
#include <java/nio/ByteBufferAsFloatBufferRB.h>
#include <java/nio/ByteBufferAsFloatBufferRL.h>
#include <java/nio/ByteBufferAsIntBufferB.h>
#include <java/nio/ByteBufferAsIntBufferL.h>
#include <java/nio/ByteBufferAsIntBufferRB.h>
#include <java/nio/ByteBufferAsIntBufferRL.h>
#include <java/nio/ByteBufferAsLongBufferB.h>
#include <java/nio/ByteBufferAsLongBufferL.h>
#include <java/nio/ByteBufferAsLongBufferRB.h>
#include <java/nio/ByteBufferAsLongBufferRL.h>
#include <java/nio/ByteBufferAsShortBufferB.h>
#include <java/nio/ByteBufferAsShortBufferL.h>
#include <java/nio/ByteBufferAsShortBufferRB.h>
#include <java/nio/ByteBufferAsShortBufferRL.h>
#include <java/nio/ByteOrder.h>
#include <java/nio/CharBuffer.h>
#include <java/nio/CharBufferSpliterator.h>
#include <java/nio/DirectByteBuffer.h>
#include <java/nio/DirectByteBuffer$Deallocator.h>
#include <java/nio/DirectByteBufferR.h>
#include <java/nio/DirectCharBufferRS.h>
#include <java/nio/DirectCharBufferRU.h>
#include <java/nio/DirectCharBufferS.h>
#include <java/nio/DirectCharBufferU.h>
#include <java/nio/DirectDoubleBufferRS.h>
#include <java/nio/DirectDoubleBufferRU.h>
#include <java/nio/DirectDoubleBufferS.h>
#include <java/nio/DirectDoubleBufferU.h>
#include <java/nio/DirectFloatBufferRS.h>
#include <java/nio/DirectFloatBufferRU.h>
#include <java/nio/DirectFloatBufferS.h>
#include <java/nio/DirectFloatBufferU.h>
#include <java/nio/DirectIntBufferRS.h>
#include <java/nio/DirectIntBufferRU.h>
#include <java/nio/DirectIntBufferS.h>
#include <java/nio/DirectIntBufferU.h>
#include <java/nio/DirectLongBufferRS.h>
#include <java/nio/DirectLongBufferRU.h>
#include <java/nio/DirectLongBufferS.h>
#include <java/nio/DirectLongBufferU.h>
#include <java/nio/DirectShortBufferRS.h>
#include <java/nio/DirectShortBufferRU.h>
#include <java/nio/DirectShortBufferS.h>
#include <java/nio/DirectShortBufferU.h>
#include <java/nio/DoubleBuffer.h>
#include <java/nio/FloatBuffer.h>
#include <java/nio/HeapByteBuffer.h>
#include <java/nio/HeapByteBufferR.h>
#include <java/nio/HeapCharBuffer.h>
#include <java/nio/HeapCharBufferR.h>
#include <java/nio/HeapDoubleBuffer.h>
#include <java/nio/HeapDoubleBufferR.h>
#include <java/nio/HeapFloatBuffer.h>
#include <java/nio/HeapFloatBufferR.h>
#include <java/nio/HeapIntBuffer.h>
#include <java/nio/HeapIntBufferR.h>
#include <java/nio/HeapLongBuffer.h>
#include <java/nio/HeapLongBufferR.h>
#include <java/nio/HeapShortBuffer.h>
#include <java/nio/HeapShortBufferR.h>
#include <java/nio/IntBuffer.h>
#include <java/nio/InvalidMarkException.h>
#include <java/nio/LongBuffer.h>
#include <java/nio/MappedByteBuffer.h>
#include <java/nio/MappedByteBuffer$1.h>
#include <java/nio/MappedMemoryUtils.h>
#include <java/nio/ReadOnlyBufferException.h>
#include <java/nio/ShortBuffer.h>
#include <java/nio/StringCharBuffer.h>
#include <java/nio/channels/AcceptPendingException.h>
#include <java/nio/channels/AlreadyBoundException.h>
#include <java/nio/channels/AlreadyConnectedException.h>
#include <java/nio/channels/AsynchronousByteChannel.h>
#include <java/nio/channels/AsynchronousChannel.h>
#include <java/nio/channels/AsynchronousChannelGroup.h>
#include <java/nio/channels/AsynchronousCloseException.h>
#include <java/nio/channels/AsynchronousFileChannel.h>
#include <java/nio/channels/AsynchronousServerSocketChannel.h>
#include <java/nio/channels/AsynchronousSocketChannel.h>
#include <java/nio/channels/ByteChannel.h>
#include <java/nio/channels/CancelledKeyException.h>
#include <java/nio/channels/Channel.h>
#include <java/nio/channels/Channels.h>
#include <java/nio/channels/Channels$1.h>
#include <java/nio/channels/Channels$2.h>
#include <java/nio/channels/Channels$3.h>
#include <java/nio/channels/Channels$ReadableByteChannelImpl.h>
#include <java/nio/channels/Channels$WritableByteChannelImpl.h>
#include <java/nio/channels/ClosedByInterruptException.h>
#include <java/nio/channels/ClosedChannelException.h>
#include <java/nio/channels/ClosedSelectorException.h>
#include <java/nio/channels/CompletionHandler.h>
#include <java/nio/channels/ConnectionPendingException.h>
#include <java/nio/channels/DatagramChannel.h>
#include <java/nio/channels/FileChannel.h>
#include <java/nio/channels/FileChannel$MapMode.h>
#include <java/nio/channels/FileLock.h>
#include <java/nio/channels/FileLockInterruptionException.h>
#include <java/nio/channels/GatheringByteChannel.h>
#include <java/nio/channels/IllegalBlockingModeException.h>
#include <java/nio/channels/IllegalChannelGroupException.h>
#include <java/nio/channels/IllegalSelectorException.h>
#include <java/nio/channels/InterruptedByTimeoutException.h>
#include <java/nio/channels/InterruptibleChannel.h>
#include <java/nio/channels/MembershipKey.h>
#include <java/nio/channels/MulticastChannel.h>
#include <java/nio/channels/NetworkChannel.h>
#include <java/nio/channels/NoConnectionPendingException.h>
#include <java/nio/channels/NonReadableChannelException.h>
#include <java/nio/channels/NonWritableChannelException.h>
#include <java/nio/channels/NotYetBoundException.h>
#include <java/nio/channels/NotYetConnectedException.h>
#include <java/nio/channels/OverlappingFileLockException.h>
#include <java/nio/channels/Pipe.h>
#include <java/nio/channels/Pipe$SinkChannel.h>
#include <java/nio/channels/Pipe$SourceChannel.h>
#include <java/nio/channels/ReadPendingException.h>
#include <java/nio/channels/ReadableByteChannel.h>
#include <java/nio/channels/ScatteringByteChannel.h>
#include <java/nio/channels/SeekableByteChannel.h>
#include <java/nio/channels/SelectableChannel.h>
#include <java/nio/channels/SelectionKey.h>
#include <java/nio/channels/Selector.h>
#include <java/nio/channels/ServerSocketChannel.h>
#include <java/nio/channels/ShutdownChannelGroupException.h>
#include <java/nio/channels/SocketChannel.h>
#include <java/nio/channels/UnresolvedAddressException.h>
#include <java/nio/channels/UnsupportedAddressTypeException.h>
#include <java/nio/channels/WritableByteChannel.h>
#include <java/nio/channels/WritePendingException.h>
#include <java/nio/channels/spi/AbstractInterruptibleChannel.h>
#include <java/nio/channels/spi/AbstractInterruptibleChannel$1.h>
#include <java/nio/channels/spi/AbstractSelectableChannel.h>
#include <java/nio/channels/spi/AbstractSelectionKey.h>
#include <java/nio/channels/spi/AbstractSelector.h>
#include <java/nio/channels/spi/AbstractSelector$1.h>
#include <java/nio/channels/spi/AsynchronousChannelProvider.h>
#include <java/nio/channels/spi/AsynchronousChannelProvider$ProviderHolder.h>
#include <java/nio/channels/spi/AsynchronousChannelProvider$ProviderHolder$1.h>
#include <java/nio/channels/spi/SelectorProvider.h>
#include <java/nio/channels/spi/SelectorProvider$Holder.h>
#include <java/nio/charset/CharacterCodingException.h>
#include <java/nio/charset/Charset.h>
#include <java/nio/charset/Charset$1.h>
#include <java/nio/charset/Charset$2.h>
#include <java/nio/charset/Charset$3.h>
#include <java/nio/charset/Charset$ExtendedProviderHolder.h>
#include <java/nio/charset/Charset$ExtendedProviderHolder$1.h>
#include <java/nio/charset/CharsetDecoder.h>
#include <java/nio/charset/CharsetEncoder.h>
#include <java/nio/charset/CoderMalfunctionError.h>
#include <java/nio/charset/CoderResult.h>
#include <java/nio/charset/CoderResult$Cache.h>
#include <java/nio/charset/CodingErrorAction.h>
#include <java/nio/charset/IllegalCharsetNameException.h>
#include <java/nio/charset/MalformedInputException.h>
#include <java/nio/charset/StandardCharsets.h>
#include <java/nio/charset/UnmappableCharacterException.h>
#include <java/nio/charset/UnsupportedCharsetException.h>
#include <java/nio/charset/spi/CharsetProvider.h>
#include <java/nio/file/AccessDeniedException.h>
#include <java/nio/file/AccessMode.h>
#include <java/nio/file/AtomicMoveNotSupportedException.h>
#include <java/nio/file/ClosedDirectoryStreamException.h>
#include <java/nio/file/ClosedFileSystemException.h>
#include <java/nio/file/ClosedWatchServiceException.h>
#include <java/nio/file/CopyMoveHelper.h>
#include <java/nio/file/CopyMoveHelper$CopyOptions.h>
#include <java/nio/file/CopyOption.h>
#include <java/nio/file/DirectoryIteratorException.h>
#include <java/nio/file/DirectoryNotEmptyException.h>
#include <java/nio/file/DirectoryStream.h>
#include <java/nio/file/DirectoryStream$Filter.h>
#include <java/nio/file/FileAlreadyExistsException.h>
#include <java/nio/file/FileChannelLinesSpliterator.h>
#include <java/nio/file/FileChannelLinesSpliterator$1.h>
#include <java/nio/file/FileStore.h>
#include <java/nio/file/FileSystem.h>
#include <java/nio/file/FileSystemAlreadyExistsException.h>
#include <java/nio/file/FileSystemException.h>
#include <java/nio/file/FileSystemLoopException.h>
#include <java/nio/file/FileSystemNotFoundException.h>
#include <java/nio/file/FileSystems.h>
#include <java/nio/file/FileSystems$DefaultFileSystemHolder.h>
#include <java/nio/file/FileSystems$DefaultFileSystemHolder$1.h>
#include <java/nio/file/FileTreeIterator.h>
#include <java/nio/file/FileTreeWalker.h>
#include <java/nio/file/FileTreeWalker$1.h>
#include <java/nio/file/FileTreeWalker$DirectoryNode.h>
#include <java/nio/file/FileTreeWalker$Event.h>
#include <java/nio/file/FileTreeWalker$EventType.h>
#include <java/nio/file/FileVisitOption.h>
#include <java/nio/file/FileVisitResult.h>
#include <java/nio/file/FileVisitor.h>
#include <java/nio/file/Files.h>
#include <java/nio/file/Files$1.h>
#include <java/nio/file/Files$2.h>
#include <java/nio/file/Files$3.h>
#include <java/nio/file/Files$AcceptAllFilter.h>
#include <java/nio/file/Files$FileTypeDetectors.h>
#include <java/nio/file/Files$FileTypeDetectors$1.h>
#include <java/nio/file/Files$FileTypeDetectors$2.h>
#include <java/nio/file/InvalidPathException.h>
#include <java/nio/file/LinkOption.h>
#include <java/nio/file/LinkPermission.h>
#include <java/nio/file/NoSuchFileException.h>
#include <java/nio/file/NotDirectoryException.h>
#include <java/nio/file/NotLinkException.h>
#include <java/nio/file/OpenOption.h>
#include <java/nio/file/Path.h>
#include <java/nio/file/Path$1.h>
#include <java/nio/file/PathMatcher.h>
#include <java/nio/file/Paths.h>
#include <java/nio/file/ProviderMismatchException.h>
#include <java/nio/file/ProviderNotFoundException.h>
#include <java/nio/file/ReadOnlyFileSystemException.h>
#include <java/nio/file/SecureDirectoryStream.h>
#include <java/nio/file/SimpleFileVisitor.h>
#include <java/nio/file/StandardCopyOption.h>
#include <java/nio/file/StandardOpenOption.h>
#include <java/nio/file/StandardWatchEventKinds.h>
#include <java/nio/file/StandardWatchEventKinds$StdWatchEventKind.h>
#include <java/nio/file/TempFileHelper.h>
#include <java/nio/file/TempFileHelper$PosixPermissions.h>
#include <java/nio/file/WatchEvent.h>
#include <java/nio/file/WatchEvent$Kind.h>
#include <java/nio/file/WatchEvent$Modifier.h>
#include <java/nio/file/WatchKey.h>
#include <java/nio/file/WatchService.h>
#include <java/nio/file/Watchable.h>
#include <java/nio/file/attribute/AclEntry.h>
#include <java/nio/file/attribute/AclEntry$Builder.h>
#include <java/nio/file/attribute/AclEntryFlag.h>
#include <java/nio/file/attribute/AclEntryPermission.h>
#include <java/nio/file/attribute/AclEntryType.h>
#include <java/nio/file/attribute/AclFileAttributeView.h>
#include <java/nio/file/attribute/AttributeView.h>
#include <java/nio/file/attribute/BasicFileAttributeView.h>
#include <java/nio/file/attribute/BasicFileAttributes.h>
#include <java/nio/file/attribute/DosFileAttributeView.h>
#include <java/nio/file/attribute/DosFileAttributes.h>
#include <java/nio/file/attribute/FileAttribute.h>
#include <java/nio/file/attribute/FileAttributeView.h>
#include <java/nio/file/attribute/FileOwnerAttributeView.h>
#include <java/nio/file/attribute/FileStoreAttributeView.h>
#include <java/nio/file/attribute/FileTime.h>
#include <java/nio/file/attribute/FileTime$1.h>
#include <java/nio/file/attribute/GroupPrincipal.h>
#include <java/nio/file/attribute/PosixFileAttributeView.h>
#include <java/nio/file/attribute/PosixFileAttributes.h>
#include <java/nio/file/attribute/PosixFilePermission.h>
#include <java/nio/file/attribute/PosixFilePermissions.h>
#include <java/nio/file/attribute/PosixFilePermissions$1.h>
#include <java/nio/file/attribute/UserDefinedFileAttributeView.h>
#include <java/nio/file/attribute/UserPrincipal.h>
#include <java/nio/file/attribute/UserPrincipalLookupService.h>
#include <java/nio/file/attribute/UserPrincipalNotFoundException.h>
#include <java/nio/file/spi/FileSystemProvider.h>
#include <java/nio/file/spi/FileSystemProvider$1.h>
#include <java/nio/file/spi/FileTypeDetector.h>
#include <java/security/AccessControlContext.h>
#include <java/security/AccessControlContext$1.h>
#include <java/security/AccessControlException.h>
#include <java/security/AccessController.h>
#include <java/security/AccessController$AccHolder.h>
#include <java/security/AlgorithmConstraints.h>
#include <java/security/AlgorithmParameterGenerator.h>
#include <java/security/AlgorithmParameterGeneratorSpi.h>
#include <java/security/AlgorithmParameters.h>
#include <java/security/AlgorithmParametersSpi.h>
#include <java/security/AllPermission.h>
#include <java/security/AllPermissionCollection.h>
#include <java/security/AllPermissionCollection$1.h>
#include <java/security/AuthProvider.h>
#include <java/security/BasicPermission.h>
#include <java/security/BasicPermissionCollection.h>
#include <java/security/Certificate.h>
#include <java/security/CodeSigner.h>
#include <java/security/CodeSource.h>
#include <java/security/CryptoPrimitive.h>
#include <java/security/DigestException.h>
#include <java/security/DigestInputStream.h>
#include <java/security/DigestOutputStream.h>
#include <java/security/DomainCombiner.h>
#include <java/security/DomainLoadStoreParameter.h>
#include <java/security/DrbgParameters.h>
#include <java/security/DrbgParameters$Capability.h>
#include <java/security/DrbgParameters$Instantiation.h>
#include <java/security/DrbgParameters$NextBytes.h>
#include <java/security/DrbgParameters$Reseed.h>
#include <java/security/GeneralSecurityException.h>
#include <java/security/Guard.h>
#include <java/security/GuardedObject.h>
#include <java/security/Identity.h>
#include <java/security/IdentityScope.h>
#include <java/security/IdentityScope$1.h>
#include <java/security/InvalidAlgorithmParameterException.h>
#include <java/security/InvalidKeyException.h>
#include <java/security/InvalidParameterException.h>
#include <java/security/Key.h>
#include <java/security/KeyException.h>
#include <java/security/KeyFactory.h>
#include <java/security/KeyFactorySpi.h>
#include <java/security/KeyManagementException.h>
#include <java/security/KeyPair.h>
#include <java/security/KeyPairGenerator.h>
#include <java/security/KeyPairGenerator$Delegate.h>
#include <java/security/KeyPairGeneratorSpi.h>
#include <java/security/KeyRep.h>
#include <java/security/KeyRep$Type.h>
#include <java/security/KeyStore.h>
#include <java/security/KeyStore$1.h>
#include <java/security/KeyStore$Builder.h>
#include <java/security/KeyStore$Builder$1.h>
#include <java/security/KeyStore$Builder$2.h>
#include <java/security/KeyStore$Builder$2$1.h>
#include <java/security/KeyStore$Builder$FileBuilder.h>
#include <java/security/KeyStore$Builder$FileBuilder$1.h>
#include <java/security/KeyStore$CallbackHandlerProtection.h>
#include <java/security/KeyStore$Entry.h>
#include <java/security/KeyStore$Entry$Attribute.h>
#include <java/security/KeyStore$LoadStoreParameter.h>
#include <java/security/KeyStore$PasswordProtection.h>
#include <java/security/KeyStore$PrivateKeyEntry.h>
#include <java/security/KeyStore$ProtectionParameter.h>
#include <java/security/KeyStore$SecretKeyEntry.h>
#include <java/security/KeyStore$SimpleLoadStoreParameter.h>
#include <java/security/KeyStore$TrustedCertificateEntry.h>
#include <java/security/KeyStoreException.h>
#include <java/security/KeyStoreSpi.h>
#include <java/security/MessageDigest.h>
#include <java/security/MessageDigest$Delegate.h>
#include <java/security/MessageDigest$Delegate$CloneableDelegate.h>
#include <java/security/MessageDigestSpi.h>
#include <java/security/NoSuchAlgorithmException.h>
#include <java/security/NoSuchProviderException.h>
#include <java/security/PKCS12Attribute.h>
#include <java/security/Permission.h>
#include <java/security/PermissionCollection.h>
#include <java/security/Permissions.h>
#include <java/security/PermissionsEnumerator.h>
#include <java/security/PermissionsHash.h>
#include <java/security/Policy.h>
#include <java/security/Policy$1.h>
#include <java/security/Policy$2.h>
#include <java/security/Policy$3.h>
#include <java/security/Policy$Parameters.h>
#include <java/security/Policy$PolicyDelegate.h>
#include <java/security/Policy$PolicyInfo.h>
#include <java/security/Policy$UnsupportedEmptyCollection.h>
#include <java/security/PolicySpi.h>
#include <java/security/Principal.h>
#include <java/security/PrivateKey.h>
#include <java/security/PrivilegedAction.h>
#include <java/security/PrivilegedActionException.h>
#include <java/security/PrivilegedExceptionAction.h>
#include <java/security/ProtectionDomain.h>
#include <java/security/ProtectionDomain$1.h>
#include <java/security/ProtectionDomain$DebugHolder.h>
#include <java/security/ProtectionDomain$JavaSecurityAccessImpl.h>
#include <java/security/ProtectionDomain$JavaSecurityAccessImpl$1.h>
#include <java/security/ProtectionDomain$Key.h>
#include <java/security/Provider.h>
#include <java/security/Provider$EngineDescription.h>
#include <java/security/Provider$Service.h>
#include <java/security/Provider$ServiceKey.h>
#include <java/security/Provider$UString.h>
#include <java/security/ProviderException.h>
#include <java/security/PublicKey.h>
#include <java/security/SecureClassLoader.h>
#include <java/security/SecureClassLoader$1.h>
#include <java/security/SecureClassLoader$CodeSourceKey.h>
#include <java/security/SecureClassLoader$DebugHolder.h>
#include <java/security/SecureRandom.h>
#include <java/security/SecureRandom$1.h>
#include <java/security/SecureRandom$StrongPatternHolder.h>
#include <java/security/SecureRandomParameters.h>
#include <java/security/SecureRandomSpi.h>
#include <java/security/Security.h>
#include <java/security/Security$1.h>
#include <java/security/Security$ProviderProperty.h>
#include <java/security/SecurityPermission.h>
#include <java/security/Signature.h>
#include <java/security/Signature$1.h>
#include <java/security/Signature$CipherAdapter.h>
#include <java/security/Signature$Delegate.h>
#include <java/security/Signature$Delegate$CloneableDelegate.h>
#include <java/security/SignatureException.h>
#include <java/security/SignatureSpi.h>
#include <java/security/SignedObject.h>
#include <java/security/Signer.h>
#include <java/security/Signer$1.h>
#include <java/security/Timestamp.h>
#include <java/security/URIParameter.h>
#include <java/security/UnrecoverableEntryException.h>
#include <java/security/UnrecoverableKeyException.h>
#include <java/security/UnresolvedPermission.h>
#include <java/security/UnresolvedPermissionCollection.h>
#include <java/security/UnresolvedPermissionCollection$1.h>
#include <java/security/cert/CRL.h>
#include <java/security/cert/CRLException.h>
#include <java/security/cert/CRLReason.h>
#include <java/security/cert/CRLSelector.h>
#include <java/security/cert/CertPath.h>
#include <java/security/cert/CertPath$CertPathRep.h>
#include <java/security/cert/CertPathBuilder.h>
#include <java/security/cert/CertPathBuilder$1.h>
#include <java/security/cert/CertPathBuilderException.h>
#include <java/security/cert/CertPathBuilderResult.h>
#include <java/security/cert/CertPathBuilderSpi.h>
#include <java/security/cert/CertPathChecker.h>
#include <java/security/cert/CertPathHelperImpl.h>
#include <java/security/cert/CertPathParameters.h>
#include <java/security/cert/CertPathValidator.h>
#include <java/security/cert/CertPathValidator$1.h>
#include <java/security/cert/CertPathValidatorException.h>
#include <java/security/cert/CertPathValidatorException$BasicReason.h>
#include <java/security/cert/CertPathValidatorException$Reason.h>
#include <java/security/cert/CertPathValidatorResult.h>
#include <java/security/cert/CertPathValidatorSpi.h>
#include <java/security/cert/CertSelector.h>
#include <java/security/cert/CertStore.h>
#include <java/security/cert/CertStore$1.h>
#include <java/security/cert/CertStoreException.h>
#include <java/security/cert/CertStoreParameters.h>
#include <java/security/cert/CertStoreSpi.h>
#include <java/security/cert/Certificate.h>
#include <java/security/cert/Certificate$CertificateRep.h>
#include <java/security/cert/CertificateEncodingException.h>
#include <java/security/cert/CertificateException.h>
#include <java/security/cert/CertificateExpiredException.h>
#include <java/security/cert/CertificateFactory.h>
#include <java/security/cert/CertificateFactorySpi.h>
#include <java/security/cert/CertificateNotYetValidException.h>
#include <java/security/cert/CertificateParsingException.h>
#include <java/security/cert/CertificateRevokedException.h>
#include <java/security/cert/CollectionCertStoreParameters.h>
#include <java/security/cert/Extension.h>
#include <java/security/cert/LDAPCertStoreParameters.h>
#include <java/security/cert/PKIXBuilderParameters.h>
#include <java/security/cert/PKIXCertPathBuilderResult.h>
#include <java/security/cert/PKIXCertPathChecker.h>
#include <java/security/cert/PKIXCertPathValidatorResult.h>
#include <java/security/cert/PKIXParameters.h>
#include <java/security/cert/PKIXReason.h>
#include <java/security/cert/PKIXRevocationChecker.h>
#include <java/security/cert/PKIXRevocationChecker$Option.h>
#include <java/security/cert/PolicyNode.h>
#include <java/security/cert/PolicyQualifierInfo.h>
#include <java/security/cert/TrustAnchor.h>
#include <java/security/cert/URICertStoreParameters.h>
#include <java/security/cert/X509CRL.h>
#include <java/security/cert/X509CRLEntry.h>
#include <java/security/cert/X509CRLSelector.h>
#include <java/security/cert/X509CertSelector.h>
#include <java/security/cert/X509CertSelector$1.h>
#include <java/security/cert/X509Certificate.h>
#include <java/security/cert/X509Extension.h>
#include <java/security/interfaces/DSAKey.h>
#include <java/security/interfaces/DSAKeyPairGenerator.h>
#include <java/security/interfaces/DSAParams.h>
#include <java/security/interfaces/DSAPrivateKey.h>
#include <java/security/interfaces/DSAPublicKey.h>
#include <java/security/interfaces/ECKey.h>
#include <java/security/interfaces/ECPrivateKey.h>
#include <java/security/interfaces/ECPublicKey.h>
#include <java/security/interfaces/EdECKey.h>
#include <java/security/interfaces/EdECPrivateKey.h>
#include <java/security/interfaces/EdECPublicKey.h>
#include <java/security/interfaces/RSAKey.h>
#include <java/security/interfaces/RSAMultiPrimePrivateCrtKey.h>
#include <java/security/interfaces/RSAPrivateCrtKey.h>
#include <java/security/interfaces/RSAPrivateKey.h>
#include <java/security/interfaces/RSAPublicKey.h>
#include <java/security/interfaces/XECKey.h>
#include <java/security/interfaces/XECPrivateKey.h>
#include <java/security/interfaces/XECPublicKey.h>
#include <java/security/spec/AlgorithmParameterSpec.h>
#include <java/security/spec/DSAGenParameterSpec.h>
#include <java/security/spec/DSAParameterSpec.h>
#include <java/security/spec/DSAPrivateKeySpec.h>
#include <java/security/spec/DSAPublicKeySpec.h>
#include <java/security/spec/ECField.h>
#include <java/security/spec/ECFieldF2m.h>
#include <java/security/spec/ECFieldFp.h>
#include <java/security/spec/ECGenParameterSpec.h>
#include <java/security/spec/ECParameterSpec.h>
#include <java/security/spec/ECPoint.h>
#include <java/security/spec/ECPrivateKeySpec.h>
#include <java/security/spec/ECPublicKeySpec.h>
#include <java/security/spec/EdDSAParameterSpec.h>
#include <java/security/spec/EdECPoint.h>
#include <java/security/spec/EdECPrivateKeySpec.h>
#include <java/security/spec/EdECPublicKeySpec.h>
#include <java/security/spec/EllipticCurve.h>
#include <java/security/spec/EncodedKeySpec.h>
#include <java/security/spec/EncodedKeySpec$1.h>
#include <java/security/spec/InvalidKeySpecException.h>
#include <java/security/spec/InvalidParameterSpecException.h>
#include <java/security/spec/KeySpec.h>
#include <java/security/spec/MGF1ParameterSpec.h>
#include <java/security/spec/NamedParameterSpec.h>
#include <java/security/spec/PKCS8EncodedKeySpec.h>
#include <java/security/spec/PSSParameterSpec.h>
#include <java/security/spec/RSAKeyGenParameterSpec.h>
#include <java/security/spec/RSAMultiPrimePrivateCrtKeySpec.h>
#include <java/security/spec/RSAOtherPrimeInfo.h>
#include <java/security/spec/RSAPrivateCrtKeySpec.h>
#include <java/security/spec/RSAPrivateKeySpec.h>
#include <java/security/spec/RSAPublicKeySpec.h>
#include <java/security/spec/X509EncodedKeySpec.h>
#include <java/security/spec/XECPrivateKeySpec.h>
#include <java/security/spec/XECPublicKeySpec.h>
#include <java/text/Annotation.h>
#include <java/text/AttributeEntry.h>
#include <java/text/AttributedCharacterIterator.h>
#include <java/text/AttributedCharacterIterator$Attribute.h>
#include <java/text/AttributedString.h>
#include <java/text/AttributedString$AttributeMap.h>
#include <java/text/AttributedString$AttributedStringIterator.h>
#include <java/text/Bidi.h>
#include <java/text/BreakIterator.h>
#include <java/text/BreakIterator$BreakIteratorCache.h>
#include <java/text/CalendarBuilder.h>
#include <java/text/CharacterIterator.h>
#include <java/text/CharacterIteratorFieldDelegate.h>
#include <java/text/ChoiceFormat.h>
#include <java/text/CollationElementIterator.h>
#include <java/text/CollationKey.h>
#include <java/text/Collator.h>
#include <java/text/CompactNumberFormat.h>
#include <java/text/CompactNumberFormat$Patterns.h>
#include <java/text/DateFormat.h>
#include <java/text/DateFormat$Field.h>
#include <java/text/DateFormatSymbols.h>
#include <java/text/DecimalFormat.h>
#include <java/text/DecimalFormat$DigitArrays.h>
#include <java/text/DecimalFormat$FastPathData.h>
#include <java/text/DecimalFormatSymbols.h>
#include <java/text/DigitList.h>
#include <java/text/DigitList$1.h>
#include <java/text/DontCareFieldPosition.h>
#include <java/text/DontCareFieldPosition$1.h>
#include <java/text/EntryPair.h>
#include <java/text/FieldPosition.h>
#include <java/text/FieldPosition$Delegate.h>
#include <java/text/Format.h>
#include <java/text/Format$Field.h>
#include <java/text/Format$FieldDelegate.h>
#include <java/text/MergeCollation.h>
#include <java/text/MessageFormat.h>
#include <java/text/MessageFormat$Field.h>
#include <java/text/Normalizer.h>
#include <java/text/Normalizer$Form.h>
#include <java/text/NumberFormat.h>
#include <java/text/NumberFormat$Field.h>
#include <java/text/NumberFormat$Style.h>
#include <java/text/ParseException.h>
#include <java/text/ParsePosition.h>
#include <java/text/PatternEntry.h>
#include <java/text/PatternEntry$Parser.h>
#include <java/text/RBCollationTables.h>
#include <java/text/RBCollationTables$BuildAPI.h>
#include <java/text/RBTableBuilder.h>
#include <java/text/RuleBasedCollationKey.h>
#include <java/text/RuleBasedCollator.h>
#include <java/text/SimpleDateFormat.h>
#include <java/text/StringCharacterIterator.h>
#include <java/text/spi/BreakIteratorProvider.h>
#include <java/text/spi/CollatorProvider.h>
#include <java/text/spi/DateFormatProvider.h>
#include <java/text/spi/DateFormatSymbolsProvider.h>
#include <java/text/spi/DecimalFormatSymbolsProvider.h>
#include <java/text/spi/NumberFormatProvider.h>
#include <java/time/Clock.h>
#include <java/time/Clock$FixedClock.h>
#include <java/time/Clock$OffsetClock.h>
#include <java/time/Clock$SourceClock.h>
#include <java/time/Clock$SystemClock.h>
#include <java/time/Clock$SystemInstantSource.h>
#include <java/time/Clock$TickClock.h>
#include <java/time/DateTimeException.h>
#include <java/time/DayOfWeek.h>
#include <java/time/Duration.h>
#include <java/time/Duration$1.h>
#include <java/time/Duration$DurationUnits.h>
#include <java/time/Duration$Lazy.h>
#include <java/time/Instant.h>
#include <java/time/Instant$1.h>
#include <java/time/InstantSource.h>
#include <java/time/LocalDate.h>
#include <java/time/LocalDate$1.h>
#include <java/time/LocalDateTime.h>
#include <java/time/LocalDateTime$1.h>
#include <java/time/LocalTime.h>
#include <java/time/LocalTime$1.h>
#include <java/time/Month.h>
#include <java/time/Month$1.h>
#include <java/time/MonthDay.h>
#include <java/time/MonthDay$1.h>
#include <java/time/OffsetDateTime.h>
#include <java/time/OffsetDateTime$1.h>
#include <java/time/OffsetTime.h>
#include <java/time/OffsetTime$1.h>
#include <java/time/Period.h>
#include <java/time/Ser.h>
#include <java/time/Year.h>
#include <java/time/Year$1.h>
#include <java/time/YearMonth.h>
#include <java/time/YearMonth$1.h>
#include <java/time/ZoneId.h>
#include <java/time/ZoneId$1.h>
#include <java/time/ZoneOffset.h>
#include <java/time/ZoneRegion.h>
#include <java/time/ZonedDateTime.h>
#include <java/time/ZonedDateTime$1.h>
#include <java/time/chrono/AbstractChronology.h>
#include <java/time/chrono/ChronoLocalDate.h>
#include <java/time/chrono/ChronoLocalDateImpl.h>
#include <java/time/chrono/ChronoLocalDateImpl$1.h>
#include <java/time/chrono/ChronoLocalDateTime.h>
#include <java/time/chrono/ChronoLocalDateTimeImpl.h>
#include <java/time/chrono/ChronoLocalDateTimeImpl$1.h>
#include <java/time/chrono/ChronoPeriod.h>
#include <java/time/chrono/ChronoPeriodImpl.h>
#include <java/time/chrono/ChronoZonedDateTime.h>
#include <java/time/chrono/ChronoZonedDateTime$1.h>
#include <java/time/chrono/ChronoZonedDateTimeImpl.h>
#include <java/time/chrono/ChronoZonedDateTimeImpl$1.h>
#include <java/time/chrono/Chronology.h>
#include <java/time/chrono/Chronology$1.h>
#include <java/time/chrono/Era.h>
#include <java/time/chrono/HijrahChronology.h>
#include <java/time/chrono/HijrahChronology$1.h>
#include <java/time/chrono/HijrahDate.h>
#include <java/time/chrono/HijrahDate$1.h>
#include <java/time/chrono/HijrahEra.h>
#include <java/time/chrono/IsoChronology.h>
#include <java/time/chrono/IsoEra.h>
#include <java/time/chrono/JapaneseChronology.h>
#include <java/time/chrono/JapaneseChronology$1.h>
#include <java/time/chrono/JapaneseDate.h>
#include <java/time/chrono/JapaneseDate$1.h>
#include <java/time/chrono/JapaneseEra.h>
#include <java/time/chrono/MinguoChronology.h>
#include <java/time/chrono/MinguoChronology$1.h>
#include <java/time/chrono/MinguoDate.h>
#include <java/time/chrono/MinguoDate$1.h>
#include <java/time/chrono/MinguoEra.h>
#include <java/time/chrono/Ser.h>
#include <java/time/chrono/ThaiBuddhistChronology.h>
#include <java/time/chrono/ThaiBuddhistChronology$1.h>
#include <java/time/chrono/ThaiBuddhistDate.h>
#include <java/time/chrono/ThaiBuddhistDate$1.h>
#include <java/time/chrono/ThaiBuddhistEra.h>
#include <java/time/format/DateTimeFormatter.h>
#include <java/time/format/DateTimeFormatter$ClassicFormat.h>
#include <java/time/format/DateTimeFormatterBuilder.h>
#include <java/time/format/DateTimeFormatterBuilder$1.h>
#include <java/time/format/DateTimeFormatterBuilder$2.h>
#include <java/time/format/DateTimeFormatterBuilder$CharLiteralPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$ChronoPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$CompositePrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$DateTimePrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$DayPeriod.h>
#include <java/time/format/DateTimeFormatterBuilder$DayPeriodPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$DefaultValueParser.h>
#include <java/time/format/DateTimeFormatterBuilder$FractionPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$InstantPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$LocalizedPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$NumberPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$OffsetIdPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$PadPrinterParserDecorator.h>
#include <java/time/format/DateTimeFormatterBuilder$PrefixTree.h>
#include <java/time/format/DateTimeFormatterBuilder$PrefixTree$CI.h>
#include <java/time/format/DateTimeFormatterBuilder$PrefixTree$LENIENT.h>
#include <java/time/format/DateTimeFormatterBuilder$ReducedPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$SettingsParser.h>
#include <java/time/format/DateTimeFormatterBuilder$StringLiteralPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$TextPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$WeekBasedFieldPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$ZoneIdPrinterParser.h>
#include <java/time/format/DateTimeFormatterBuilder$ZoneTextPrinterParser.h>
#include <java/time/format/DateTimeParseContext.h>
#include <java/time/format/DateTimeParseException.h>
#include <java/time/format/DateTimePrintContext.h>
#include <java/time/format/DateTimePrintContext$1.h>
#include <java/time/format/DateTimeTextProvider.h>
#include <java/time/format/DateTimeTextProvider$1.h>
#include <java/time/format/DateTimeTextProvider$2.h>
#include <java/time/format/DateTimeTextProvider$LocaleStore.h>
#include <java/time/format/DecimalStyle.h>
#include <java/time/format/FormatStyle.h>
#include <java/time/format/Parsed.h>
#include <java/time/format/ResolverStyle.h>
#include <java/time/format/SignStyle.h>
#include <java/time/format/TextStyle.h>
#include <java/time/format/ZoneName.h>
#include <java/time/temporal/ChronoField.h>
#include <java/time/temporal/ChronoUnit.h>
#include <java/time/temporal/IsoFields.h>
#include <java/time/temporal/IsoFields$1.h>
#include <java/time/temporal/IsoFields$Field.h>
#include <java/time/temporal/IsoFields$Field$1.h>
#include <java/time/temporal/IsoFields$Field$2.h>
#include <java/time/temporal/IsoFields$Field$3.h>
#include <java/time/temporal/IsoFields$Field$4.h>
#include <java/time/temporal/IsoFields$Unit.h>
#include <java/time/temporal/JulianFields.h>
#include <java/time/temporal/JulianFields$Field.h>
#include <java/time/temporal/Temporal.h>
#include <java/time/temporal/TemporalAccessor.h>
#include <java/time/temporal/TemporalAdjuster.h>
#include <java/time/temporal/TemporalAdjusters.h>
#include <java/time/temporal/TemporalAmount.h>
#include <java/time/temporal/TemporalField.h>
#include <java/time/temporal/TemporalQueries.h>
#include <java/time/temporal/TemporalQueries$1.h>
#include <java/time/temporal/TemporalQueries$2.h>
#include <java/time/temporal/TemporalQueries$3.h>
#include <java/time/temporal/TemporalQueries$4.h>
#include <java/time/temporal/TemporalQueries$5.h>
#include <java/time/temporal/TemporalQueries$6.h>
#include <java/time/temporal/TemporalQueries$7.h>
#include <java/time/temporal/TemporalQuery.h>
#include <java/time/temporal/TemporalUnit.h>
#include <java/time/temporal/UnsupportedTemporalTypeException.h>
#include <java/time/temporal/ValueRange.h>
#include <java/time/temporal/WeekFields.h>
#include <java/time/temporal/WeekFields$ComputedDayOfField.h>
#include <java/time/zone/Ser.h>
#include <java/time/zone/TzdbZoneRulesProvider.h>
#include <java/time/zone/ZoneOffsetTransition.h>
#include <java/time/zone/ZoneOffsetTransitionRule.h>
#include <java/time/zone/ZoneOffsetTransitionRule$1.h>
#include <java/time/zone/ZoneOffsetTransitionRule$TimeDefinition.h>
#include <java/time/zone/ZoneRules.h>
#include <java/time/zone/ZoneRulesException.h>
#include <java/time/zone/ZoneRulesProvider.h>
#include <java/time/zone/ZoneRulesProvider$1.h>
#include <java/util/AbstractCollection.h>
#include <java/util/AbstractList.h>
#include <java/util/AbstractList$Itr.h>
#include <java/util/AbstractList$ListItr.h>
#include <java/util/AbstractList$RandomAccessSpliterator.h>
#include <java/util/AbstractList$RandomAccessSubList.h>
#include <java/util/AbstractList$SubList.h>
#include <java/util/AbstractList$SubList$1.h>
#include <java/util/AbstractMap.h>
#include <java/util/AbstractMap$1.h>
#include <java/util/AbstractMap$1$1.h>
#include <java/util/AbstractMap$2.h>
#include <java/util/AbstractMap$2$1.h>
#include <java/util/AbstractMap$SimpleEntry.h>
#include <java/util/AbstractMap$SimpleImmutableEntry.h>
#include <java/util/AbstractQueue.h>
#include <java/util/AbstractSequentialList.h>
#include <java/util/AbstractSet.h>
#include <java/util/ArrayDeque.h>
#include <java/util/ArrayDeque$DeqIterator.h>
#include <java/util/ArrayDeque$DeqSpliterator.h>
#include <java/util/ArrayDeque$DescendingIterator.h>
#include <java/util/ArrayList.h>
#include <java/util/ArrayList$ArrayListSpliterator.h>
#include <java/util/ArrayList$Itr.h>
#include <java/util/ArrayList$ListItr.h>
#include <java/util/ArrayList$SubList.h>
#include <java/util/ArrayList$SubList$1.h>
#include <java/util/ArrayList$SubList$2.h>
#include <java/util/ArrayPrefixHelpers.h>
#include <java/util/ArrayPrefixHelpers$CumulateTask.h>
#include <java/util/ArrayPrefixHelpers$DoubleCumulateTask.h>
#include <java/util/ArrayPrefixHelpers$IntCumulateTask.h>
#include <java/util/ArrayPrefixHelpers$LongCumulateTask.h>
#include <java/util/Arrays.h>
#include <java/util/Arrays$ArrayItr.h>
#include <java/util/Arrays$ArrayList.h>
#include <java/util/Arrays$LegacyMergeSort.h>
#include <java/util/Arrays$NaturalOrder.h>
#include <java/util/ArraysParallelSortHelpers.h>
#include <java/util/ArraysParallelSortHelpers$EmptyCompleter.h>
#include <java/util/ArraysParallelSortHelpers$FJObject.h>
#include <java/util/ArraysParallelSortHelpers$FJObject$Merger.h>
#include <java/util/ArraysParallelSortHelpers$FJObject$Sorter.h>
#include <java/util/ArraysParallelSortHelpers$Relay.h>
#include <java/util/Base64.h>
#include <java/util/Base64$DecInputStream.h>
#include <java/util/Base64$Decoder.h>
#include <java/util/Base64$EncOutputStream.h>
#include <java/util/Base64$Encoder.h>
#include <java/util/BitSet.h>
#include <java/util/BitSet$1BitSetSpliterator.h>
#include <java/util/Calendar.h>
#include <java/util/Calendar$1.h>
#include <java/util/Calendar$AvailableCalendarTypes.h>
#include <java/util/Calendar$Builder.h>
#include <java/util/Calendar$CalendarAccessControlContext.h>
#include <java/util/CollSer.h>
#include <java/util/Collection.h>
#include <java/util/Collections.h>
#include <java/util/Collections$1.h>
#include <java/util/Collections$2.h>
#include <java/util/Collections$3.h>
#include <java/util/Collections$AsLIFOQueue.h>
#include <java/util/Collections$CheckedCollection.h>
#include <java/util/Collections$CheckedCollection$1.h>
#include <java/util/Collections$CheckedList.h>
#include <java/util/Collections$CheckedList$1.h>
#include <java/util/Collections$CheckedMap.h>
#include <java/util/Collections$CheckedMap$CheckedEntrySet.h>
#include <java/util/Collections$CheckedMap$CheckedEntrySet$1.h>
#include <java/util/Collections$CheckedMap$CheckedEntrySet$CheckedEntry.h>
#include <java/util/Collections$CheckedNavigableMap.h>
#include <java/util/Collections$CheckedNavigableSet.h>
#include <java/util/Collections$CheckedQueue.h>
#include <java/util/Collections$CheckedRandomAccessList.h>
#include <java/util/Collections$CheckedSet.h>
#include <java/util/Collections$CheckedSortedMap.h>
#include <java/util/Collections$CheckedSortedSet.h>
#include <java/util/Collections$CopiesList.h>
#include <java/util/Collections$EmptyEnumeration.h>
#include <java/util/Collections$EmptyIterator.h>
#include <java/util/Collections$EmptyList.h>
#include <java/util/Collections$EmptyListIterator.h>
#include <java/util/Collections$EmptyMap.h>
#include <java/util/Collections$EmptySet.h>
#include <java/util/Collections$ReverseComparator.h>
#include <java/util/Collections$ReverseComparator2.h>
#include <java/util/Collections$SetFromMap.h>
#include <java/util/Collections$SingletonList.h>
#include <java/util/Collections$SingletonMap.h>
#include <java/util/Collections$SingletonSet.h>
#include <java/util/Collections$SynchronizedCollection.h>
#include <java/util/Collections$SynchronizedList.h>
#include <java/util/Collections$SynchronizedMap.h>
#include <java/util/Collections$SynchronizedNavigableMap.h>
#include <java/util/Collections$SynchronizedNavigableSet.h>
#include <java/util/Collections$SynchronizedRandomAccessList.h>
#include <java/util/Collections$SynchronizedSet.h>
#include <java/util/Collections$SynchronizedSortedMap.h>
#include <java/util/Collections$SynchronizedSortedSet.h>
#include <java/util/Collections$UnmodifiableCollection.h>
#include <java/util/Collections$UnmodifiableCollection$1.h>
#include <java/util/Collections$UnmodifiableList.h>
#include <java/util/Collections$UnmodifiableList$1.h>
#include <java/util/Collections$UnmodifiableMap.h>
#include <java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.h>
#include <java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.h>
#include <java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.h>
#include <java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator.h>
#include <java/util/Collections$UnmodifiableNavigableMap.h>
#include <java/util/Collections$UnmodifiableNavigableMap$EmptyNavigableMap.h>
#include <java/util/Collections$UnmodifiableNavigableSet.h>
#include <java/util/Collections$UnmodifiableNavigableSet$EmptyNavigableSet.h>
#include <java/util/Collections$UnmodifiableRandomAccessList.h>
#include <java/util/Collections$UnmodifiableSet.h>
#include <java/util/Collections$UnmodifiableSortedMap.h>
#include <java/util/Collections$UnmodifiableSortedSet.h>
#include <java/util/ComparableTimSort.h>
#include <java/util/Comparator.h>
#include <java/util/Comparators.h>
#include <java/util/Comparators$NaturalOrderComparator.h>
#include <java/util/Comparators$NullComparator.h>
#include <java/util/ConcurrentModificationException.h>
#include <java/util/Currency.h>
#include <java/util/Currency$1.h>
#include <java/util/Currency$CurrencyNameGetter.h>
#include <java/util/Currency$CurrencyProperty.h>
#include <java/util/Currency$OtherCurrencyEntry.h>
#include <java/util/Currency$SpecialCaseEntry.h>
#include <java/util/Date.h>
#include <java/util/Deque.h>
#include <java/util/Dictionary.h>
#include <java/util/DoubleSummaryStatistics.h>
#include <java/util/DualPivotQuicksort.h>
#include <java/util/DualPivotQuicksort$Merger.h>
#include <java/util/DualPivotQuicksort$RunMerger.h>
#include <java/util/DualPivotQuicksort$Sorter.h>
#include <java/util/DuplicateFormatFlagsException.h>
#include <java/util/EmptyStackException.h>
#include <java/util/EnumMap.h>
#include <java/util/EnumMap$1.h>
#include <java/util/EnumMap$EntryIterator.h>
#include <java/util/EnumMap$EntryIterator$Entry.h>
#include <java/util/EnumMap$EntrySet.h>
#include <java/util/EnumMap$EnumMapIterator.h>
#include <java/util/EnumMap$KeyIterator.h>
#include <java/util/EnumMap$KeySet.h>
#include <java/util/EnumMap$ValueIterator.h>
#include <java/util/EnumMap$Values.h>
#include <java/util/EnumSet.h>
#include <java/util/EnumSet$SerializationProxy.h>
#include <java/util/Enumeration.h>
#include <java/util/Enumeration$1.h>
#include <java/util/EventListener.h>
#include <java/util/EventListenerProxy.h>
#include <java/util/EventObject.h>
#include <java/util/FormatFlagsConversionMismatchException.h>
#include <java/util/Formattable.h>
#include <java/util/FormattableFlags.h>
#include <java/util/Formatter.h>
#include <java/util/Formatter$BigDecimalLayoutForm.h>
#include <java/util/Formatter$Conversion.h>
#include <java/util/Formatter$DateTime.h>
#include <java/util/Formatter$FixedString.h>
#include <java/util/Formatter$Flags.h>
#include <java/util/Formatter$FormatSpecifier.h>
#include <java/util/Formatter$FormatSpecifier$BigDecimalLayout.h>
#include <java/util/Formatter$FormatString.h>
#include <java/util/FormatterClosedException.h>
#include <java/util/GregorianCalendar.h>
#include <java/util/HashMap.h>
#include <java/util/HashMap$EntryIterator.h>
#include <java/util/HashMap$EntrySet.h>
#include <java/util/HashMap$EntrySpliterator.h>
#include <java/util/HashMap$HashIterator.h>
#include <java/util/HashMap$HashMapSpliterator.h>
#include <java/util/HashMap$KeyIterator.h>
#include <java/util/HashMap$KeySet.h>
#include <java/util/HashMap$KeySpliterator.h>
#include <java/util/HashMap$Node.h>
#include <java/util/HashMap$TreeNode.h>
#include <java/util/HashMap$ValueIterator.h>
#include <java/util/HashMap$ValueSpliterator.h>
#include <java/util/HashMap$Values.h>
#include <java/util/HashSet.h>
#include <java/util/Hashtable.h>
#include <java/util/Hashtable$Entry.h>
#include <java/util/Hashtable$EntrySet.h>
#include <java/util/Hashtable$Enumerator.h>
#include <java/util/Hashtable$KeySet.h>
#include <java/util/Hashtable$ValueCollection.h>
#include <java/util/HexFormat.h>
#include <java/util/IdentityHashMap.h>
#include <java/util/IdentityHashMap$EntryIterator.h>
#include <java/util/IdentityHashMap$EntryIterator$Entry.h>
#include <java/util/IdentityHashMap$EntrySet.h>
#include <java/util/IdentityHashMap$EntrySpliterator.h>
#include <java/util/IdentityHashMap$IdentityHashMapIterator.h>
#include <java/util/IdentityHashMap$IdentityHashMapSpliterator.h>
#include <java/util/IdentityHashMap$KeyIterator.h>
#include <java/util/IdentityHashMap$KeySet.h>
#include <java/util/IdentityHashMap$KeySpliterator.h>
#include <java/util/IdentityHashMap$ValueIterator.h>
#include <java/util/IdentityHashMap$ValueSpliterator.h>
#include <java/util/IdentityHashMap$Values.h>
#include <java/util/IllegalFormatArgumentIndexException.h>
#include <java/util/IllegalFormatCodePointException.h>
#include <java/util/IllegalFormatConversionException.h>
#include <java/util/IllegalFormatException.h>
#include <java/util/IllegalFormatFlagsException.h>
#include <java/util/IllegalFormatPrecisionException.h>
#include <java/util/IllegalFormatWidthException.h>
#include <java/util/IllformedLocaleException.h>
#include <java/util/ImmutableCollections.h>
#include <java/util/ImmutableCollections$AbstractImmutableCollection.h>
#include <java/util/ImmutableCollections$AbstractImmutableList.h>
#include <java/util/ImmutableCollections$AbstractImmutableMap.h>
#include <java/util/ImmutableCollections$AbstractImmutableSet.h>
#include <java/util/ImmutableCollections$Access.h>
#include <java/util/ImmutableCollections$Access$1.h>
#include <java/util/ImmutableCollections$List12.h>
#include <java/util/ImmutableCollections$ListItr.h>
#include <java/util/ImmutableCollections$ListN.h>
#include <java/util/ImmutableCollections$Map1.h>
#include <java/util/ImmutableCollections$MapN.h>
#include <java/util/ImmutableCollections$MapN$1.h>
#include <java/util/ImmutableCollections$MapN$MapNIterator.h>
#include <java/util/ImmutableCollections$Set12.h>
#include <java/util/ImmutableCollections$Set12$1.h>
#include <java/util/ImmutableCollections$SetN.h>
#include <java/util/ImmutableCollections$SetN$SetNIterator.h>
#include <java/util/ImmutableCollections$SubList.h>
#include <java/util/InputMismatchException.h>
#include <java/util/IntSummaryStatistics.h>
#include <java/util/InvalidPropertiesFormatException.h>
#include <java/util/Iterator.h>
#include <java/util/JapaneseImperialCalendar.h>
#include <java/util/JumboEnumSet.h>
#include <java/util/JumboEnumSet$EnumSetIterator.h>
#include <java/util/KeyValueHolder.h>
#include <java/util/LinkedHashMap.h>
#include <java/util/LinkedHashMap$Entry.h>
#include <java/util/LinkedHashMap$LinkedEntryIterator.h>
#include <java/util/LinkedHashMap$LinkedEntrySet.h>
#include <java/util/LinkedHashMap$LinkedHashIterator.h>
#include <java/util/LinkedHashMap$LinkedKeyIterator.h>
#include <java/util/LinkedHashMap$LinkedKeySet.h>
#include <java/util/LinkedHashMap$LinkedValueIterator.h>
#include <java/util/LinkedHashMap$LinkedValues.h>
#include <java/util/LinkedHashSet.h>
#include <java/util/LinkedList.h>
#include <java/util/LinkedList$DescendingIterator.h>
#include <java/util/LinkedList$LLSpliterator.h>
#include <java/util/LinkedList$ListItr.h>
#include <java/util/LinkedList$Node.h>
#include <java/util/List.h>
#include <java/util/ListIterator.h>
#include <java/util/ListResourceBundle.h>
#include <java/util/Locale.h>
#include <java/util/Locale$1.h>
#include <java/util/Locale$Builder.h>
#include <java/util/Locale$Cache.h>
#include <java/util/Locale$Category.h>
#include <java/util/Locale$FilteringMode.h>
#include <java/util/Locale$IsoCountryCode.h>
#include <java/util/Locale$IsoCountryCode$1.h>
#include <java/util/Locale$IsoCountryCode$2.h>
#include <java/util/Locale$IsoCountryCode$3.h>
#include <java/util/Locale$LanguageRange.h>
#include <java/util/Locale$LocaleKey.h>
#include <java/util/Locale$LocaleNameGetter.h>
#include <java/util/LocaleISOData.h>
#include <java/util/LongSummaryStatistics.h>
#include <java/util/Map.h>
#include <java/util/Map$Entry.h>
#include <java/util/MissingFormatArgumentException.h>
#include <java/util/MissingFormatWidthException.h>
#include <java/util/MissingResourceException.h>
#include <java/util/NavigableMap.h>
#include <java/util/NavigableSet.h>
#include <java/util/NoSuchElementException.h>
#include <java/util/Objects.h>
#include <java/util/Observable.h>
#include <java/util/Observer.h>
#include <java/util/Optional.h>
#include <java/util/OptionalDouble.h>
#include <java/util/OptionalInt.h>
#include <java/util/OptionalLong.h>
#include <java/util/PrimitiveIterator.h>
#include <java/util/PrimitiveIterator$OfDouble.h>
#include <java/util/PrimitiveIterator$OfInt.h>
#include <java/util/PrimitiveIterator$OfLong.h>
#include <java/util/PriorityQueue.h>
#include <java/util/PriorityQueue$Itr.h>
#include <java/util/PriorityQueue$PriorityQueueSpliterator.h>
#include <java/util/Properties.h>
#include <java/util/Properties$EntrySet.h>
#include <java/util/Properties$LineReader.h>
#include <java/util/PropertyPermission.h>
#include <java/util/PropertyPermissionCollection.h>
#include <java/util/PropertyPermissionCollection$1.h>
#include <java/util/PropertyResourceBundle.h>
#include <java/util/Queue.h>
#include <java/util/Random.h>
#include <java/util/RandomAccess.h>
#include <java/util/RegularEnumSet.h>
#include <java/util/RegularEnumSet$EnumSetIterator.h>
#include <java/util/ResourceBundle.h>
#include <java/util/ResourceBundle$1.h>
#include <java/util/ResourceBundle$2.h>
#include <java/util/ResourceBundle$3.h>
#include <java/util/ResourceBundle$4.h>
#include <java/util/ResourceBundle$BundleReference.h>
#include <java/util/ResourceBundle$CacheKey.h>
#include <java/util/ResourceBundle$CacheKeyReference.h>
#include <java/util/ResourceBundle$Control.h>
#include <java/util/ResourceBundle$Control$1.h>
#include <java/util/ResourceBundle$Control$2.h>
#include <java/util/ResourceBundle$Control$CandidateListCache.h>
#include <java/util/ResourceBundle$KeyElementReference.h>
#include <java/util/ResourceBundle$NoFallbackControl.h>
#include <java/util/ResourceBundle$ResourceBundleControlProviderHolder.h>
#include <java/util/ResourceBundle$ResourceBundleProviderHelper.h>
#include <java/util/ResourceBundle$SingleFormatControl.h>
#include <java/util/Scanner.h>
#include <java/util/Scanner$FindSpliterator.h>
#include <java/util/Scanner$PatternLRUCache.h>
#include <java/util/Scanner$TokenSpliterator.h>
#include <java/util/ServiceConfigurationError.h>
#include <java/util/ServiceLoader.h>
#include <java/util/ServiceLoader$1.h>
#include <java/util/ServiceLoader$2.h>
#include <java/util/ServiceLoader$3.h>
#include <java/util/ServiceLoader$LayerLookupIterator.h>
#include <java/util/ServiceLoader$LazyClassPathLookupIterator.h>
#include <java/util/ServiceLoader$LazyClassPathLookupIterator$1.h>
#include <java/util/ServiceLoader$LazyClassPathLookupIterator$2.h>
#include <java/util/ServiceLoader$ModuleServicesLookupIterator.h>
#include <java/util/ServiceLoader$Provider.h>
#include <java/util/ServiceLoader$ProviderImpl.h>
#include <java/util/ServiceLoader$ProviderImpl$1.h>
#include <java/util/ServiceLoader$ProviderImpl$2.h>
#include <java/util/ServiceLoader$ProviderSpliterator.h>
#include <java/util/Set.h>
#include <java/util/SimpleTimeZone.h>
#include <java/util/SimpleTimeZone$Cache.h>
#include <java/util/SortedMap.h>
#include <java/util/SortedSet.h>
#include <java/util/SortedSet$1.h>
#include <java/util/Spliterator.h>
#include <java/util/Spliterator$OfDouble.h>
#include <java/util/Spliterator$OfInt.h>
#include <java/util/Spliterator$OfLong.h>
#include <java/util/Spliterator$OfPrimitive.h>
#include <java/util/Spliterators.h>
#include <java/util/Spliterators$1Adapter.h>
#include <java/util/Spliterators$2Adapter.h>
#include <java/util/Spliterators$3Adapter.h>
#include <java/util/Spliterators$4Adapter.h>
#include <java/util/Spliterators$AbstractDoubleSpliterator.h>
#include <java/util/Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer.h>
#include <java/util/Spliterators$AbstractIntSpliterator.h>
#include <java/util/Spliterators$AbstractIntSpliterator$HoldingIntConsumer.h>
#include <java/util/Spliterators$AbstractLongSpliterator.h>
#include <java/util/Spliterators$AbstractLongSpliterator$HoldingLongConsumer.h>
#include <java/util/Spliterators$AbstractSpliterator.h>
#include <java/util/Spliterators$AbstractSpliterator$HoldingConsumer.h>
#include <java/util/Spliterators$ArraySpliterator.h>
#include <java/util/Spliterators$DoubleArraySpliterator.h>
#include <java/util/Spliterators$DoubleIteratorSpliterator.h>
#include <java/util/Spliterators$EmptySpliterator.h>
#include <java/util/Spliterators$EmptySpliterator$OfDouble.h>
#include <java/util/Spliterators$EmptySpliterator$OfInt.h>
#include <java/util/Spliterators$EmptySpliterator$OfLong.h>
#include <java/util/Spliterators$EmptySpliterator$OfRef.h>
#include <java/util/Spliterators$IntArraySpliterator.h>
#include <java/util/Spliterators$IntIteratorSpliterator.h>
#include <java/util/Spliterators$IteratorSpliterator.h>
#include <java/util/Spliterators$LongArraySpliterator.h>
#include <java/util/Spliterators$LongIteratorSpliterator.h>
#include <java/util/SplittableRandom.h>
#include <java/util/SplittableRandom$AbstractSplittableGeneratorProxy.h>
#include <java/util/Stack.h>
#include <java/util/StringJoiner.h>
#include <java/util/StringTokenizer.h>
#include <java/util/TaskQueue.h>
#include <java/util/TimSort.h>
#include <java/util/TimeZone.h>
#include <java/util/Timer.h>
#include <java/util/Timer$ThreadReaper.h>
#include <java/util/TimerTask.h>
#include <java/util/TimerThread.h>
#include <java/util/TooManyListenersException.h>
#include <java/util/TreeMap.h>
#include <java/util/TreeMap$AscendingSubMap.h>
#include <java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.h>
#include <java/util/TreeMap$DescendingKeyIterator.h>
#include <java/util/TreeMap$DescendingKeySpliterator.h>
#include <java/util/TreeMap$DescendingSubMap.h>
#include <java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.h>
#include <java/util/TreeMap$Entry.h>
#include <java/util/TreeMap$EntryIterator.h>
#include <java/util/TreeMap$EntrySet.h>
#include <java/util/TreeMap$EntrySpliterator.h>
#include <java/util/TreeMap$KeyIterator.h>
#include <java/util/TreeMap$KeySet.h>
#include <java/util/TreeMap$KeySpliterator.h>
#include <java/util/TreeMap$NavigableSubMap.h>
#include <java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.h>
#include <java/util/TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.h>
#include <java/util/TreeMap$NavigableSubMap$EntrySetView.h>
#include <java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.h>
#include <java/util/TreeMap$NavigableSubMap$SubMapIterator.h>
#include <java/util/TreeMap$NavigableSubMap$SubMapKeyIterator.h>
#include <java/util/TreeMap$PrivateEntryIterator.h>
#include <java/util/TreeMap$SubMap.h>
#include <java/util/TreeMap$TreeMapSpliterator.h>
#include <java/util/TreeMap$ValueIterator.h>
#include <java/util/TreeMap$ValueSpliterator.h>
#include <java/util/TreeMap$Values.h>
#include <java/util/TreeSet.h>
#include <java/util/Tripwire.h>
#include <java/util/UUID.h>
#include <java/util/UUID$Holder.h>
#include <java/util/UnknownFormatConversionException.h>
#include <java/util/UnknownFormatFlagsException.h>
#include <java/util/Vector.h>
#include <java/util/Vector$1.h>
#include <java/util/Vector$Itr.h>
#include <java/util/Vector$ListItr.h>
#include <java/util/Vector$VectorSpliterator.h>
#include <java/util/WeakHashMap.h>
#include <java/util/WeakHashMap$Entry.h>
#include <java/util/WeakHashMap$EntryIterator.h>
#include <java/util/WeakHashMap$EntrySet.h>
#include <java/util/WeakHashMap$EntrySpliterator.h>
#include <java/util/WeakHashMap$HashIterator.h>
#include <java/util/WeakHashMap$KeyIterator.h>
#include <java/util/WeakHashMap$KeySet.h>
#include <java/util/WeakHashMap$KeySpliterator.h>
#include <java/util/WeakHashMap$ValueIterator.h>
#include <java/util/WeakHashMap$ValueSpliterator.h>
#include <java/util/WeakHashMap$Values.h>
#include <java/util/WeakHashMap$WeakHashMapSpliterator.h>
#include <java/util/concurrent/AbstractExecutorService.h>
#include <java/util/concurrent/ArrayBlockingQueue.h>
#include <java/util/concurrent/ArrayBlockingQueue$Itr.h>
#include <java/util/concurrent/ArrayBlockingQueue$Itrs.h>
#include <java/util/concurrent/ArrayBlockingQueue$Itrs$Node.h>
#include <java/util/concurrent/BlockingDeque.h>
#include <java/util/concurrent/BlockingQueue.h>
#include <java/util/concurrent/BrokenBarrierException.h>
#include <java/util/concurrent/Callable.h>
#include <java/util/concurrent/CancellationException.h>
#include <java/util/concurrent/CompletableFuture.h>
#include <java/util/concurrent/CompletableFuture$AltResult.h>
#include <java/util/concurrent/CompletableFuture$AnyOf.h>
#include <java/util/concurrent/CompletableFuture$AsyncRun.h>
#include <java/util/concurrent/CompletableFuture$AsyncSupply.h>
#include <java/util/concurrent/CompletableFuture$AsynchronousCompletionTask.h>
#include <java/util/concurrent/CompletableFuture$BiAccept.h>
#include <java/util/concurrent/CompletableFuture$BiApply.h>
#include <java/util/concurrent/CompletableFuture$BiCompletion.h>
#include <java/util/concurrent/CompletableFuture$BiRelay.h>
#include <java/util/concurrent/CompletableFuture$BiRun.h>
#include <java/util/concurrent/CompletableFuture$Canceller.h>
#include <java/util/concurrent/CompletableFuture$CoCompletion.h>
#include <java/util/concurrent/CompletableFuture$Completion.h>
#include <java/util/concurrent/CompletableFuture$DelayedCompleter.h>
#include <java/util/concurrent/CompletableFuture$DelayedExecutor.h>
#include <java/util/concurrent/CompletableFuture$Delayer.h>
#include <java/util/concurrent/CompletableFuture$Delayer$DaemonThreadFactory.h>
#include <java/util/concurrent/CompletableFuture$MinimalStage.h>
#include <java/util/concurrent/CompletableFuture$OrAccept.h>
#include <java/util/concurrent/CompletableFuture$OrApply.h>
#include <java/util/concurrent/CompletableFuture$OrRun.h>
#include <java/util/concurrent/CompletableFuture$Signaller.h>
#include <java/util/concurrent/CompletableFuture$TaskSubmitter.h>
#include <java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.h>
#include <java/util/concurrent/CompletableFuture$Timeout.h>
#include <java/util/concurrent/CompletableFuture$UniAccept.h>
#include <java/util/concurrent/CompletableFuture$UniApply.h>
#include <java/util/concurrent/CompletableFuture$UniCompletion.h>
#include <java/util/concurrent/CompletableFuture$UniCompose.h>
#include <java/util/concurrent/CompletableFuture$UniComposeExceptionally.h>
#include <java/util/concurrent/CompletableFuture$UniExceptionally.h>
#include <java/util/concurrent/CompletableFuture$UniHandle.h>
#include <java/util/concurrent/CompletableFuture$UniRelay.h>
#include <java/util/concurrent/CompletableFuture$UniRun.h>
#include <java/util/concurrent/CompletableFuture$UniWhenComplete.h>
#include <java/util/concurrent/CompletionException.h>
#include <java/util/concurrent/CompletionService.h>
#include <java/util/concurrent/CompletionStage.h>
#include <java/util/concurrent/ConcurrentHashMap.h>
#include <java/util/concurrent/ConcurrentHashMap$BaseIterator.h>
#include <java/util/concurrent/ConcurrentHashMap$BulkTask.h>
#include <java/util/concurrent/ConcurrentHashMap$CollectionView.h>
#include <java/util/concurrent/ConcurrentHashMap$CounterCell.h>
#include <java/util/concurrent/ConcurrentHashMap$EntryIterator.h>
#include <java/util/concurrent/ConcurrentHashMap$EntrySetView.h>
#include <java/util/concurrent/ConcurrentHashMap$EntrySpliterator.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachEntryTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachKeyTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachMappingTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachTransformedEntryTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachTransformedKeyTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachTransformedMappingTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachTransformedValueTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForEachValueTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ForwardingNode.h>
#include <java/util/concurrent/ConcurrentHashMap$KeyIterator.h>
#include <java/util/concurrent/ConcurrentHashMap$KeySetView.h>
#include <java/util/concurrent/ConcurrentHashMap$KeySpliterator.h>
#include <java/util/concurrent/ConcurrentHashMap$MapEntry.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceEntriesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceEntriesToDoubleTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceEntriesToIntTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceEntriesToLongTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceKeysTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceKeysToDoubleTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceKeysToIntTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceKeysToLongTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceMappingsTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceMappingsToDoubleTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceMappingsToIntTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceMappingsToLongTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceValuesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceValuesToDoubleTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceValuesToIntTask.h>
#include <java/util/concurrent/ConcurrentHashMap$MapReduceValuesToLongTask.h>
#include <java/util/concurrent/ConcurrentHashMap$Node.h>
#include <java/util/concurrent/ConcurrentHashMap$ReduceEntriesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ReduceKeysTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ReduceValuesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$ReservationNode.h>
#include <java/util/concurrent/ConcurrentHashMap$SearchEntriesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$SearchKeysTask.h>
#include <java/util/concurrent/ConcurrentHashMap$SearchMappingsTask.h>
#include <java/util/concurrent/ConcurrentHashMap$SearchValuesTask.h>
#include <java/util/concurrent/ConcurrentHashMap$Segment.h>
#include <java/util/concurrent/ConcurrentHashMap$TableStack.h>
#include <java/util/concurrent/ConcurrentHashMap$Traverser.h>
#include <java/util/concurrent/ConcurrentHashMap$TreeBin.h>
#include <java/util/concurrent/ConcurrentHashMap$TreeNode.h>
#include <java/util/concurrent/ConcurrentHashMap$ValueIterator.h>
#include <java/util/concurrent/ConcurrentHashMap$ValueSpliterator.h>
#include <java/util/concurrent/ConcurrentHashMap$ValuesView.h>
#include <java/util/concurrent/ConcurrentLinkedDeque.h>
#include <java/util/concurrent/ConcurrentLinkedDeque$AbstractItr.h>
#include <java/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator.h>
#include <java/util/concurrent/ConcurrentLinkedDeque$DescendingItr.h>
#include <java/util/concurrent/ConcurrentLinkedDeque$Itr.h>
#include <java/util/concurrent/ConcurrentLinkedDeque$Node.h>
#include <java/util/concurrent/ConcurrentLinkedQueue.h>
#include <java/util/concurrent/ConcurrentLinkedQueue$CLQSpliterator.h>
#include <java/util/concurrent/ConcurrentLinkedQueue$Itr.h>
#include <java/util/concurrent/ConcurrentLinkedQueue$Node.h>
#include <java/util/concurrent/ConcurrentMap.h>
#include <java/util/concurrent/ConcurrentNavigableMap.h>
#include <java/util/concurrent/ConcurrentSkipListMap.h>
#include <java/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$EntryIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$EntrySet.h>
#include <java/util/concurrent/ConcurrentSkipListMap$EntrySpliterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$Index.h>
#include <java/util/concurrent/ConcurrentSkipListMap$Iter.h>
#include <java/util/concurrent/ConcurrentSkipListMap$KeyIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$KeySet.h>
#include <java/util/concurrent/ConcurrentSkipListMap$KeySpliterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$Node.h>
#include <java/util/concurrent/ConcurrentSkipListMap$SubMap.h>
#include <java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.h>
#include <java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$ValueIterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$ValueSpliterator.h>
#include <java/util/concurrent/ConcurrentSkipListMap$Values.h>
#include <java/util/concurrent/ConcurrentSkipListSet.h>
#include <java/util/concurrent/CopyOnWriteArrayList.h>
#include <java/util/concurrent/CopyOnWriteArrayList$COWIterator.h>
#include <java/util/concurrent/CopyOnWriteArrayList$COWSubList.h>
#include <java/util/concurrent/CopyOnWriteArrayList$COWSubListIterator.h>
#include <java/util/concurrent/CopyOnWriteArraySet.h>
#include <java/util/concurrent/CountDownLatch.h>
#include <java/util/concurrent/CountDownLatch$Sync.h>
#include <java/util/concurrent/CountedCompleter.h>
#include <java/util/concurrent/CyclicBarrier.h>
#include <java/util/concurrent/CyclicBarrier$Generation.h>
#include <java/util/concurrent/DelayQueue.h>
#include <java/util/concurrent/DelayQueue$Itr.h>
#include <java/util/concurrent/Delayed.h>
#include <java/util/concurrent/Exchanger.h>
#include <java/util/concurrent/Exchanger$Node.h>
#include <java/util/concurrent/Exchanger$Participant.h>
#include <java/util/concurrent/ExecutionException.h>
#include <java/util/concurrent/Executor.h>
#include <java/util/concurrent/ExecutorCompletionService.h>
#include <java/util/concurrent/ExecutorCompletionService$QueueingFuture.h>
#include <java/util/concurrent/ExecutorService.h>
#include <java/util/concurrent/Executors.h>
#include <java/util/concurrent/Executors$1.h>
#include <java/util/concurrent/Executors$2.h>
#include <java/util/concurrent/Executors$DefaultThreadFactory.h>
#include <java/util/concurrent/Executors$DelegatedExecutorService.h>
#include <java/util/concurrent/Executors$DelegatedScheduledExecutorService.h>
#include <java/util/concurrent/Executors$FinalizableDelegatedExecutorService.h>
#include <java/util/concurrent/Executors$PrivilegedCallable.h>
#include <java/util/concurrent/Executors$PrivilegedCallable$1.h>
#include <java/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader.h>
#include <java/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader$1.h>
#include <java/util/concurrent/Executors$PrivilegedThreadFactory.h>
#include <java/util/concurrent/Executors$PrivilegedThreadFactory$1.h>
#include <java/util/concurrent/Executors$PrivilegedThreadFactory$1$1.h>
#include <java/util/concurrent/Executors$RunnableAdapter.h>
#include <java/util/concurrent/Flow.h>
#include <java/util/concurrent/Flow$Processor.h>
#include <java/util/concurrent/Flow$Publisher.h>
#include <java/util/concurrent/Flow$Subscriber.h>
#include <java/util/concurrent/Flow$Subscription.h>
#include <java/util/concurrent/ForkJoinPool.h>
#include <java/util/concurrent/ForkJoinPool$1.h>
#include <java/util/concurrent/ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory.h>
#include <java/util/concurrent/ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory$1.h>
#include <java/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory.h>
#include <java/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1.h>
#include <java/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory.h>
#include <java/util/concurrent/ForkJoinPool$InvokeAnyRoot.h>
#include <java/util/concurrent/ForkJoinPool$InvokeAnyTask.h>
#include <java/util/concurrent/ForkJoinPool$ManagedBlocker.h>
#include <java/util/concurrent/ForkJoinPool$WorkQueue.h>
#include <java/util/concurrent/ForkJoinTask.h>
#include <java/util/concurrent/ForkJoinTask$AdaptedCallable.h>
#include <java/util/concurrent/ForkJoinTask$AdaptedInterruptibleCallable.h>
#include <java/util/concurrent/ForkJoinTask$AdaptedRunnable.h>
#include <java/util/concurrent/ForkJoinTask$AdaptedRunnableAction.h>
#include <java/util/concurrent/ForkJoinTask$Aux.h>
#include <java/util/concurrent/ForkJoinTask$RunnableExecuteAction.h>
#include <java/util/concurrent/ForkJoinWorkerThread.h>
#include <java/util/concurrent/ForkJoinWorkerThread$InnocuousForkJoinWorkerThread.h>
#include <java/util/concurrent/ForkJoinWorkerThread$InnocuousForkJoinWorkerThread$1.h>
#include <java/util/concurrent/Future.h>
#include <java/util/concurrent/FutureTask.h>
#include <java/util/concurrent/FutureTask$WaitNode.h>
#include <java/util/concurrent/Helpers.h>
#include <java/util/concurrent/LinkedBlockingDeque.h>
#include <java/util/concurrent/LinkedBlockingDeque$AbstractItr.h>
#include <java/util/concurrent/LinkedBlockingDeque$DescendingItr.h>
#include <java/util/concurrent/LinkedBlockingDeque$Itr.h>
#include <java/util/concurrent/LinkedBlockingDeque$LBDSpliterator.h>
#include <java/util/concurrent/LinkedBlockingDeque$Node.h>
#include <java/util/concurrent/LinkedBlockingQueue.h>
#include <java/util/concurrent/LinkedBlockingQueue$Itr.h>
#include <java/util/concurrent/LinkedBlockingQueue$LBQSpliterator.h>
#include <java/util/concurrent/LinkedBlockingQueue$Node.h>
#include <java/util/concurrent/LinkedTransferQueue.h>
#include <java/util/concurrent/LinkedTransferQueue$Itr.h>
#include <java/util/concurrent/LinkedTransferQueue$LTQSpliterator.h>
#include <java/util/concurrent/LinkedTransferQueue$Node.h>
#include <java/util/concurrent/Phaser.h>
#include <java/util/concurrent/Phaser$QNode.h>
#include <java/util/concurrent/PriorityBlockingQueue.h>
#include <java/util/concurrent/PriorityBlockingQueue$Itr.h>
#include <java/util/concurrent/PriorityBlockingQueue$PBQSpliterator.h>
#include <java/util/concurrent/RecursiveAction.h>
#include <java/util/concurrent/RecursiveTask.h>
#include <java/util/concurrent/RejectedExecutionException.h>
#include <java/util/concurrent/RejectedExecutionHandler.h>
#include <java/util/concurrent/RunnableFuture.h>
#include <java/util/concurrent/RunnableScheduledFuture.h>
#include <java/util/concurrent/ScheduledExecutorService.h>
#include <java/util/concurrent/ScheduledFuture.h>
#include <java/util/concurrent/ScheduledThreadPoolExecutor.h>
#include <java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.h>
#include <java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.h>
#include <java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.h>
#include <java/util/concurrent/Semaphore.h>
#include <java/util/concurrent/Semaphore$FairSync.h>
#include <java/util/concurrent/Semaphore$NonfairSync.h>
#include <java/util/concurrent/Semaphore$Sync.h>
#include <java/util/concurrent/SubmissionPublisher.h>
#include <java/util/concurrent/SubmissionPublisher$BufferedSubscription.h>
#include <java/util/concurrent/SubmissionPublisher$ConsumerSubscriber.h>
#include <java/util/concurrent/SubmissionPublisher$ConsumerTask.h>
#include <java/util/concurrent/SubmissionPublisher$ThreadPerTaskExecutor.h>
#include <java/util/concurrent/SynchronousQueue.h>
#include <java/util/concurrent/SynchronousQueue$FifoWaitQueue.h>
#include <java/util/concurrent/SynchronousQueue$LifoWaitQueue.h>
#include <java/util/concurrent/SynchronousQueue$TransferQueue.h>
#include <java/util/concurrent/SynchronousQueue$TransferQueue$QNode.h>
#include <java/util/concurrent/SynchronousQueue$TransferStack.h>
#include <java/util/concurrent/SynchronousQueue$TransferStack$SNode.h>
#include <java/util/concurrent/SynchronousQueue$Transferer.h>
#include <java/util/concurrent/SynchronousQueue$WaitQueue.h>
#include <java/util/concurrent/ThreadFactory.h>
#include <java/util/concurrent/ThreadLocalRandom.h>
#include <java/util/concurrent/ThreadLocalRandom$ThreadLocalRandomProxy.h>
#include <java/util/concurrent/ThreadPoolExecutor.h>
#include <java/util/concurrent/ThreadPoolExecutor$AbortPolicy.h>
#include <java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy.h>
#include <java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy.h>
#include <java/util/concurrent/ThreadPoolExecutor$DiscardPolicy.h>
#include <java/util/concurrent/ThreadPoolExecutor$Worker.h>
#include <java/util/concurrent/TimeUnit.h>
#include <java/util/concurrent/TimeUnit$1.h>
#include <java/util/concurrent/TimeoutException.h>
#include <java/util/concurrent/TransferQueue.h>
#include <java/util/concurrent/atomic/AtomicBoolean.h>
#include <java/util/concurrent/atomic/AtomicInteger.h>
#include <java/util/concurrent/atomic/AtomicIntegerArray.h>
#include <java/util/concurrent/atomic/AtomicIntegerFieldUpdater.h>
#include <java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.h>
#include <java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl$1.h>
#include <java/util/concurrent/atomic/AtomicLong.h>
#include <java/util/concurrent/atomic/AtomicLongArray.h>
#include <java/util/concurrent/atomic/AtomicLongFieldUpdater.h>
#include <java/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater.h>
#include <java/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater$1.h>
#include <java/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater.h>
#include <java/util/concurrent/atomic/AtomicLongFieldUpdater$LockedUpdater$1.h>
#include <java/util/concurrent/atomic/AtomicMarkableReference.h>
#include <java/util/concurrent/atomic/AtomicMarkableReference$Pair.h>
#include <java/util/concurrent/atomic/AtomicReference.h>
#include <java/util/concurrent/atomic/AtomicReferenceArray.h>
#include <java/util/concurrent/atomic/AtomicReferenceFieldUpdater.h>
#include <java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.h>
#include <java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1.h>
#include <java/util/concurrent/atomic/AtomicStampedReference.h>
#include <java/util/concurrent/atomic/AtomicStampedReference$Pair.h>
#include <java/util/concurrent/atomic/DoubleAccumulator.h>
#include <java/util/concurrent/atomic/DoubleAccumulator$SerializationProxy.h>
#include <java/util/concurrent/atomic/DoubleAdder.h>
#include <java/util/concurrent/atomic/DoubleAdder$SerializationProxy.h>
#include <java/util/concurrent/atomic/LongAccumulator.h>
#include <java/util/concurrent/atomic/LongAccumulator$SerializationProxy.h>
#include <java/util/concurrent/atomic/LongAdder.h>
#include <java/util/concurrent/atomic/LongAdder$SerializationProxy.h>
#include <java/util/concurrent/atomic/Striped64.h>
#include <java/util/concurrent/atomic/Striped64$1.h>
#include <java/util/concurrent/atomic/Striped64$Cell.h>
#include <java/util/concurrent/locks/AbstractOwnableSynchronizer.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionNode.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer$ExclusiveNode.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node.h>
#include <java/util/concurrent/locks/AbstractQueuedLongSynchronizer$SharedNode.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionNode.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer$ExclusiveNode.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.h>
#include <java/util/concurrent/locks/AbstractQueuedSynchronizer$SharedNode.h>
#include <java/util/concurrent/locks/Condition.h>
#include <java/util/concurrent/locks/Lock.h>
#include <java/util/concurrent/locks/LockSupport.h>
#include <java/util/concurrent/locks/ReadWriteLock.h>
#include <java/util/concurrent/locks/ReentrantLock.h>
#include <java/util/concurrent/locks/ReentrantLock$FairSync.h>
#include <java/util/concurrent/locks/ReentrantLock$NonfairSync.h>
#include <java/util/concurrent/locks/ReentrantLock$Sync.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$Sync.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.h>
#include <java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.h>
#include <java/util/concurrent/locks/StampedLock.h>
#include <java/util/concurrent/locks/StampedLock$Node.h>
#include <java/util/concurrent/locks/StampedLock$ReadLockView.h>
#include <java/util/concurrent/locks/StampedLock$ReadWriteLockView.h>
#include <java/util/concurrent/locks/StampedLock$ReaderNode.h>
#include <java/util/concurrent/locks/StampedLock$WriteLockView.h>
#include <java/util/concurrent/locks/StampedLock$WriterNode.h>
#include <java/util/function/BiConsumer.h>
#include <java/util/function/BiFunction.h>
#include <java/util/function/BiPredicate.h>
#include <java/util/function/BinaryOperator.h>
#include <java/util/function/BooleanSupplier.h>
#include <java/util/function/Consumer.h>
#include <java/util/function/DoubleBinaryOperator.h>
#include <java/util/function/DoubleConsumer.h>
#include <java/util/function/DoubleFunction.h>
#include <java/util/function/DoublePredicate.h>
#include <java/util/function/DoubleSupplier.h>
#include <java/util/function/DoubleToIntFunction.h>
#include <java/util/function/DoubleToLongFunction.h>
#include <java/util/function/DoubleUnaryOperator.h>
#include <java/util/function/Function.h>
#include <java/util/function/IntBinaryOperator.h>
#include <java/util/function/IntConsumer.h>
#include <java/util/function/IntFunction.h>
#include <java/util/function/IntPredicate.h>
#include <java/util/function/IntSupplier.h>
#include <java/util/function/IntToDoubleFunction.h>
#include <java/util/function/IntToLongFunction.h>
#include <java/util/function/IntUnaryOperator.h>
#include <java/util/function/LongBinaryOperator.h>
#include <java/util/function/LongConsumer.h>
#include <java/util/function/LongFunction.h>
#include <java/util/function/LongPredicate.h>
#include <java/util/function/LongSupplier.h>
#include <java/util/function/LongToDoubleFunction.h>
#include <java/util/function/LongToIntFunction.h>
#include <java/util/function/LongUnaryOperator.h>
#include <java/util/function/ObjDoubleConsumer.h>
#include <java/util/function/ObjIntConsumer.h>
#include <java/util/function/ObjLongConsumer.h>
#include <java/util/function/Predicate.h>
#include <java/util/function/Supplier.h>
#include <java/util/function/ToDoubleBiFunction.h>
#include <java/util/function/ToDoubleFunction.h>
#include <java/util/function/ToIntBiFunction.h>
#include <java/util/function/ToIntFunction.h>
#include <java/util/function/ToLongBiFunction.h>
#include <java/util/function/ToLongFunction.h>
#include <java/util/function/UnaryOperator.h>
#include <java/util/jar/Attributes.h>
#include <java/util/jar/Attributes$Name.h>
#include <java/util/jar/JarEntry.h>
#include <java/util/jar/JarException.h>
#include <java/util/jar/JarFile.h>
#include <java/util/jar/JarFile$1.h>
#include <java/util/jar/JarFile$2.h>
#include <java/util/jar/JarFile$JarFileEntry.h>
#include <java/util/jar/JarInputStream.h>
#include <java/util/jar/JarOutputStream.h>
#include <java/util/jar/JarVerifier.h>
#include <java/util/jar/JarVerifier$1.h>
#include <java/util/jar/JarVerifier$2.h>
#include <java/util/jar/JarVerifier$3.h>
#include <java/util/jar/JarVerifier$VerifierCodeSource.h>
#include <java/util/jar/JarVerifier$VerifierStream.h>
#include <java/util/jar/JavaUtilJarAccessImpl.h>
#include <java/util/jar/Manifest.h>
#include <java/util/jar/Manifest$FastInputStream.h>
#include <java/util/random/RandomGenerator.h>
#include <java/util/random/RandomGenerator$ArbitrarilyJumpableGenerator.h>
#include <java/util/random/RandomGenerator$JumpableGenerator.h>
#include <java/util/random/RandomGenerator$LeapableGenerator.h>
#include <java/util/random/RandomGenerator$SplittableGenerator.h>
#include <java/util/random/RandomGenerator$StreamableGenerator.h>
#include <java/util/random/RandomGeneratorFactory.h>
#include <java/util/random/RandomGeneratorFactory$FactoryMapHolder.h>
#include <java/util/regex/ASCII.h>
#include <java/util/regex/CharPredicates.h>
#include <java/util/regex/EmojiData.h>
#include <java/util/regex/Grapheme.h>
#include <java/util/regex/IntHashSet.h>
#include <java/util/regex/MatchResult.h>
#include <java/util/regex/Matcher.h>
#include <java/util/regex/Matcher$1MatchResultIterator.h>
#include <java/util/regex/Matcher$ImmutableMatchResult.h>
#include <java/util/regex/Pattern.h>
#include <java/util/regex/Pattern$1.h>
#include <java/util/regex/Pattern$1MatcherIterator.h>
#include <java/util/regex/Pattern$BackRef.h>
#include <java/util/regex/Pattern$Begin.h>
#include <java/util/regex/Pattern$Behind.h>
#include <java/util/regex/Pattern$BehindS.h>
#include <java/util/regex/Pattern$BitClass.h>
#include <java/util/regex/Pattern$BmpCharPredicate.h>
#include <java/util/regex/Pattern$BmpCharProperty.h>
#include <java/util/regex/Pattern$BmpCharPropertyGreedy.h>
#include <java/util/regex/Pattern$BnM.h>
#include <java/util/regex/Pattern$BnMS.h>
#include <java/util/regex/Pattern$Bound.h>
#include <java/util/regex/Pattern$Branch.h>
#include <java/util/regex/Pattern$BranchConn.h>
#include <java/util/regex/Pattern$CIBackRef.h>
#include <java/util/regex/Pattern$Caret.h>
#include <java/util/regex/Pattern$CharPredicate.h>
#include <java/util/regex/Pattern$CharProperty.h>
#include <java/util/regex/Pattern$CharPropertyGreedy.h>
#include <java/util/regex/Pattern$Curly.h>
#include <java/util/regex/Pattern$Dollar.h>
#include <java/util/regex/Pattern$End.h>
#include <java/util/regex/Pattern$First.h>
#include <java/util/regex/Pattern$GraphemeBound.h>
#include <java/util/regex/Pattern$GroupCurly.h>
#include <java/util/regex/Pattern$GroupHead.h>
#include <java/util/regex/Pattern$GroupTail.h>
#include <java/util/regex/Pattern$LastMatch.h>
#include <java/util/regex/Pattern$LastNode.h>
#include <java/util/regex/Pattern$LazyLoop.h>
#include <java/util/regex/Pattern$LineEnding.h>
#include <java/util/regex/Pattern$LookBehindEndNode.h>
#include <java/util/regex/Pattern$Loop.h>
#include <java/util/regex/Pattern$NFCCharProperty.h>
#include <java/util/regex/Pattern$Neg.h>
#include <java/util/regex/Pattern$Node.h>
#include <java/util/regex/Pattern$NotBehind.h>
#include <java/util/regex/Pattern$NotBehindS.h>
#include <java/util/regex/Pattern$Pos.h>
#include <java/util/regex/Pattern$Prolog.h>
#include <java/util/regex/Pattern$Qtype.h>
#include <java/util/regex/Pattern$Ques.h>
#include <java/util/regex/Pattern$Slice.h>
#include <java/util/regex/Pattern$SliceI.h>
#include <java/util/regex/Pattern$SliceIS.h>
#include <java/util/regex/Pattern$SliceNode.h>
#include <java/util/regex/Pattern$SliceS.h>
#include <java/util/regex/Pattern$SliceU.h>
#include <java/util/regex/Pattern$SliceUS.h>
#include <java/util/regex/Pattern$Start.h>
#include <java/util/regex/Pattern$StartS.h>
#include <java/util/regex/Pattern$TreeInfo.h>
#include <java/util/regex/Pattern$UnixCaret.h>
#include <java/util/regex/Pattern$UnixDollar.h>
#include <java/util/regex/Pattern$XGrapheme.h>
#include <java/util/regex/PatternSyntaxException.h>
#include <java/util/regex/PrintPattern.h>
#include <java/util/spi/AbstractResourceBundleProvider.h>
#include <java/util/spi/CalendarDataProvider.h>
#include <java/util/spi/CalendarNameProvider.h>
#include <java/util/spi/CurrencyNameProvider.h>
#include <java/util/spi/LocaleNameProvider.h>
#include <java/util/spi/LocaleServiceProvider.h>
#include <java/util/spi/ResourceBundleControlProvider.h>
#include <java/util/spi/ResourceBundleProvider.h>
#include <java/util/spi/TimeZoneNameProvider.h>
#include <java/util/spi/ToolProvider.h>
#include <java/util/stream/AbstractPipeline.h>
#include <java/util/stream/AbstractShortCircuitTask.h>
#include <java/util/stream/AbstractSpinedBuffer.h>
#include <java/util/stream/AbstractTask.h>
#include <java/util/stream/BaseStream.h>
#include <java/util/stream/Collector.h>
#include <java/util/stream/Collector$Characteristics.h>
#include <java/util/stream/Collectors.h>
#include <java/util/stream/Collectors$1OptionalBox.h>
#include <java/util/stream/Collectors$1PairBox.h>
#include <java/util/stream/Collectors$CollectorImpl.h>
#include <java/util/stream/Collectors$Partition.h>
#include <java/util/stream/Collectors$Partition$1.h>
#include <java/util/stream/DistinctOps.h>
#include <java/util/stream/DistinctOps$1.h>
#include <java/util/stream/DistinctOps$1$1.h>
#include <java/util/stream/DistinctOps$1$2.h>
#include <java/util/stream/DoublePipeline.h>
#include <java/util/stream/DoublePipeline$1.h>
#include <java/util/stream/DoublePipeline$1$1.h>
#include <java/util/stream/DoublePipeline$2.h>
#include <java/util/stream/DoublePipeline$2$1.h>
#include <java/util/stream/DoublePipeline$3.h>
#include <java/util/stream/DoublePipeline$3$1.h>
#include <java/util/stream/DoublePipeline$4.h>
#include <java/util/stream/DoublePipeline$4$1.h>
#include <java/util/stream/DoublePipeline$5.h>
#include <java/util/stream/DoublePipeline$5$1.h>
#include <java/util/stream/DoublePipeline$6.h>
#include <java/util/stream/DoublePipeline$6$1.h>
#include <java/util/stream/DoublePipeline$7.h>
#include <java/util/stream/DoublePipeline$8.h>
#include <java/util/stream/DoublePipeline$8$1.h>
#include <java/util/stream/DoublePipeline$9.h>
#include <java/util/stream/DoublePipeline$9$1.h>
#include <java/util/stream/DoublePipeline$Head.h>
#include <java/util/stream/DoublePipeline$StatefulOp.h>
#include <java/util/stream/DoublePipeline$StatelessOp.h>
#include <java/util/stream/DoubleStream.h>
#include <java/util/stream/DoubleStream$1.h>
#include <java/util/stream/DoubleStream$2.h>
#include <java/util/stream/DoubleStream$Builder.h>
#include <java/util/stream/DoubleStream$DoubleMapMultiConsumer.h>
#include <java/util/stream/FindOps.h>
#include <java/util/stream/FindOps$FindOp.h>
#include <java/util/stream/FindOps$FindSink.h>
#include <java/util/stream/FindOps$FindSink$OfDouble.h>
#include <java/util/stream/FindOps$FindSink$OfInt.h>
#include <java/util/stream/FindOps$FindSink$OfLong.h>
#include <java/util/stream/FindOps$FindSink$OfRef.h>
#include <java/util/stream/FindOps$FindTask.h>
#include <java/util/stream/ForEachOps.h>
#include <java/util/stream/ForEachOps$ForEachOp.h>
#include <java/util/stream/ForEachOps$ForEachOp$OfDouble.h>
#include <java/util/stream/ForEachOps$ForEachOp$OfInt.h>
#include <java/util/stream/ForEachOps$ForEachOp$OfLong.h>
#include <java/util/stream/ForEachOps$ForEachOp$OfRef.h>
#include <java/util/stream/ForEachOps$ForEachOrderedTask.h>
#include <java/util/stream/ForEachOps$ForEachTask.h>
#include <java/util/stream/IntPipeline.h>
#include <java/util/stream/IntPipeline$1.h>
#include <java/util/stream/IntPipeline$1$1.h>
#include <java/util/stream/IntPipeline$10.h>
#include <java/util/stream/IntPipeline$10$1.h>
#include <java/util/stream/IntPipeline$11.h>
#include <java/util/stream/IntPipeline$11$1.h>
#include <java/util/stream/IntPipeline$2.h>
#include <java/util/stream/IntPipeline$2$1.h>
#include <java/util/stream/IntPipeline$3.h>
#include <java/util/stream/IntPipeline$3$1.h>
#include <java/util/stream/IntPipeline$4.h>
#include <java/util/stream/IntPipeline$4$1.h>
#include <java/util/stream/IntPipeline$5.h>
#include <java/util/stream/IntPipeline$5$1.h>
#include <java/util/stream/IntPipeline$6.h>
#include <java/util/stream/IntPipeline$6$1.h>
#include <java/util/stream/IntPipeline$7.h>
#include <java/util/stream/IntPipeline$7$1.h>
#include <java/util/stream/IntPipeline$8.h>
#include <java/util/stream/IntPipeline$8$1.h>
#include <java/util/stream/IntPipeline$9.h>
#include <java/util/stream/IntPipeline$Head.h>
#include <java/util/stream/IntPipeline$StatefulOp.h>
#include <java/util/stream/IntPipeline$StatelessOp.h>
#include <java/util/stream/IntStream.h>
#include <java/util/stream/IntStream$1.h>
#include <java/util/stream/IntStream$2.h>
#include <java/util/stream/IntStream$Builder.h>
#include <java/util/stream/IntStream$IntMapMultiConsumer.h>
#include <java/util/stream/LongPipeline.h>
#include <java/util/stream/LongPipeline$1.h>
#include <java/util/stream/LongPipeline$1$1.h>
#include <java/util/stream/LongPipeline$10.h>
#include <java/util/stream/LongPipeline$10$1.h>
#include <java/util/stream/LongPipeline$2.h>
#include <java/util/stream/LongPipeline$2$1.h>
#include <java/util/stream/LongPipeline$3.h>
#include <java/util/stream/LongPipeline$3$1.h>
#include <java/util/stream/LongPipeline$4.h>
#include <java/util/stream/LongPipeline$4$1.h>
#include <java/util/stream/LongPipeline$5.h>
#include <java/util/stream/LongPipeline$5$1.h>
#include <java/util/stream/LongPipeline$6.h>
#include <java/util/stream/LongPipeline$6$1.h>
#include <java/util/stream/LongPipeline$7.h>
#include <java/util/stream/LongPipeline$7$1.h>
#include <java/util/stream/LongPipeline$8.h>
#include <java/util/stream/LongPipeline$9.h>
#include <java/util/stream/LongPipeline$9$1.h>
#include <java/util/stream/LongPipeline$Head.h>
#include <java/util/stream/LongPipeline$StatefulOp.h>
#include <java/util/stream/LongPipeline$StatelessOp.h>
#include <java/util/stream/LongStream.h>
#include <java/util/stream/LongStream$1.h>
#include <java/util/stream/LongStream$2.h>
#include <java/util/stream/LongStream$Builder.h>
#include <java/util/stream/LongStream$LongMapMultiConsumer.h>
#include <java/util/stream/MatchOps.h>
#include <java/util/stream/MatchOps$1MatchSink.h>
#include <java/util/stream/MatchOps$2MatchSink.h>
#include <java/util/stream/MatchOps$3MatchSink.h>
#include <java/util/stream/MatchOps$4MatchSink.h>
#include <java/util/stream/MatchOps$BooleanTerminalSink.h>
#include <java/util/stream/MatchOps$MatchKind.h>
#include <java/util/stream/MatchOps$MatchOp.h>
#include <java/util/stream/MatchOps$MatchTask.h>
#include <java/util/stream/Node.h>
#include <java/util/stream/Node$Builder.h>
#include <java/util/stream/Node$Builder$OfDouble.h>
#include <java/util/stream/Node$Builder$OfInt.h>
#include <java/util/stream/Node$Builder$OfLong.h>
#include <java/util/stream/Node$OfDouble.h>
#include <java/util/stream/Node$OfInt.h>
#include <java/util/stream/Node$OfLong.h>
#include <java/util/stream/Node$OfPrimitive.h>
#include <java/util/stream/Nodes.h>
#include <java/util/stream/Nodes$1.h>
#include <java/util/stream/Nodes$AbstractConcNode.h>
#include <java/util/stream/Nodes$ArrayNode.h>
#include <java/util/stream/Nodes$CollectionNode.h>
#include <java/util/stream/Nodes$CollectorTask.h>
#include <java/util/stream/Nodes$CollectorTask$OfDouble.h>
#include <java/util/stream/Nodes$CollectorTask$OfInt.h>
#include <java/util/stream/Nodes$CollectorTask$OfLong.h>
#include <java/util/stream/Nodes$CollectorTask$OfRef.h>
#include <java/util/stream/Nodes$ConcNode.h>
#include <java/util/stream/Nodes$ConcNode$OfDouble.h>
#include <java/util/stream/Nodes$ConcNode$OfInt.h>
#include <java/util/stream/Nodes$ConcNode$OfLong.h>
#include <java/util/stream/Nodes$ConcNode$OfPrimitive.h>
#include <java/util/stream/Nodes$DoubleArrayNode.h>
#include <java/util/stream/Nodes$DoubleFixedNodeBuilder.h>
#include <java/util/stream/Nodes$DoubleSpinedNodeBuilder.h>
#include <java/util/stream/Nodes$EmptyNode.h>
#include <java/util/stream/Nodes$EmptyNode$OfDouble.h>
#include <java/util/stream/Nodes$EmptyNode$OfInt.h>
#include <java/util/stream/Nodes$EmptyNode$OfLong.h>
#include <java/util/stream/Nodes$EmptyNode$OfRef.h>
#include <java/util/stream/Nodes$FixedNodeBuilder.h>
#include <java/util/stream/Nodes$IntArrayNode.h>
#include <java/util/stream/Nodes$IntFixedNodeBuilder.h>
#include <java/util/stream/Nodes$IntSpinedNodeBuilder.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator$OfDouble.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator$OfInt.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator$OfLong.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive.h>
#include <java/util/stream/Nodes$InternalNodeSpliterator$OfRef.h>
#include <java/util/stream/Nodes$LongArrayNode.h>
#include <java/util/stream/Nodes$LongFixedNodeBuilder.h>
#include <java/util/stream/Nodes$LongSpinedNodeBuilder.h>
#include <java/util/stream/Nodes$SizedCollectorTask.h>
#include <java/util/stream/Nodes$SizedCollectorTask$OfDouble.h>
#include <java/util/stream/Nodes$SizedCollectorTask$OfInt.h>
#include <java/util/stream/Nodes$SizedCollectorTask$OfLong.h>
#include <java/util/stream/Nodes$SizedCollectorTask$OfRef.h>
#include <java/util/stream/Nodes$SpinedNodeBuilder.h>
#include <java/util/stream/Nodes$ToArrayTask.h>
#include <java/util/stream/Nodes$ToArrayTask$OfDouble.h>
#include <java/util/stream/Nodes$ToArrayTask$OfInt.h>
#include <java/util/stream/Nodes$ToArrayTask$OfLong.h>
#include <java/util/stream/Nodes$ToArrayTask$OfPrimitive.h>
#include <java/util/stream/Nodes$ToArrayTask$OfRef.h>
#include <java/util/stream/PipelineHelper.h>
#include <java/util/stream/ReduceOps.h>
#include <java/util/stream/ReduceOps$1.h>
#include <java/util/stream/ReduceOps$10.h>
#include <java/util/stream/ReduceOps$10ReducingSink.h>
#include <java/util/stream/ReduceOps$11.h>
#include <java/util/stream/ReduceOps$11ReducingSink.h>
#include <java/util/stream/ReduceOps$12.h>
#include <java/util/stream/ReduceOps$12ReducingSink.h>
#include <java/util/stream/ReduceOps$13.h>
#include <java/util/stream/ReduceOps$13ReducingSink.h>
#include <java/util/stream/ReduceOps$14.h>
#include <java/util/stream/ReduceOps$15.h>
#include <java/util/stream/ReduceOps$16.h>
#include <java/util/stream/ReduceOps$17.h>
#include <java/util/stream/ReduceOps$1ReducingSink.h>
#include <java/util/stream/ReduceOps$2.h>
#include <java/util/stream/ReduceOps$2ReducingSink.h>
#include <java/util/stream/ReduceOps$3.h>
#include <java/util/stream/ReduceOps$3ReducingSink.h>
#include <java/util/stream/ReduceOps$4.h>
#include <java/util/stream/ReduceOps$4ReducingSink.h>
#include <java/util/stream/ReduceOps$5.h>
#include <java/util/stream/ReduceOps$5ReducingSink.h>
#include <java/util/stream/ReduceOps$6.h>
#include <java/util/stream/ReduceOps$6ReducingSink.h>
#include <java/util/stream/ReduceOps$7.h>
#include <java/util/stream/ReduceOps$7ReducingSink.h>
#include <java/util/stream/ReduceOps$8.h>
#include <java/util/stream/ReduceOps$8ReducingSink.h>
#include <java/util/stream/ReduceOps$9.h>
#include <java/util/stream/ReduceOps$9ReducingSink.h>
#include <java/util/stream/ReduceOps$AccumulatingSink.h>
#include <java/util/stream/ReduceOps$Box.h>
#include <java/util/stream/ReduceOps$CountingSink.h>
#include <java/util/stream/ReduceOps$CountingSink$OfDouble.h>
#include <java/util/stream/ReduceOps$CountingSink$OfInt.h>
#include <java/util/stream/ReduceOps$CountingSink$OfLong.h>
#include <java/util/stream/ReduceOps$CountingSink$OfRef.h>
#include <java/util/stream/ReduceOps$ReduceOp.h>
#include <java/util/stream/ReduceOps$ReduceTask.h>
#include <java/util/stream/ReferencePipeline.h>
#include <java/util/stream/ReferencePipeline$1.h>
#include <java/util/stream/ReferencePipeline$10.h>
#include <java/util/stream/ReferencePipeline$10$1.h>
#include <java/util/stream/ReferencePipeline$11.h>
#include <java/util/stream/ReferencePipeline$11$1.h>
#include <java/util/stream/ReferencePipeline$12.h>
#include <java/util/stream/ReferencePipeline$12$1.h>
#include <java/util/stream/ReferencePipeline$13.h>
#include <java/util/stream/ReferencePipeline$13$1.h>
#include <java/util/stream/ReferencePipeline$14.h>
#include <java/util/stream/ReferencePipeline$14$1.h>
#include <java/util/stream/ReferencePipeline$15.h>
#include <java/util/stream/ReferencePipeline$15$1.h>
#include <java/util/stream/ReferencePipeline$2.h>
#include <java/util/stream/ReferencePipeline$2$1.h>
#include <java/util/stream/ReferencePipeline$3.h>
#include <java/util/stream/ReferencePipeline$3$1.h>
#include <java/util/stream/ReferencePipeline$4.h>
#include <java/util/stream/ReferencePipeline$4$1.h>
#include <java/util/stream/ReferencePipeline$5.h>
#include <java/util/stream/ReferencePipeline$5$1.h>
#include <java/util/stream/ReferencePipeline$6.h>
#include <java/util/stream/ReferencePipeline$6$1.h>
#include <java/util/stream/ReferencePipeline$7.h>
#include <java/util/stream/ReferencePipeline$7$1.h>
#include <java/util/stream/ReferencePipeline$8.h>
#include <java/util/stream/ReferencePipeline$8$1.h>
#include <java/util/stream/ReferencePipeline$9.h>
#include <java/util/stream/ReferencePipeline$9$1.h>
#include <java/util/stream/ReferencePipeline$Head.h>
#include <java/util/stream/ReferencePipeline$StatefulOp.h>
#include <java/util/stream/ReferencePipeline$StatelessOp.h>
#include <java/util/stream/Sink.h>
#include <java/util/stream/Sink$ChainedDouble.h>
#include <java/util/stream/Sink$ChainedInt.h>
#include <java/util/stream/Sink$ChainedLong.h>
#include <java/util/stream/Sink$ChainedReference.h>
#include <java/util/stream/Sink$OfDouble.h>
#include <java/util/stream/Sink$OfInt.h>
#include <java/util/stream/Sink$OfLong.h>
#include <java/util/stream/SliceOps.h>
#include <java/util/stream/SliceOps$1.h>
#include <java/util/stream/SliceOps$1$1.h>
#include <java/util/stream/SliceOps$2.h>
#include <java/util/stream/SliceOps$2$1.h>
#include <java/util/stream/SliceOps$3.h>
#include <java/util/stream/SliceOps$3$1.h>
#include <java/util/stream/SliceOps$4.h>
#include <java/util/stream/SliceOps$4$1.h>
#include <java/util/stream/SliceOps$5.h>
#include <java/util/stream/SliceOps$SliceTask.h>
#include <java/util/stream/SortedOps.h>
#include <java/util/stream/SortedOps$AbstractDoubleSortingSink.h>
#include <java/util/stream/SortedOps$AbstractIntSortingSink.h>
#include <java/util/stream/SortedOps$AbstractLongSortingSink.h>
#include <java/util/stream/SortedOps$AbstractRefSortingSink.h>
#include <java/util/stream/SortedOps$DoubleSortingSink.h>
#include <java/util/stream/SortedOps$IntSortingSink.h>
#include <java/util/stream/SortedOps$LongSortingSink.h>
#include <java/util/stream/SortedOps$OfDouble.h>
#include <java/util/stream/SortedOps$OfInt.h>
#include <java/util/stream/SortedOps$OfLong.h>
#include <java/util/stream/SortedOps$OfRef.h>
#include <java/util/stream/SortedOps$RefSortingSink.h>
#include <java/util/stream/SortedOps$SizedDoubleSortingSink.h>
#include <java/util/stream/SortedOps$SizedIntSortingSink.h>
#include <java/util/stream/SortedOps$SizedLongSortingSink.h>
#include <java/util/stream/SortedOps$SizedRefSortingSink.h>
#include <java/util/stream/SpinedBuffer.h>
#include <java/util/stream/SpinedBuffer$1Splitr.h>
#include <java/util/stream/SpinedBuffer$OfDouble.h>
#include <java/util/stream/SpinedBuffer$OfDouble$1Splitr.h>
#include <java/util/stream/SpinedBuffer$OfInt.h>
#include <java/util/stream/SpinedBuffer$OfInt$1Splitr.h>
#include <java/util/stream/SpinedBuffer$OfLong.h>
#include <java/util/stream/SpinedBuffer$OfLong$1Splitr.h>
#include <java/util/stream/SpinedBuffer$OfPrimitive.h>
#include <java/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator.h>
#include <java/util/stream/Stream.h>
#include <java/util/stream/Stream$1.h>
#include <java/util/stream/Stream$2.h>
#include <java/util/stream/Stream$Builder.h>
#include <java/util/stream/StreamOpFlag.h>
#include <java/util/stream/StreamOpFlag$MaskBuilder.h>
#include <java/util/stream/StreamOpFlag$Type.h>
#include <java/util/stream/StreamShape.h>
#include <java/util/stream/StreamSpliterators.h>
#include <java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer$OfDouble.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer$OfInt.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer$OfLong.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer$OfPrimitive.h>
#include <java/util/stream/StreamSpliterators$ArrayBuffer$OfRef.h>
#include <java/util/stream/StreamSpliterators$DelegatingSpliterator.h>
#include <java/util/stream/StreamSpliterators$DelegatingSpliterator$OfDouble.h>
#include <java/util/stream/StreamSpliterators$DelegatingSpliterator$OfInt.h>
#include <java/util/stream/StreamSpliterators$DelegatingSpliterator$OfLong.h>
#include <java/util/stream/StreamSpliterators$DelegatingSpliterator$OfPrimitive.h>
#include <java/util/stream/StreamSpliterators$DistinctSpliterator.h>
#include <java/util/stream/StreamSpliterators$DoubleWrappingSpliterator.h>
#include <java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator.h>
#include <java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble.h>
#include <java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfInt.h>
#include <java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfLong.h>
#include <java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef.h>
#include <java/util/stream/StreamSpliterators$IntWrappingSpliterator.h>
#include <java/util/stream/StreamSpliterators$LongWrappingSpliterator.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator$OfDouble.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator$OfInt.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator$OfLong.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive.h>
#include <java/util/stream/StreamSpliterators$SliceSpliterator$OfRef.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfDouble.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfInt.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfLong.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef.h>
#include <java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$PermitStatus.h>
#include <java/util/stream/StreamSpliterators$WrappingSpliterator.h>
#include <java/util/stream/StreamSupport.h>
#include <java/util/stream/Streams.h>
#include <java/util/stream/Streams$1.h>
#include <java/util/stream/Streams$2.h>
#include <java/util/stream/Streams$AbstractStreamBuilderImpl.h>
#include <java/util/stream/Streams$ConcatSpliterator.h>
#include <java/util/stream/Streams$ConcatSpliterator$OfDouble.h>
#include <java/util/stream/Streams$ConcatSpliterator$OfInt.h>
#include <java/util/stream/Streams$ConcatSpliterator$OfLong.h>
#include <java/util/stream/Streams$ConcatSpliterator$OfPrimitive.h>
#include <java/util/stream/Streams$ConcatSpliterator$OfRef.h>
#include <java/util/stream/Streams$DoubleStreamBuilderImpl.h>
#include <java/util/stream/Streams$IntStreamBuilderImpl.h>
#include <java/util/stream/Streams$LongStreamBuilderImpl.h>
#include <java/util/stream/Streams$RangeIntSpliterator.h>
#include <java/util/stream/Streams$RangeLongSpliterator.h>
#include <java/util/stream/Streams$StreamBuilderImpl.h>
#include <java/util/stream/TerminalOp.h>
#include <java/util/stream/TerminalSink.h>
#include <java/util/stream/Tripwire.h>
#include <java/util/stream/WhileOps.h>
#include <java/util/stream/WhileOps$1.h>
#include <java/util/stream/WhileOps$1$1.h>
#include <java/util/stream/WhileOps$1Op.h>
#include <java/util/stream/WhileOps$1Op$1OpSink.h>
#include <java/util/stream/WhileOps$2.h>
#include <java/util/stream/WhileOps$2$1.h>
#include <java/util/stream/WhileOps$2Op.h>
#include <java/util/stream/WhileOps$2Op$1OpSink.h>
#include <java/util/stream/WhileOps$3.h>
#include <java/util/stream/WhileOps$3$1.h>
#include <java/util/stream/WhileOps$3Op.h>
#include <java/util/stream/WhileOps$3Op$1OpSink.h>
#include <java/util/stream/WhileOps$4.h>
#include <java/util/stream/WhileOps$4$1.h>
#include <java/util/stream/WhileOps$4Op.h>
#include <java/util/stream/WhileOps$4Op$1OpSink.h>
#include <java/util/stream/WhileOps$DropWhileOp.h>
#include <java/util/stream/WhileOps$DropWhileSink.h>
#include <java/util/stream/WhileOps$DropWhileTask.h>
#include <java/util/stream/WhileOps$TakeWhileTask.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfDouble.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfDouble$Taking.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfInt.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfInt$Dropping.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfInt$Taking.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfLong.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfLong$Dropping.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfLong$Taking.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping.h>
#include <java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Taking.h>
#include <java/util/zip/Adler32.h>
#include <java/util/zip/CRC32.h>
#include <java/util/zip/CRC32C.h>
#include <java/util/zip/CheckedInputStream.h>
#include <java/util/zip/CheckedOutputStream.h>
#include <java/util/zip/Checksum.h>
#include <java/util/zip/Checksum$1.h>
#include <java/util/zip/DataFormatException.h>
#include <java/util/zip/Deflater.h>
#include <java/util/zip/Deflater$DeflaterZStreamRef.h>
#include <java/util/zip/DeflaterInputStream.h>
#include <java/util/zip/DeflaterOutputStream.h>
#include <java/util/zip/GZIPInputStream.h>
#include <java/util/zip/GZIPInputStream$1.h>
#include <java/util/zip/GZIPOutputStream.h>
#include <java/util/zip/Inflater.h>
#include <java/util/zip/Inflater$InflaterZStreamRef.h>
#include <java/util/zip/InflaterInputStream.h>
#include <java/util/zip/InflaterOutputStream.h>
#include <java/util/zip/ZipCoder.h>
#include <java/util/zip/ZipCoder$UTF8ZipCoder.h>
#include <java/util/zip/ZipConstants.h>
#include <java/util/zip/ZipConstants64.h>
#include <java/util/zip/ZipEntry.h>
#include <java/util/zip/ZipError.h>
#include <java/util/zip/ZipException.h>
#include <java/util/zip/ZipFile.h>
#include <java/util/zip/ZipFile$1.h>
#include <java/util/zip/ZipFile$CleanableResource.h>
#include <java/util/zip/ZipFile$EntrySpliterator.h>
#include <java/util/zip/ZipFile$InflaterCleanupAction.h>
#include <java/util/zip/ZipFile$Source.h>
#include <java/util/zip/ZipFile$Source$End.h>
#include <java/util/zip/ZipFile$Source$Key.h>
#include <java/util/zip/ZipFile$ZipEntryIterator.h>
#include <java/util/zip/ZipFile$ZipFileInflaterInputStream.h>
#include <java/util/zip/ZipFile$ZipFileInputStream.h>
#include <java/util/zip/ZipInputStream.h>
#include <java/util/zip/ZipOutputStream.h>
#include <java/util/zip/ZipOutputStream$XEntry.h>
#include <java/util/zip/ZipUtils.h>
#include <javax/crypto/AEADBadTagException.h>
#include <javax/crypto/BadPaddingException.h>
#include <javax/crypto/Cipher.h>
#include <javax/crypto/Cipher$Transform.h>
#include <javax/crypto/CipherInputStream.h>
#include <javax/crypto/CipherOutputStream.h>
#include <javax/crypto/CipherSpi.h>
#include <javax/crypto/CryptoAllPermission.h>
#include <javax/crypto/CryptoAllPermissionCollection.h>
#include <javax/crypto/CryptoPermission.h>
#include <javax/crypto/CryptoPermissionCollection.h>
#include <javax/crypto/CryptoPermissions.h>
#include <javax/crypto/CryptoPolicyParser.h>
#include <javax/crypto/CryptoPolicyParser$CryptoPermissionEntry.h>
#include <javax/crypto/CryptoPolicyParser$GrantEntry.h>
#include <javax/crypto/CryptoPolicyParser$ParsingException.h>
#include <javax/crypto/EncryptedPrivateKeyInfo.h>
#include <javax/crypto/ExemptionMechanism.h>
#include <javax/crypto/ExemptionMechanismException.h>
#include <javax/crypto/ExemptionMechanismSpi.h>
#include <javax/crypto/IllegalBlockSizeException.h>
#include <javax/crypto/JceSecurity.h>
#include <javax/crypto/JceSecurity$1.h>
#include <javax/crypto/JceSecurity$2.h>
#include <javax/crypto/JceSecurity$IdentityWrapper.h>
#include <javax/crypto/JceSecurityManager.h>
#include <javax/crypto/JceSecurityManager$1.h>
#include <javax/crypto/KeyAgreement.h>
#include <javax/crypto/KeyAgreementSpi.h>
#include <javax/crypto/KeyGenerator.h>
#include <javax/crypto/KeyGeneratorSpi.h>
#include <javax/crypto/Mac.h>
#include <javax/crypto/MacSpi.h>
#include <javax/crypto/NoSuchPaddingException.h>
#include <javax/crypto/NullCipher.h>
#include <javax/crypto/NullCipherSpi.h>
#include <javax/crypto/PermissionsEnumerator.h>
#include <javax/crypto/ProviderVerifier.h>
#include <javax/crypto/ProviderVerifier$1.h>
#include <javax/crypto/SealedObject.h>
#include <javax/crypto/SecretKey.h>
#include <javax/crypto/SecretKeyFactory.h>
#include <javax/crypto/SecretKeyFactorySpi.h>
#include <javax/crypto/ShortBufferException.h>
#include <javax/crypto/extObjectInputStream.h>
#include <javax/crypto/interfaces/DHKey.h>
#include <javax/crypto/interfaces/DHPrivateKey.h>
#include <javax/crypto/interfaces/DHPublicKey.h>
#include <javax/crypto/interfaces/PBEKey.h>
#include <javax/crypto/spec/ChaCha20ParameterSpec.h>
#include <javax/crypto/spec/DESKeySpec.h>
#include <javax/crypto/spec/DESedeKeySpec.h>
#include <javax/crypto/spec/DHGenParameterSpec.h>
#include <javax/crypto/spec/DHParameterSpec.h>
#include <javax/crypto/spec/DHPrivateKeySpec.h>
#include <javax/crypto/spec/DHPublicKeySpec.h>
#include <javax/crypto/spec/GCMParameterSpec.h>
#include <javax/crypto/spec/IvParameterSpec.h>
#include <javax/crypto/spec/OAEPParameterSpec.h>
#include <javax/crypto/spec/PBEKeySpec.h>
#include <javax/crypto/spec/PBEParameterSpec.h>
#include <javax/crypto/spec/PSource.h>
#include <javax/crypto/spec/PSource$PSpecified.h>
#include <javax/crypto/spec/RC2ParameterSpec.h>
#include <javax/crypto/spec/RC5ParameterSpec.h>
#include <javax/crypto/spec/SecretKeySpec.h>
#include <javax/crypto/spec/SecretKeySpec$1.h>
#include <javax/net/DefaultServerSocketFactory.h>
#include <javax/net/DefaultSocketFactory.h>
#include <javax/net/ServerSocketFactory.h>
#include <javax/net/SocketFactory.h>
#include <javax/net/ssl/CertPathTrustManagerParameters.h>
#include <javax/net/ssl/DefaultSSLServerSocketFactory.h>
#include <javax/net/ssl/DefaultSSLSocketFactory.h>
#include <javax/net/ssl/ExtendedSSLSession.h>
#include <javax/net/ssl/HandshakeCompletedEvent.h>
#include <javax/net/ssl/HandshakeCompletedListener.h>
#include <javax/net/ssl/HostnameVerifier.h>
#include <javax/net/ssl/HttpsURLConnection.h>
#include <javax/net/ssl/HttpsURLConnection$DefaultHostnameVerifier.h>
#include <javax/net/ssl/KeyManager.h>
#include <javax/net/ssl/KeyManagerFactory.h>
#include <javax/net/ssl/KeyManagerFactory$1.h>
#include <javax/net/ssl/KeyManagerFactorySpi.h>
#include <javax/net/ssl/KeyStoreBuilderParameters.h>
#include <javax/net/ssl/ManagerFactoryParameters.h>
#include <javax/net/ssl/SNIHostName.h>
#include <javax/net/ssl/SNIHostName$SNIHostNameMatcher.h>
#include <javax/net/ssl/SNIMatcher.h>
#include <javax/net/ssl/SNIServerName.h>
#include <javax/net/ssl/SSLContext.h>
#include <javax/net/ssl/SSLContextSpi.h>
#include <javax/net/ssl/SSLEngine.h>
#include <javax/net/ssl/SSLEngineResult.h>
#include <javax/net/ssl/SSLEngineResult$HandshakeStatus.h>
#include <javax/net/ssl/SSLEngineResult$Status.h>
#include <javax/net/ssl/SSLException.h>
#include <javax/net/ssl/SSLHandshakeException.h>
#include <javax/net/ssl/SSLKeyException.h>
#include <javax/net/ssl/SSLParameters.h>
#include <javax/net/ssl/SSLPeerUnverifiedException.h>
#include <javax/net/ssl/SSLPermission.h>
#include <javax/net/ssl/SSLProtocolException.h>
#include <javax/net/ssl/SSLServerSocket.h>
#include <javax/net/ssl/SSLServerSocketFactory.h>
#include <javax/net/ssl/SSLServerSocketFactory$DefaultFactoryHolder.h>
#include <javax/net/ssl/SSLSession.h>
#include <javax/net/ssl/SSLSessionBindingEvent.h>
#include <javax/net/ssl/SSLSessionBindingListener.h>
#include <javax/net/ssl/SSLSessionContext.h>
#include <javax/net/ssl/SSLSocket.h>
#include <javax/net/ssl/SSLSocketFactory.h>
#include <javax/net/ssl/SSLSocketFactory$1.h>
#include <javax/net/ssl/SSLSocketFactory$DefaultFactoryHolder.h>
#include <javax/net/ssl/StandardConstants.h>
#include <javax/net/ssl/TrustManager.h>
#include <javax/net/ssl/TrustManagerFactory.h>
#include <javax/net/ssl/TrustManagerFactory$1.h>
#include <javax/net/ssl/TrustManagerFactorySpi.h>
#include <javax/net/ssl/X509ExtendedKeyManager.h>
#include <javax/net/ssl/X509ExtendedTrustManager.h>
#include <javax/net/ssl/X509KeyManager.h>
#include <javax/net/ssl/X509TrustManager.h>
#include <javax/security/auth/AuthPermission.h>
#include <javax/security/auth/DestroyFailedException.h>
#include <javax/security/auth/Destroyable.h>
#include <javax/security/auth/PrivateCredentialPermission.h>
#include <javax/security/auth/PrivateCredentialPermission$CredOwner.h>
#include <javax/security/auth/RefreshFailedException.h>
#include <javax/security/auth/Refreshable.h>
#include <javax/security/auth/Subject.h>
#include <javax/security/auth/Subject$1.h>
#include <javax/security/auth/Subject$2.h>
#include <javax/security/auth/Subject$AuthPermissionHolder.h>
#include <javax/security/auth/Subject$ClassSet.h>
#include <javax/security/auth/Subject$ClassSet$1.h>
#include <javax/security/auth/Subject$SecureSet.h>
#include <javax/security/auth/Subject$SecureSet$1.h>
#include <javax/security/auth/Subject$SecureSet$2.h>
#include <javax/security/auth/Subject$SecureSet$3.h>
#include <javax/security/auth/Subject$SecureSet$4.h>
#include <javax/security/auth/Subject$SecureSet$5.h>
#include <javax/security/auth/Subject$SecureSet$6.h>
#include <javax/security/auth/SubjectDomainCombiner.h>
#include <javax/security/auth/SubjectDomainCombiner$1.h>
#include <javax/security/auth/SubjectDomainCombiner$2.h>
#include <javax/security/auth/SubjectDomainCombiner$WeakKeyValueMap.h>
#include <javax/security/auth/callback/Callback.h>
#include <javax/security/auth/callback/CallbackHandler.h>
#include <javax/security/auth/callback/ChoiceCallback.h>
#include <javax/security/auth/callback/ConfirmationCallback.h>
#include <javax/security/auth/callback/LanguageCallback.h>
#include <javax/security/auth/callback/NameCallback.h>
#include <javax/security/auth/callback/PasswordCallback.h>
#include <javax/security/auth/callback/TextInputCallback.h>
#include <javax/security/auth/callback/TextOutputCallback.h>
#include <javax/security/auth/callback/UnsupportedCallbackException.h>
#include <javax/security/auth/login/AccountException.h>
#include <javax/security/auth/login/AccountExpiredException.h>
#include <javax/security/auth/login/AccountLockedException.h>
#include <javax/security/auth/login/AccountNotFoundException.h>
#include <javax/security/auth/login/AppConfigurationEntry.h>
#include <javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag.h>
#include <javax/security/auth/login/Configuration.h>
#include <javax/security/auth/login/Configuration$1.h>
#include <javax/security/auth/login/Configuration$2.h>
#include <javax/security/auth/login/Configuration$3.h>
#include <javax/security/auth/login/Configuration$ConfigDelegate.h>
#include <javax/security/auth/login/Configuration$Parameters.h>
#include <javax/security/auth/login/ConfigurationSpi.h>
#include <javax/security/auth/login/CredentialException.h>
#include <javax/security/auth/login/CredentialExpiredException.h>
#include <javax/security/auth/login/CredentialNotFoundException.h>
#include <javax/security/auth/login/FailedLoginException.h>
#include <javax/security/auth/login/LoginContext.h>
#include <javax/security/auth/login/LoginContext$1.h>
#include <javax/security/auth/login/LoginContext$2.h>
#include <javax/security/auth/login/LoginContext$3.h>
#include <javax/security/auth/login/LoginContext$4.h>
#include <javax/security/auth/login/LoginContext$ModuleInfo.h>
#include <javax/security/auth/login/LoginContext$SecureCallbackHandler.h>
#include <javax/security/auth/login/LoginContext$SecureCallbackHandler$1.h>
#include <javax/security/auth/login/LoginException.h>
#include <javax/security/auth/spi/LoginModule.h>
#include <javax/security/auth/x500/X500Principal.h>
#include <javax/security/auth/x500/X500PrivateCredential.h>
#include <javax/security/cert/Certificate.h>
#include <javax/security/cert/CertificateEncodingException.h>
#include <javax/security/cert/CertificateException.h>
#include <javax/security/cert/CertificateExpiredException.h>
#include <javax/security/cert/CertificateNotYetValidException.h>
#include <javax/security/cert/CertificateParsingException.h>
#include <javax/security/cert/X509Certificate.h>
#include <javax/security/cert/X509Certificate$1.h>
#include <jdk/internal/ValueBased.h>
#include <jdk/internal/access/JavaAWTAccess.h>
#include <jdk/internal/access/JavaAWTFontAccess.h>
#include <jdk/internal/access/JavaBeansAccess.h>
#include <jdk/internal/access/JavaIOAccess.h>
#include <jdk/internal/access/JavaIOFileDescriptorAccess.h>
#include <jdk/internal/access/JavaIOFilePermissionAccess.h>
#include <jdk/internal/access/JavaIORandomAccessFileAccess.h>
#include <jdk/internal/access/JavaLangAccess.h>
#include <jdk/internal/access/JavaLangInvokeAccess.h>
#include <jdk/internal/access/JavaLangModuleAccess.h>
#include <jdk/internal/access/JavaLangRefAccess.h>
#include <jdk/internal/access/JavaLangReflectAccess.h>
#include <jdk/internal/access/JavaNetHttpCookieAccess.h>
#include <jdk/internal/access/JavaNetInetAddressAccess.h>
#include <jdk/internal/access/JavaNetURLAccess.h>
#include <jdk/internal/access/JavaNetUriAccess.h>
#include <jdk/internal/access/JavaNioAccess.h>
#include <jdk/internal/access/JavaObjectInputFilterAccess.h>
#include <jdk/internal/access/JavaObjectInputStreamAccess.h>
#include <jdk/internal/access/JavaObjectInputStreamReadString.h>
#include <jdk/internal/access/JavaSecurityAccess.h>
#include <jdk/internal/access/JavaSecurityAccess$ProtectionDomainCache.h>
#include <jdk/internal/access/JavaSecuritySignatureAccess.h>
#include <jdk/internal/access/JavaSecuritySpecAccess.h>
#include <jdk/internal/access/JavaUtilCollectionAccess.h>
#include <jdk/internal/access/JavaUtilJarAccess.h>
#include <jdk/internal/access/JavaUtilResourceBundleAccess.h>
#include <jdk/internal/access/JavaUtilZipFileAccess.h>
#include <jdk/internal/access/JavaxCryptoSealedObjectAccess.h>
#include <jdk/internal/access/JavaxCryptoSpecAccess.h>
#include <jdk/internal/access/SharedSecrets.h>
#include <jdk/internal/access/foreign/MemoryAddressProxy.h>
#include <jdk/internal/access/foreign/MemorySegmentProxy.h>
#include <jdk/internal/access/foreign/NativeLibraryProxy.h>
#include <jdk/internal/access/foreign/UnmapperProxy.h>
#include <jdk/internal/event/DeserializationEvent.h>
#include <jdk/internal/event/Event.h>
#include <jdk/internal/event/EventHelper.h>
#include <jdk/internal/event/ProcessStartEvent.h>
#include <jdk/internal/event/SecurityPropertyModificationEvent.h>
#include <jdk/internal/event/TLSHandshakeEvent.h>
#include <jdk/internal/event/X509CertificateEvent.h>
#include <jdk/internal/event/X509ValidationEvent.h>
#include <jdk/internal/icu/impl/BMPSet.h>
#include <jdk/internal/icu/impl/CharTrie.h>
#include <jdk/internal/icu/impl/CharacterIteratorWrapper.h>
#include <jdk/internal/icu/impl/ICUBinary.h>
#include <jdk/internal/icu/impl/ICUBinary$1.h>
#include <jdk/internal/icu/impl/ICUBinary$Authenticate.h>
#include <jdk/internal/icu/impl/ICUBinary$IsAcceptable.h>
#include <jdk/internal/icu/impl/Norm2AllModes.h>
#include <jdk/internal/icu/impl/Norm2AllModes$ComposeNormalizer2.h>
#include <jdk/internal/icu/impl/Norm2AllModes$DecomposeNormalizer2.h>
#include <jdk/internal/icu/impl/Norm2AllModes$NFCSingleton.h>
#include <jdk/internal/icu/impl/Norm2AllModes$NFKCSingleton.h>
#include <jdk/internal/icu/impl/Norm2AllModes$NoopNormalizer2.h>
#include <jdk/internal/icu/impl/Norm2AllModes$Norm2AllModesSingleton.h>
#include <jdk/internal/icu/impl/Norm2AllModes$Normalizer2WithImpl.h>
#include <jdk/internal/icu/impl/NormalizerImpl.h>
#include <jdk/internal/icu/impl/NormalizerImpl$Hangul.h>
#include <jdk/internal/icu/impl/NormalizerImpl$IsAcceptable.h>
#include <jdk/internal/icu/impl/NormalizerImpl$NextCCArgs.h>
#include <jdk/internal/icu/impl/NormalizerImpl$PrevArgs.h>
#include <jdk/internal/icu/impl/NormalizerImpl$ReorderingBuffer.h>
#include <jdk/internal/icu/impl/NormalizerImpl$UTF16Plus.h>
#include <jdk/internal/icu/impl/Punycode.h>
#include <jdk/internal/icu/impl/ReplaceableUCharacterIterator.h>
#include <jdk/internal/icu/impl/StringPrepDataReader.h>
#include <jdk/internal/icu/impl/Trie.h>
#include <jdk/internal/icu/impl/Trie$DataManipulate.h>
#include <jdk/internal/icu/impl/Trie$DefaultGetFoldingOffset.h>
#include <jdk/internal/icu/impl/Trie2.h>
#include <jdk/internal/icu/impl/Trie2$1.h>
#include <jdk/internal/icu/impl/Trie2$Range.h>
#include <jdk/internal/icu/impl/Trie2$Trie2Iterator.h>
#include <jdk/internal/icu/impl/Trie2$UTrie2Header.h>
#include <jdk/internal/icu/impl/Trie2$ValueMapper.h>
#include <jdk/internal/icu/impl/Trie2_16.h>
#include <jdk/internal/icu/impl/UBiDiProps.h>
#include <jdk/internal/icu/impl/UBiDiProps$IsAcceptable.h>
#include <jdk/internal/icu/impl/UCharacterProperty.h>
#include <jdk/internal/icu/impl/UCharacterProperty$1.h>
#include <jdk/internal/icu/impl/UCharacterProperty$BiDiIntProperty.h>
#include <jdk/internal/icu/impl/UCharacterProperty$CombiningClassIntProperty.h>
#include <jdk/internal/icu/impl/UCharacterProperty$IntProperty.h>
#include <jdk/internal/icu/impl/UCharacterProperty$IsAcceptable.h>
#include <jdk/internal/icu/impl/UCharacterProperty$NormQuickCheckIntProperty.h>
#include <jdk/internal/icu/impl/UnicodeSetStringSpan.h>
#include <jdk/internal/icu/impl/UnicodeSetStringSpan$OffsetList.h>
#include <jdk/internal/icu/impl/Utility.h>
#include <jdk/internal/icu/lang/UCharacter.h>
#include <jdk/internal/icu/lang/UCharacter$HangulSyllableType.h>
#include <jdk/internal/icu/lang/UCharacter$JoiningGroup.h>
#include <jdk/internal/icu/lang/UCharacter$NumericType.h>
#include <jdk/internal/icu/lang/UCharacterDirection.h>
#include <jdk/internal/icu/lang/UCharacterEnums.h>
#include <jdk/internal/icu/lang/UCharacterEnums$ECharacterCategory.h>
#include <jdk/internal/icu/lang/UCharacterEnums$ECharacterDirection.h>
#include <jdk/internal/icu/text/BidiBase.h>
#include <jdk/internal/icu/text/BidiBase$BidiPairedBracketType.h>
#include <jdk/internal/icu/text/BidiBase$BracketData.h>
#include <jdk/internal/icu/text/BidiBase$ImpTabPair.h>
#include <jdk/internal/icu/text/BidiBase$InsertPoints.h>
#include <jdk/internal/icu/text/BidiBase$IsoRun.h>
#include <jdk/internal/icu/text/BidiBase$Isolate.h>
#include <jdk/internal/icu/text/BidiBase$LevState.h>
#include <jdk/internal/icu/text/BidiBase$NumericShapings.h>
#include <jdk/internal/icu/text/BidiBase$Opening.h>
#include <jdk/internal/icu/text/BidiBase$Point.h>
#include <jdk/internal/icu/text/BidiBase$TextAttributeConstants.h>
#include <jdk/internal/icu/text/BidiBase$TextAttributeConstants$1.h>
#include <jdk/internal/icu/text/BidiLine.h>
#include <jdk/internal/icu/text/BidiRun.h>
#include <jdk/internal/icu/text/BidiWriter.h>
#include <jdk/internal/icu/text/FilteredNormalizer2.h>
#include <jdk/internal/icu/text/Normalizer2.h>
#include <jdk/internal/icu/text/NormalizerBase.h>
#include <jdk/internal/icu/text/NormalizerBase$1.h>
#include <jdk/internal/icu/text/NormalizerBase$Mode.h>
#include <jdk/internal/icu/text/NormalizerBase$ModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFC32ModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFCMode.h>
#include <jdk/internal/icu/text/NormalizerBase$NFCModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFD32ModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFDMode.h>
#include <jdk/internal/icu/text/NormalizerBase$NFDModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKC32ModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKCMode.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKCModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKD32ModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKDMode.h>
#include <jdk/internal/icu/text/NormalizerBase$NFKDModeImpl.h>
#include <jdk/internal/icu/text/NormalizerBase$NONEMode.h>
#include <jdk/internal/icu/text/NormalizerBase$Unicode32.h>
#include <jdk/internal/icu/text/Replaceable.h>
#include <jdk/internal/icu/text/ReplaceableString.h>
#include <jdk/internal/icu/text/StringPrep.h>
#include <jdk/internal/icu/text/StringPrep$StringPrepTrieImpl.h>
#include <jdk/internal/icu/text/StringPrep$Values.h>
#include <jdk/internal/icu/text/UCharacterIterator.h>
#include <jdk/internal/icu/text/UTF16.h>
#include <jdk/internal/icu/text/UnicodeSet.h>
#include <jdk/internal/icu/text/UnicodeSet$Filter.h>
#include <jdk/internal/icu/text/UnicodeSet$SpanCondition.h>
#include <jdk/internal/icu/text/UnicodeSet$VersionFilter.h>
#include <jdk/internal/icu/util/CodePointMap.h>
#include <jdk/internal/icu/util/CodePointMap$Range.h>
#include <jdk/internal/icu/util/CodePointMap$RangeIterator.h>
#include <jdk/internal/icu/util/CodePointMap$RangeOption.h>
#include <jdk/internal/icu/util/CodePointMap$StringIterator.h>
#include <jdk/internal/icu/util/CodePointMap$ValueFilter.h>
#include <jdk/internal/icu/util/CodePointTrie.h>
#include <jdk/internal/icu/util/CodePointTrie$1.h>
#include <jdk/internal/icu/util/CodePointTrie$Data.h>
#include <jdk/internal/icu/util/CodePointTrie$Data16.h>
#include <jdk/internal/icu/util/CodePointTrie$Data32.h>
#include <jdk/internal/icu/util/CodePointTrie$Data8.h>
#include <jdk/internal/icu/util/CodePointTrie$Fast.h>
#include <jdk/internal/icu/util/CodePointTrie$Fast$FastStringIterator.h>
#include <jdk/internal/icu/util/CodePointTrie$Fast16.h>
#include <jdk/internal/icu/util/CodePointTrie$Fast32.h>
#include <jdk/internal/icu/util/CodePointTrie$Fast8.h>
#include <jdk/internal/icu/util/CodePointTrie$Small.h>
#include <jdk/internal/icu/util/CodePointTrie$Small$SmallStringIterator.h>
#include <jdk/internal/icu/util/CodePointTrie$Small16.h>
#include <jdk/internal/icu/util/CodePointTrie$Small32.h>
#include <jdk/internal/icu/util/CodePointTrie$Small8.h>
#include <jdk/internal/icu/util/CodePointTrie$Type.h>
#include <jdk/internal/icu/util/CodePointTrie$ValueWidth.h>
#include <jdk/internal/icu/util/OutputInt.h>
#include <jdk/internal/icu/util/VersionInfo.h>
#include <jdk/internal/invoke/ABIDescriptorProxy.h>
#include <jdk/internal/invoke/NativeEntryPoint.h>
#include <jdk/internal/invoke/VMStorageProxy.h>
#include <jdk/internal/javac/NoPreview.h>
#include <jdk/internal/javac/PreviewFeature.h>
#include <jdk/internal/javac/PreviewFeature$Feature.h>
#include <jdk/internal/jimage/BasicImageReader.h>
#include <jdk/internal/jimage/BasicImageReader$1.h>
#include <jdk/internal/jimage/BasicImageReader$2.h>
#include <jdk/internal/jimage/ImageBufferCache.h>
#include <jdk/internal/jimage/ImageBufferCache$1.h>
#include <jdk/internal/jimage/ImageBufferCache$2.h>
#include <jdk/internal/jimage/ImageHeader.h>
#include <jdk/internal/jimage/ImageLocation.h>
#include <jdk/internal/jimage/ImageReader.h>
#include <jdk/internal/jimage/ImageReader$Directory.h>
#include <jdk/internal/jimage/ImageReader$LinkNode.h>
#include <jdk/internal/jimage/ImageReader$Node.h>
#include <jdk/internal/jimage/ImageReader$Resource.h>
#include <jdk/internal/jimage/ImageReader$SharedImageReader.h>
#include <jdk/internal/jimage/ImageReader$SharedImageReader$LocationVisitor.h>
#include <jdk/internal/jimage/ImageReaderFactory.h>
#include <jdk/internal/jimage/ImageReaderFactory$1.h>
#include <jdk/internal/jimage/ImageStream.h>
#include <jdk/internal/jimage/ImageStrings.h>
#include <jdk/internal/jimage/ImageStringsReader.h>
#include <jdk/internal/jimage/NativeImageBuffer.h>
#include <jdk/internal/jimage/NativeImageBuffer$1.h>
#include <jdk/internal/jimage/RuntimeFileAttributes.h>
#include <jdk/internal/jimage/RuntimeImageLocation.h>
#include <jdk/internal/jimage/RuntimeImageReader.h>
#include <jdk/internal/jimage/RuntimeImageReader$LocationVisitor.h>
#include <jdk/internal/jimage/RuntimeImageReader$Resource.h>
#include <jdk/internal/jimage/decompressor/CompressIndexes.h>
#include <jdk/internal/jimage/decompressor/CompressedResourceHeader.h>
#include <jdk/internal/jimage/decompressor/Decompressor.h>
#include <jdk/internal/jimage/decompressor/ResourceDecompressor.h>
#include <jdk/internal/jimage/decompressor/ResourceDecompressor$StringsProvider.h>
#include <jdk/internal/jimage/decompressor/ResourceDecompressorFactory.h>
#include <jdk/internal/jimage/decompressor/ResourceDecompressorRepository.h>
#include <jdk/internal/jimage/decompressor/SignatureParser.h>
#include <jdk/internal/jimage/decompressor/SignatureParser$ParseResult.h>
#include <jdk/internal/jimage/decompressor/StringSharingDecompressor.h>
#include <jdk/internal/jimage/decompressor/StringSharingDecompressorFactory.h>
#include <jdk/internal/jimage/decompressor/ZipDecompressor.h>
#include <jdk/internal/jimage/decompressor/ZipDecompressorFactory.h>
#include <jdk/internal/jmod/JmodFile.h>
#include <jdk/internal/jmod/JmodFile$Entry.h>
#include <jdk/internal/jmod/JmodFile$Section.h>
#include <jdk/internal/jrtfs/ExplodedImage.h>
#include <jdk/internal/jrtfs/ExplodedImage$PathNode.h>
#include <jdk/internal/jrtfs/JrtDirectoryStream.h>
#include <jdk/internal/jrtfs/JrtDirectoryStream$1.h>
#include <jdk/internal/jrtfs/JrtFileAttributeView.h>
#include <jdk/internal/jrtfs/JrtFileAttributeView$1.h>
#include <jdk/internal/jrtfs/JrtFileAttributeView$AttrID.h>
#include <jdk/internal/jrtfs/JrtFileAttributes.h>
#include <jdk/internal/jrtfs/JrtFileStore.h>
#include <jdk/internal/jrtfs/JrtFileSystem.h>
#include <jdk/internal/jrtfs/JrtFileSystem$1.h>
#include <jdk/internal/jrtfs/JrtFileSystemProvider.h>
#include <jdk/internal/jrtfs/JrtFileSystemProvider$1.h>
#include <jdk/internal/jrtfs/JrtFileSystemProvider$JrtFsLoader.h>
#include <jdk/internal/jrtfs/JrtPath.h>
#include <jdk/internal/jrtfs/JrtPath$1.h>
#include <jdk/internal/jrtfs/JrtPath$2.h>
#include <jdk/internal/jrtfs/JrtUtils.h>
#include <jdk/internal/jrtfs/RuntimeImage.h>
#include <jdk/internal/jrtfs/SystemImage.h>
#include <jdk/internal/jrtfs/SystemImage$1.h>
#include <jdk/internal/jrtfs/SystemImage$2.h>
#include <jdk/internal/loader/AbstractClassLoaderValue.h>
#include <jdk/internal/loader/AbstractClassLoaderValue$Memoizer.h>
#include <jdk/internal/loader/AbstractClassLoaderValue$Memoizer$RecursiveInvocationException.h>
#include <jdk/internal/loader/AbstractClassLoaderValue$Sub.h>
#include <jdk/internal/loader/ArchivedClassLoaders.h>
#include <jdk/internal/loader/BootLoader.h>
#include <jdk/internal/loader/BootLoader$1.h>
#include <jdk/internal/loader/BootLoader$PackageHelper.h>
#include <jdk/internal/loader/BootLoader$PackageHelper$1.h>
#include <jdk/internal/loader/BootLoader$PackageHelper$2.h>
#include <jdk/internal/loader/BuiltinClassLoader.h>
#include <jdk/internal/loader/BuiltinClassLoader$1.h>
#include <jdk/internal/loader/BuiltinClassLoader$2.h>
#include <jdk/internal/loader/BuiltinClassLoader$3.h>
#include <jdk/internal/loader/BuiltinClassLoader$4.h>
#include <jdk/internal/loader/BuiltinClassLoader$5.h>
#include <jdk/internal/loader/BuiltinClassLoader$LoadedModule.h>
#include <jdk/internal/loader/BuiltinClassLoader$NullModuleReader.h>
#include <jdk/internal/loader/ClassLoaderHelper.h>
#include <jdk/internal/loader/ClassLoaderValue.h>
#include <jdk/internal/loader/ClassLoaders.h>
#include <jdk/internal/loader/ClassLoaders$AppClassLoader.h>
#include <jdk/internal/loader/ClassLoaders$BootClassLoader.h>
#include <jdk/internal/loader/ClassLoaders$PlatformClassLoader.h>
#include <jdk/internal/loader/FileURLMapper.h>
#include <jdk/internal/loader/Loader.h>
#include <jdk/internal/loader/Loader$1.h>
#include <jdk/internal/loader/Loader$2.h>
#include <jdk/internal/loader/Loader$3.h>
#include <jdk/internal/loader/Loader$LoadedModule.h>
#include <jdk/internal/loader/Loader$NullModuleReader.h>
#include <jdk/internal/loader/LoaderPool.h>
#include <jdk/internal/loader/NativeLibraries.h>
#include <jdk/internal/loader/NativeLibraries$1.h>
#include <jdk/internal/loader/NativeLibraries$LibraryPaths.h>
#include <jdk/internal/loader/NativeLibraries$NativeLibraryImpl.h>
#include <jdk/internal/loader/NativeLibraries$Unloader.h>
#include <jdk/internal/loader/NativeLibrary.h>
#include <jdk/internal/loader/Resource.h>
#include <jdk/internal/loader/URLClassPath.h>
#include <jdk/internal/loader/URLClassPath$1.h>
#include <jdk/internal/loader/URLClassPath$2.h>
#include <jdk/internal/loader/URLClassPath$3.h>
#include <jdk/internal/loader/URLClassPath$FileLoader.h>
#include <jdk/internal/loader/URLClassPath$FileLoader$1.h>
#include <jdk/internal/loader/URLClassPath$JarLoader.h>
#include <jdk/internal/loader/URLClassPath$JarLoader$1.h>
#include <jdk/internal/loader/URLClassPath$JarLoader$2.h>
#include <jdk/internal/loader/URLClassPath$JarLoader$3.h>
#include <jdk/internal/loader/URLClassPath$Loader.h>
#include <jdk/internal/loader/URLClassPath$Loader$1.h>
#include <jdk/internal/logger/AbstractLoggerWrapper.h>
#include <jdk/internal/logger/BootstrapLogger.h>
#include <jdk/internal/logger/BootstrapLogger$BootstrapExecutors.h>
#include <jdk/internal/logger/BootstrapLogger$BootstrapExecutors$1.h>
#include <jdk/internal/logger/BootstrapLogger$BootstrapExecutors$BootstrapMessageLoggerTask.h>
#include <jdk/internal/logger/BootstrapLogger$DetectBackend.h>
#include <jdk/internal/logger/BootstrapLogger$DetectBackend$1.h>
#include <jdk/internal/logger/BootstrapLogger$LogEvent.h>
#include <jdk/internal/logger/BootstrapLogger$LoggingBackend.h>
#include <jdk/internal/logger/BootstrapLogger$RedirectedLoggers.h>
#include <jdk/internal/logger/DefaultLoggerFinder.h>
#include <jdk/internal/logger/DefaultLoggerFinder$1.h>
#include <jdk/internal/logger/DefaultLoggerFinder$SharedLoggers.h>
#include <jdk/internal/logger/LazyLoggers.h>
#include <jdk/internal/logger/LazyLoggers$1.h>
#include <jdk/internal/logger/LazyLoggers$JdkLazyLogger.h>
#include <jdk/internal/logger/LazyLoggers$LazyLoggerAccessor.h>
#include <jdk/internal/logger/LazyLoggers$LazyLoggerFactories.h>
#include <jdk/internal/logger/LazyLoggers$LazyLoggerWrapper.h>
#include <jdk/internal/logger/LazyLoggers$LoggerAccessor.h>
#include <jdk/internal/logger/LocalizedLoggerWrapper.h>
#include <jdk/internal/logger/LoggerFinderLoader.h>
#include <jdk/internal/logger/LoggerFinderLoader$ErrorPolicy.h>
#include <jdk/internal/logger/LoggerWrapper.h>
#include <jdk/internal/logger/SimpleConsoleLogger.h>
#include <jdk/internal/logger/SimpleConsoleLogger$CallerFinder.h>
#include <jdk/internal/logger/SimpleConsoleLogger$CallerFinder$1.h>
#include <jdk/internal/logger/SimpleConsoleLogger$Formatting.h>
#include <jdk/internal/logger/SurrogateLogger.h>
#include <jdk/internal/math/DoubleConsts.h>
#include <jdk/internal/math/FDBigInteger.h>
#include <jdk/internal/math/FloatConsts.h>
#include <jdk/internal/math/FloatingDecimal.h>
#include <jdk/internal/math/FloatingDecimal$1.h>
#include <jdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer.h>
#include <jdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter.h>
#include <jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.h>
#include <jdk/internal/math/FloatingDecimal$BinaryToASCIIConverter.h>
#include <jdk/internal/math/FloatingDecimal$ExceptionalBinaryToASCIIBuffer.h>
#include <jdk/internal/math/FloatingDecimal$HexFloatPattern.h>
#include <jdk/internal/math/FloatingDecimal$PreparedASCIIToBinaryBuffer.h>
#include <jdk/internal/math/FormattedFloatingDecimal.h>
#include <jdk/internal/math/FormattedFloatingDecimal$1.h>
#include <jdk/internal/math/FormattedFloatingDecimal$2.h>
#include <jdk/internal/math/FormattedFloatingDecimal$Form.h>
#include <jdk/internal/misc/CDS.h>
#include <jdk/internal/misc/ExtendedMapMode.h>
#include <jdk/internal/misc/FileSystemOption.h>
#include <jdk/internal/misc/InnocuousThread.h>
#include <jdk/internal/misc/InnocuousThread$1.h>
#include <jdk/internal/misc/InnocuousThread$2.h>
#include <jdk/internal/misc/InnocuousThread$3.h>
#include <jdk/internal/misc/OSEnvironment.h>
#include <jdk/internal/misc/ScopedMemoryAccess.h>
#include <jdk/internal/misc/ScopedMemoryAccess$BufferAccess.h>
#include <jdk/internal/misc/ScopedMemoryAccess$Scope.h>
#include <jdk/internal/misc/ScopedMemoryAccess$Scope$Handle.h>
#include <jdk/internal/misc/ScopedMemoryAccess$Scope$ScopedAccessError.h>
#include <jdk/internal/misc/ScopedMemoryAccess$Scoped.h>
#include <jdk/internal/misc/Signal.h>
#include <jdk/internal/misc/Signal$1.h>
#include <jdk/internal/misc/Signal$Handler.h>
#include <jdk/internal/misc/Signal$NativeHandler.h>
#include <jdk/internal/misc/TerminatingThreadLocal.h>
#include <jdk/internal/misc/TerminatingThreadLocal$1.h>
#include <jdk/internal/misc/Unsafe.h>
#include <jdk/internal/misc/UnsafeConstants.h>
#include <jdk/internal/misc/VM.h>
#include <jdk/internal/misc/VM$BufferPool.h>
#include <jdk/internal/misc/VM$BufferPoolsHolder.h>
#include <jdk/internal/module/ArchivedBootLayer.h>
#include <jdk/internal/module/ArchivedModuleGraph.h>
#include <jdk/internal/module/Builder.h>
#include <jdk/internal/module/Checks.h>
#include <jdk/internal/module/ClassFileConstants.h>
#include <jdk/internal/module/DefaultRoots.h>
#include <jdk/internal/module/ExplodedSystemModules.h>
#include <jdk/internal/module/ModuleBootstrap.h>
#include <jdk/internal/module/ModuleBootstrap$1.h>
#include <jdk/internal/module/ModuleBootstrap$Counters.h>
#include <jdk/internal/module/ModuleBootstrap$SafeModuleFinder.h>
#include <jdk/internal/module/ModuleHashes.h>
#include <jdk/internal/module/ModuleHashes$Builder.h>
#include <jdk/internal/module/ModuleHashes$HashSupplier.h>
#include <jdk/internal/module/ModuleHashesBuilder.h>
#include <jdk/internal/module/ModuleHashesBuilder$Graph.h>
#include <jdk/internal/module/ModuleHashesBuilder$Graph$Builder.h>
#include <jdk/internal/module/ModuleHashesBuilder$TopoSorter.h>
#include <jdk/internal/module/ModuleInfo.h>
#include <jdk/internal/module/ModuleInfo$Attributes.h>
#include <jdk/internal/module/ModuleInfo$ConstantPool.h>
#include <jdk/internal/module/ModuleInfo$ConstantPool$Entry.h>
#include <jdk/internal/module/ModuleInfo$ConstantPool$Index2Entry.h>
#include <jdk/internal/module/ModuleInfo$ConstantPool$IndexEntry.h>
#include <jdk/internal/module/ModuleInfo$ConstantPool$ValueEntry.h>
#include <jdk/internal/module/ModuleInfo$CountingDataInput.h>
#include <jdk/internal/module/ModuleInfo$DataInputWrapper.h>
#include <jdk/internal/module/ModuleInfoExtender.h>
#include <jdk/internal/module/ModuleInfoExtender$1.h>
#include <jdk/internal/module/ModuleInfoExtender$1$1.h>
#include <jdk/internal/module/ModuleInfoWriter.h>
#include <jdk/internal/module/ModuleLoaderMap.h>
#include <jdk/internal/module/ModuleLoaderMap$Mapper.h>
#include <jdk/internal/module/ModuleLoaderMap$Modules.h>
#include <jdk/internal/module/ModulePatcher.h>
#include <jdk/internal/module/ModulePatcher$ExplodedResourceFinder.h>
#include <jdk/internal/module/ModulePatcher$ExplodedResourceFinder$1.h>
#include <jdk/internal/module/ModulePatcher$JarResourceFinder.h>
#include <jdk/internal/module/ModulePatcher$JarResourceFinder$1.h>
#include <jdk/internal/module/ModulePatcher$PatchedModuleReader.h>
#include <jdk/internal/module/ModulePatcher$PatchedModuleReader$1.h>
#include <jdk/internal/module/ModulePatcher$ResourceFinder.h>
#include <jdk/internal/module/ModulePath.h>
#include <jdk/internal/module/ModulePath$Patterns.h>
#include <jdk/internal/module/ModulePathValidator.h>
#include <jdk/internal/module/ModuleReferenceImpl.h>
#include <jdk/internal/module/ModuleReferences.h>
#include <jdk/internal/module/ModuleReferences$ExplodedModuleReader.h>
#include <jdk/internal/module/ModuleReferences$JModModuleReader.h>
#include <jdk/internal/module/ModuleReferences$JarModuleReader.h>
#include <jdk/internal/module/ModuleReferences$SafeCloseModuleReader.h>
#include <jdk/internal/module/ModuleResolution.h>
#include <jdk/internal/module/ModuleTarget.h>
#include <jdk/internal/module/Modules.h>
#include <jdk/internal/module/Resources.h>
#include <jdk/internal/module/ServicesCatalog.h>
#include <jdk/internal/module/ServicesCatalog$ServiceProvider.h>
#include <jdk/internal/module/SystemModuleFinders.h>
#include <jdk/internal/module/SystemModuleFinders$1.h>
#include <jdk/internal/module/SystemModuleFinders$2.h>
#include <jdk/internal/module/SystemModuleFinders$3.h>
#include <jdk/internal/module/SystemModuleFinders$ModuleContentSpliterator.h>
#include <jdk/internal/module/SystemModuleFinders$SystemImage.h>
#include <jdk/internal/module/SystemModuleFinders$SystemModuleFinder.h>
#include <jdk/internal/module/SystemModuleFinders$SystemModuleReader.h>
#include <jdk/internal/module/SystemModules.h>
#include <jdk/internal/module/SystemModulesMap.h>
#include <jdk/internal/org/objectweb/asm/AnnotationVisitor.h>
#include <jdk/internal/org/objectweb/asm/AnnotationWriter.h>
#include <jdk/internal/org/objectweb/asm/Attribute.h>
#include <jdk/internal/org/objectweb/asm/Attribute$Set.h>
#include <jdk/internal/org/objectweb/asm/ByteVector.h>
#include <jdk/internal/org/objectweb/asm/ClassReader.h>
#include <jdk/internal/org/objectweb/asm/ClassTooLargeException.h>
#include <jdk/internal/org/objectweb/asm/ClassVisitor.h>
#include <jdk/internal/org/objectweb/asm/ClassWriter.h>
#include <jdk/internal/org/objectweb/asm/ConstantDynamic.h>
#include <jdk/internal/org/objectweb/asm/Constants.h>
#include <jdk/internal/org/objectweb/asm/Context.h>
#include <jdk/internal/org/objectweb/asm/CurrentFrame.h>
#include <jdk/internal/org/objectweb/asm/Edge.h>
#include <jdk/internal/org/objectweb/asm/FieldVisitor.h>
#include <jdk/internal/org/objectweb/asm/FieldWriter.h>
#include <jdk/internal/org/objectweb/asm/Frame.h>
#include <jdk/internal/org/objectweb/asm/Handle.h>
#include <jdk/internal/org/objectweb/asm/Handler.h>
#include <jdk/internal/org/objectweb/asm/Label.h>
#include <jdk/internal/org/objectweb/asm/MethodTooLargeException.h>
#include <jdk/internal/org/objectweb/asm/MethodVisitor.h>
#include <jdk/internal/org/objectweb/asm/MethodWriter.h>
#include <jdk/internal/org/objectweb/asm/ModuleVisitor.h>
#include <jdk/internal/org/objectweb/asm/ModuleWriter.h>
#include <jdk/internal/org/objectweb/asm/Opcodes.h>
#include <jdk/internal/org/objectweb/asm/RecordComponentVisitor.h>
#include <jdk/internal/org/objectweb/asm/RecordComponentWriter.h>
#include <jdk/internal/org/objectweb/asm/Symbol.h>
#include <jdk/internal/org/objectweb/asm/SymbolTable.h>
#include <jdk/internal/org/objectweb/asm/SymbolTable$Entry.h>
#include <jdk/internal/org/objectweb/asm/Type.h>
#include <jdk/internal/org/objectweb/asm/TypePath.h>
#include <jdk/internal/org/objectweb/asm/TypeReference.h>
#include <jdk/internal/org/objectweb/asm/commons/AdviceAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/AnalyzerAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/AnnotationRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/ClassRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/CodeSizeEvaluator.h>
#include <jdk/internal/org/objectweb/asm/commons/FieldRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/GeneratorAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/InstructionAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/JSRInlinerAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/JSRInlinerAdapter$Instantiation.h>
#include <jdk/internal/org/objectweb/asm/commons/LocalVariablesSorter.h>
#include <jdk/internal/org/objectweb/asm/commons/Method.h>
#include <jdk/internal/org/objectweb/asm/commons/MethodRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/ModuleHashesAttribute.h>
#include <jdk/internal/org/objectweb/asm/commons/ModuleRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/ModuleResolutionAttribute.h>
#include <jdk/internal/org/objectweb/asm/commons/ModuleTargetAttribute.h>
#include <jdk/internal/org/objectweb/asm/commons/RecordComponentRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/Remapper.h>
#include <jdk/internal/org/objectweb/asm/commons/RemappingAnnotationAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/RemappingClassAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/RemappingFieldAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/RemappingMethodAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/RemappingSignatureAdapter.h>
#include <jdk/internal/org/objectweb/asm/commons/SerialVersionUIDAdder.h>
#include <jdk/internal/org/objectweb/asm/commons/SerialVersionUIDAdder$Item.h>
#include <jdk/internal/org/objectweb/asm/commons/SignatureRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/SimpleRemapper.h>
#include <jdk/internal/org/objectweb/asm/commons/StaticInitMerger.h>
#include <jdk/internal/org/objectweb/asm/commons/TableSwitchGenerator.h>
#include <jdk/internal/org/objectweb/asm/commons/TryCatchBlockSorter.h>
#include <jdk/internal/org/objectweb/asm/commons/TryCatchBlockSorter$1.h>
#include <jdk/internal/org/objectweb/asm/signature/SignatureReader.h>
#include <jdk/internal/org/objectweb/asm/signature/SignatureVisitor.h>
#include <jdk/internal/org/objectweb/asm/signature/SignatureWriter.h>
#include <jdk/internal/org/objectweb/asm/tree/AbstractInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/AnnotationNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ClassNode.h>
#include <jdk/internal/org/objectweb/asm/tree/FieldInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/FieldNode.h>
#include <jdk/internal/org/objectweb/asm/tree/FrameNode.h>
#include <jdk/internal/org/objectweb/asm/tree/IincInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/InnerClassNode.h>
#include <jdk/internal/org/objectweb/asm/tree/InsnList.h>
#include <jdk/internal/org/objectweb/asm/tree/InsnList$InsnListIterator.h>
#include <jdk/internal/org/objectweb/asm/tree/InsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/IntInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/InvokeDynamicInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/JumpInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LabelNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LdcInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LineNumberNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LocalVariableAnnotationNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LocalVariableNode.h>
#include <jdk/internal/org/objectweb/asm/tree/LookupSwitchInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/MethodInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/MethodNode.h>
#include <jdk/internal/org/objectweb/asm/tree/MethodNode$1.h>
#include <jdk/internal/org/objectweb/asm/tree/ModuleExportNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ModuleNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ModuleOpenNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ModuleProvideNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ModuleRequireNode.h>
#include <jdk/internal/org/objectweb/asm/tree/MultiANewArrayInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/ParameterNode.h>
#include <jdk/internal/org/objectweb/asm/tree/RecordComponentNode.h>
#include <jdk/internal/org/objectweb/asm/tree/TableSwitchInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/TryCatchBlockNode.h>
#include <jdk/internal/org/objectweb/asm/tree/TypeAnnotationNode.h>
#include <jdk/internal/org/objectweb/asm/tree/TypeInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/UnsupportedClassVersionException.h>
#include <jdk/internal/org/objectweb/asm/tree/Util.h>
#include <jdk/internal/org/objectweb/asm/tree/VarInsnNode.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/Analyzer.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/AnalyzerException.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/BasicInterpreter.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/BasicValue.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/BasicVerifier.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/Frame.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/Interpreter.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/SimpleVerifier.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/SmallSet.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/SmallSet$IteratorImpl.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/SourceInterpreter.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/SourceValue.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/Subroutine.h>
#include <jdk/internal/org/objectweb/asm/tree/analysis/Value.h>
#include <jdk/internal/org/objectweb/asm/util/ASMifiable.h>
#include <jdk/internal/org/objectweb/asm/util/ASMifier.h>
#include <jdk/internal/org/objectweb/asm/util/ASMifierSupport.h>
#include <jdk/internal/org/objectweb/asm/util/CheckAnnotationAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckClassAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckClassAdapter$1.h>
#include <jdk/internal/org/objectweb/asm/util/CheckFieldAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckMethodAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckMethodAdapter$1.h>
#include <jdk/internal/org/objectweb/asm/util/CheckMethodAdapter$Method.h>
#include <jdk/internal/org/objectweb/asm/util/CheckModuleAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckModuleAdapter$NameSet.h>
#include <jdk/internal/org/objectweb/asm/util/CheckRecordComponentAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckSignatureAdapter.h>
#include <jdk/internal/org/objectweb/asm/util/CheckSignatureAdapter$State.h>
#include <jdk/internal/org/objectweb/asm/util/Printer.h>
#include <jdk/internal/org/objectweb/asm/util/Textifiable.h>
#include <jdk/internal/org/objectweb/asm/util/Textifier.h>
#include <jdk/internal/org/objectweb/asm/util/TextifierSupport.h>
#include <jdk/internal/org/objectweb/asm/util/TraceAnnotationVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceClassVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceFieldVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceMethodVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceModuleVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceRecordComponentVisitor.h>
#include <jdk/internal/org/objectweb/asm/util/TraceSignatureVisitor.h>
#include <jdk/internal/org/xml/sax/Attributes.h>
#include <jdk/internal/org/xml/sax/ContentHandler.h>
#include <jdk/internal/org/xml/sax/DTDHandler.h>
#include <jdk/internal/org/xml/sax/EntityResolver.h>
#include <jdk/internal/org/xml/sax/ErrorHandler.h>
#include <jdk/internal/org/xml/sax/InputSource.h>
#include <jdk/internal/org/xml/sax/Locator.h>
#include <jdk/internal/org/xml/sax/SAXException.h>
#include <jdk/internal/org/xml/sax/SAXNotRecognizedException.h>
#include <jdk/internal/org/xml/sax/SAXNotSupportedException.h>
#include <jdk/internal/org/xml/sax/SAXParseException.h>
#include <jdk/internal/org/xml/sax/XMLReader.h>
#include <jdk/internal/org/xml/sax/helpers/DefaultHandler.h>
#include <jdk/internal/perf/Perf.h>
#include <jdk/internal/perf/Perf$CleanerAction.h>
#include <jdk/internal/perf/Perf$GetPerfAction.h>
#include <jdk/internal/perf/PerfCounter.h>
#include <jdk/internal/perf/PerfCounter$CoreCounters.h>
#include <jdk/internal/platform/Container.h>
#include <jdk/internal/platform/Metrics.h>
#include <jdk/internal/platform/SystemMetrics.h>
#include <jdk/internal/ref/Cleaner.h>
#include <jdk/internal/ref/Cleaner$1.h>
#include <jdk/internal/ref/CleanerFactory.h>
#include <jdk/internal/ref/CleanerFactory$1.h>
#include <jdk/internal/ref/CleanerImpl.h>
#include <jdk/internal/ref/CleanerImpl$CleanerCleanable.h>
#include <jdk/internal/ref/CleanerImpl$InnocuousThreadFactory.h>
#include <jdk/internal/ref/CleanerImpl$PhantomCleanableRef.h>
#include <jdk/internal/ref/PhantomCleanable.h>
#include <jdk/internal/reflect/AccessorGenerator.h>
#include <jdk/internal/reflect/BootstrapConstructorAccessorImpl.h>
#include <jdk/internal/reflect/ByteVector.h>
#include <jdk/internal/reflect/ByteVectorFactory.h>
#include <jdk/internal/reflect/ByteVectorImpl.h>
#include <jdk/internal/reflect/CallerSensitive.h>
#include <jdk/internal/reflect/ClassDefiner.h>
#include <jdk/internal/reflect/ClassDefiner$1.h>
#include <jdk/internal/reflect/ClassFileAssembler.h>
#include <jdk/internal/reflect/ClassFileConstants.h>
#include <jdk/internal/reflect/ConstantBase.h>
#include <jdk/internal/reflect/ConstantClass.h>
#include <jdk/internal/reflect/ConstantDouble.h>
#include <jdk/internal/reflect/ConstantDynamic.h>
#include <jdk/internal/reflect/ConstantFieldRef.h>
#include <jdk/internal/reflect/ConstantFloat.h>
#include <jdk/internal/reflect/ConstantInt.h>
#include <jdk/internal/reflect/ConstantInterfaceMethodRef.h>
#include <jdk/internal/reflect/ConstantInvokeDynamic.h>
#include <jdk/internal/reflect/ConstantLong.h>
#include <jdk/internal/reflect/ConstantMethodHandle.h>
#include <jdk/internal/reflect/ConstantMethodRef.h>
#include <jdk/internal/reflect/ConstantMethodType.h>
#include <jdk/internal/reflect/ConstantModule.h>
#include <jdk/internal/reflect/ConstantNameAndType.h>
#include <jdk/internal/reflect/ConstantPackage.h>
#include <jdk/internal/reflect/ConstantPool.h>
#include <jdk/internal/reflect/ConstantPool$Tag.h>
#include <jdk/internal/reflect/ConstantString.h>
#include <jdk/internal/reflect/ConstantUTF8.h>
#include <jdk/internal/reflect/ConstructorAccessor.h>
#include <jdk/internal/reflect/ConstructorAccessorImpl.h>
#include <jdk/internal/reflect/DelegatingClassLoader.h>
#include <jdk/internal/reflect/DelegatingConstructorAccessorImpl.h>
#include <jdk/internal/reflect/DelegatingMethodAccessorImpl.h>
#include <jdk/internal/reflect/FieldAccessor.h>
#include <jdk/internal/reflect/FieldAccessorImpl.h>
#include <jdk/internal/reflect/InstantiationExceptionConstructorAccessorImpl.h>
#include <jdk/internal/reflect/Label.h>
#include <jdk/internal/reflect/Label$PatchInfo.h>
#include <jdk/internal/reflect/MagicAccessorImpl.h>
#include <jdk/internal/reflect/MethodAccessor.h>
#include <jdk/internal/reflect/MethodAccessorGenerator.h>
#include <jdk/internal/reflect/MethodAccessorGenerator$1.h>
#include <jdk/internal/reflect/MethodAccessorImpl.h>
#include <jdk/internal/reflect/NativeConstructorAccessorImpl.h>
#include <jdk/internal/reflect/NativeMethodAccessorImpl.h>
#include <jdk/internal/reflect/Reflection.h>
#include <jdk/internal/reflect/ReflectionFactory.h>
#include <jdk/internal/reflect/ReflectionFactory$GetReflectionFactoryAction.h>
#include <jdk/internal/reflect/SerializationConstructorAccessorImpl.h>
#include <jdk/internal/reflect/SignatureIterator.h>
#include <jdk/internal/reflect/UTF8.h>
#include <jdk/internal/reflect/UnsafeBooleanFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeByteFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeCharacterFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeDoubleFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeFieldAccessorFactory.h>
#include <jdk/internal/reflect/UnsafeFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeFloatFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeIntegerFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeLongFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeObjectFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedBooleanFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedByteFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedCharacterFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedDoubleFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedFloatFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedIntegerFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedLongFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedObjectFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedShortFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticBooleanFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticByteFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticCharacterFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticDoubleFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticFloatFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticIntegerFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticLongFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticObjectFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeQualifiedStaticShortFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeShortFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticBooleanFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticByteFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticCharacterFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticDoubleFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticFloatFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticIntegerFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticLongFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticObjectFieldAccessorImpl.h>
#include <jdk/internal/reflect/UnsafeStaticShortFieldAccessorImpl.h>
#include <jdk/internal/util/ArraysSupport.h>
#include <jdk/internal/util/Preconditions.h>
#include <jdk/internal/util/Preconditions$1.h>
#include <jdk/internal/util/StaticProperty.h>
#include <jdk/internal/util/SystemProps.h>
#include <jdk/internal/util/SystemProps$Raw.h>
#include <jdk/internal/util/jar/InvalidJarIndexError.h>
#include <jdk/internal/util/jar/JarIndex.h>
#include <jdk/internal/util/random/RandomSupport.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomArbitraryJumpsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomDoublesSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomIntsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomJumpsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLeapsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLongsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSpliteratorGenerator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableGenerator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableGenerator$RandomDoublesSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableGenerator$RandomIntsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableGenerator$RandomLongsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableGenerator$RandomSplitsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableWithBrineGenerator.h>
#include <jdk/internal/util/random/RandomSupport$AbstractSplittableWithBrineGenerator$RandomSplitsSpliteratorWithSalt.h>
#include <jdk/internal/util/random/RandomSupport$DoubleZigguratTables.h>
#include <jdk/internal/util/random/RandomSupport$RandomDoublesSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$RandomGeneratorProperties.h>
#include <jdk/internal/util/random/RandomSupport$RandomIntsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$RandomLongsSpliterator.h>
#include <jdk/internal/util/random/RandomSupport$RandomSpliterator.h>
#include <jdk/internal/util/xml/PropertiesDefaultHandler.h>
#include <jdk/internal/util/xml/SAXParser.h>
#include <jdk/internal/util/xml/XMLStreamException.h>
#include <jdk/internal/util/xml/XMLStreamWriter.h>
#include <jdk/internal/util/xml/impl/Attrs.h>
#include <jdk/internal/util/xml/impl/Input.h>
#include <jdk/internal/util/xml/impl/Pair.h>
#include <jdk/internal/util/xml/impl/Parser.h>
#include <jdk/internal/util/xml/impl/ParserSAX.h>
#include <jdk/internal/util/xml/impl/ReaderUTF16.h>
#include <jdk/internal/util/xml/impl/ReaderUTF8.h>
#include <jdk/internal/util/xml/impl/SAXParserImpl.h>
#include <jdk/internal/util/xml/impl/XMLStreamWriterImpl.h>
#include <jdk/internal/util/xml/impl/XMLStreamWriterImpl$Element.h>
#include <jdk/internal/util/xml/impl/XMLWriter.h>
#include <jdk/internal/vm/VMSupport.h>
#include <jdk/internal/vm/annotation/Contended.h>
#include <jdk/internal/vm/annotation/DontInline.h>
#include <jdk/internal/vm/annotation/ForceInline.h>
#include <jdk/internal/vm/annotation/Hidden.h>
#include <jdk/internal/vm/annotation/IntrinsicCandidate.h>
#include <jdk/internal/vm/annotation/ReservedStackAccess.h>
#include <jdk/internal/vm/annotation/Stable.h>
#include <jdk/internal/vm/vector/VectorSupport.h>
#include <jdk/internal/vm/vector/VectorSupport$BroadcastOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$IndexOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$LoadOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$LoadVectorOperationWithMap.h>
#include <jdk/internal/vm/vector/VectorSupport$ShuffleIotaOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$ShuffleToVectorOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$StoreVectorOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$StoreVectorOperationWithMap.h>
#include <jdk/internal/vm/vector/VectorSupport$TernaryOperation.h>
#include <jdk/internal/vm/vector/VectorSupport$VecExtractOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VecInsertOp.h>
#include <jdk/internal/vm/vector/VectorSupport$Vector.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorBlendOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorBroadcastIntOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorCompareOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorConvertOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorMask.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorMaskOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorPayload.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorRearrangeOp.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorShuffle.h>
#include <jdk/internal/vm/vector/VectorSupport$VectorSpecies.h>
#include <sun/invoke/WrapperInstance.h>
#include <sun/invoke/empty/Empty.h>
#include <sun/invoke/util/BytecodeDescriptor.h>
#include <sun/invoke/util/BytecodeName.h>
#include <sun/invoke/util/ValueConversions.h>
#include <sun/invoke/util/ValueConversions$1.h>
#include <sun/invoke/util/ValueConversions$Handles.h>
#include <sun/invoke/util/ValueConversions$WrapperCache.h>
#include <sun/invoke/util/VerifyAccess.h>
#include <sun/invoke/util/VerifyAccess$1.h>
#include <sun/invoke/util/VerifyType.h>
#include <sun/invoke/util/Wrapper.h>
#include <sun/invoke/util/Wrapper$1.h>
#include <sun/invoke/util/Wrapper$Format.h>
#include <sun/launcher/LauncherHelper.h>
#include <sun/launcher/LauncherHelper$FXHelper.h>
#include <sun/launcher/LauncherHelper$JrtFirstComparator.h>
#include <sun/launcher/LauncherHelper$ResourceBundleHolder.h>
#include <sun/launcher/LauncherHelper$SizePrefix.h>
#include <sun/launcher/LauncherHelper$StdArg.h>
#include <sun/launcher/resources/launcher.h>
#include <sun/launcher/resources/launcher_ja.h>
#include <sun/launcher/resources/launcher_zh_CN.h>
#include <sun/net/ApplicationProxy.h>
#include <sun/net/ConnectionResetException.h>
#include <sun/net/DefaultProgressMeteringPolicy.h>
#include <sun/net/InetAddressCachePolicy.h>
#include <sun/net/InetAddressCachePolicy$1.h>
#include <sun/net/InetAddressCachePolicy$2.h>
#include <sun/net/NetHooks.h>
#include <sun/net/NetHooks$Provider.h>
#include <sun/net/NetProperties.h>
#include <sun/net/NetProperties$1.h>
#include <sun/net/NetworkClient.h>
#include <sun/net/NetworkClient$1.h>
#include <sun/net/NetworkClient$2.h>
#include <sun/net/NetworkClient$3.h>
#include <sun/net/PlatformSocketImpl.h>
#include <sun/net/PortConfig.h>
#include <sun/net/ProgressEvent.h>
#include <sun/net/ProgressListener.h>
#include <sun/net/ProgressMeteringPolicy.h>
#include <sun/net/ProgressMonitor.h>
#include <sun/net/ProgressSource.h>
#include <sun/net/ProgressSource$State.h>
#include <sun/net/ResourceManager.h>
#include <sun/net/SocksProxy.h>
#include <sun/net/TelnetInputStream.h>
#include <sun/net/TelnetOutputStream.h>
#include <sun/net/TelnetProtocolException.h>
#include <sun/net/TransferProtocolClient.h>
#include <sun/net/dns/OptionsImpl.h>
#include <sun/net/dns/ResolverConfiguration.h>
#include <sun/net/dns/ResolverConfiguration$Options.h>
#include <sun/net/dns/ResolverConfigurationImpl.h>
#include <sun/net/dns/ResolverConfigurationImpl$1.h>
#include <sun/net/dns/ResolverConfigurationImpl$2.h>
#include <sun/net/dns/ResolverConfigurationImpl$3.h>
#include <sun/net/ext/ExtendedSocketOptions.h>
#include <sun/net/ext/ExtendedSocketOptions$NoExtendedSocketOptions.h>
#include <sun/net/ftp/FtpClient.h>
#include <sun/net/ftp/FtpClient$TransferType.h>
#include <sun/net/ftp/FtpClientProvider.h>
#include <sun/net/ftp/FtpClientProvider$1.h>
#include <sun/net/ftp/FtpDirEntry.h>
#include <sun/net/ftp/FtpDirEntry$Permission.h>
#include <sun/net/ftp/FtpDirEntry$Type.h>
#include <sun/net/ftp/FtpDirParser.h>
#include <sun/net/ftp/FtpLoginException.h>
#include <sun/net/ftp/FtpProtocolException.h>
#include <sun/net/ftp/FtpReplyCode.h>
#include <sun/net/ftp/impl/DefaultFtpClientProvider.h>
#include <sun/net/ftp/impl/FtpClient.h>
#include <sun/net/ftp/impl/FtpClient$1.h>
#include <sun/net/ftp/impl/FtpClient$DefaultParser.h>
#include <sun/net/ftp/impl/FtpClient$FtpFileIterator.h>
#include <sun/net/ftp/impl/FtpClient$MLSxParser.h>
#include <sun/net/sdp/SdpProvider.h>
#include <sun/net/sdp/SdpProvider$Action.h>
#include <sun/net/sdp/SdpProvider$AddressPortRangeRule.h>
#include <sun/net/sdp/SdpProvider$PortRangeRule.h>
#include <sun/net/sdp/SdpProvider$Rule.h>
#include <sun/net/sdp/SdpSupport.h>
#include <sun/net/smtp/SmtpClient.h>
#include <sun/net/smtp/SmtpPrintStream.h>
#include <sun/net/smtp/SmtpProtocolException.h>
#include <sun/net/spi/DefaultProxySelector.h>
#include <sun/net/spi/DefaultProxySelector$1.h>
#include <sun/net/spi/DefaultProxySelector$2.h>
#include <sun/net/spi/DefaultProxySelector$3.h>
#include <sun/net/spi/DefaultProxySelector$NonProxyInfo.h>
#include <sun/net/util/IPAddressUtil.h>
#include <sun/net/util/SocketExceptions.h>
#include <sun/net/util/SocketExceptions$1.h>
#include <sun/net/util/URLUtil.h>
#include <sun/net/www/HeaderParser.h>
#include <sun/net/www/HeaderParser$ParserIterator.h>
#include <sun/net/www/MessageHeader.h>
#include <sun/net/www/MessageHeader$HeaderIterator.h>
#include <sun/net/www/MeteredStream.h>
#include <sun/net/www/MimeEntry.h>
#include <sun/net/www/MimeTable.h>
#include <sun/net/www/MimeTable$1.h>
#include <sun/net/www/MimeTable$DefaultInstanceHolder.h>
#include <sun/net/www/MimeTable$DefaultInstanceHolder$1.h>
#include <sun/net/www/ParseUtil.h>
#include <sun/net/www/URLConnection.h>
#include <sun/net/www/content/text/Generic.h>
#include <sun/net/www/content/text/PlainTextInputStream.h>
#include <sun/net/www/content/text/plain.h>
#include <sun/net/www/http/ChunkedInputStream.h>
#include <sun/net/www/http/ChunkedOutputStream.h>
#include <sun/net/www/http/ClientVector.h>
#include <sun/net/www/http/HttpCapture.h>
#include <sun/net/www/http/HttpCapture$1.h>
#include <sun/net/www/http/HttpCaptureInputStream.h>
#include <sun/net/www/http/HttpCaptureOutputStream.h>
#include <sun/net/www/http/HttpClient.h>
#include <sun/net/www/http/HttpClient$1.h>
#include <sun/net/www/http/Hurryable.h>
#include <sun/net/www/http/KeepAliveCache.h>
#include <sun/net/www/http/KeepAliveCache$1.h>
#include <sun/net/www/http/KeepAliveCleanerEntry.h>
#include <sun/net/www/http/KeepAliveEntry.h>
#include <sun/net/www/http/KeepAliveKey.h>
#include <sun/net/www/http/KeepAliveStream.h>
#include <sun/net/www/http/KeepAliveStream$1.h>
#include <sun/net/www/http/KeepAliveStreamCleaner.h>
#include <sun/net/www/http/KeepAliveStreamCleaner$1.h>
#include <sun/net/www/http/KeepAliveStreamCleaner$2.h>
#include <sun/net/www/http/PosterOutputStream.h>
#include <sun/net/www/protocol/file/FileURLConnection.h>
#include <sun/net/www/protocol/file/Handler.h>
#include <sun/net/www/protocol/ftp/FtpURLConnection.h>
#include <sun/net/www/protocol/ftp/FtpURLConnection$1.h>
#include <sun/net/www/protocol/ftp/FtpURLConnection$FtpInputStream.h>
#include <sun/net/www/protocol/ftp/FtpURLConnection$FtpOutputStream.h>
#include <sun/net/www/protocol/ftp/Handler.h>
#include <sun/net/www/protocol/http/AuthCache.h>
#include <sun/net/www/protocol/http/AuthCacheImpl.h>
#include <sun/net/www/protocol/http/AuthCacheValue.h>
#include <sun/net/www/protocol/http/AuthCacheValue$Type.h>
#include <sun/net/www/protocol/http/AuthScheme.h>
#include <sun/net/www/protocol/http/AuthenticationHeader.h>
#include <sun/net/www/protocol/http/AuthenticationHeader$SchemeMapValue.h>
#include <sun/net/www/protocol/http/AuthenticationInfo.h>
#include <sun/net/www/protocol/http/AuthenticatorKeys.h>
#include <sun/net/www/protocol/http/AuthenticatorKeys$AuthenticatorKeyAccess.h>
#include <sun/net/www/protocol/http/BasicAuthentication.h>
#include <sun/net/www/protocol/http/DigestAuthentication.h>
#include <sun/net/www/protocol/http/DigestAuthentication$1.h>
#include <sun/net/www/protocol/http/DigestAuthentication$Parameters.h>
#include <sun/net/www/protocol/http/EmptyInputStream.h>
#include <sun/net/www/protocol/http/Handler.h>
#include <sun/net/www/protocol/http/HttpAuthenticator.h>
#include <sun/net/www/protocol/http/HttpCallerInfo.h>
#include <sun/net/www/protocol/http/HttpURLConnection.h>
#include <sun/net/www/protocol/http/HttpURLConnection$1.h>
#include <sun/net/www/protocol/http/HttpURLConnection$10.h>
#include <sun/net/www/protocol/http/HttpURLConnection$11.h>
#include <sun/net/www/protocol/http/HttpURLConnection$12.h>
#include <sun/net/www/protocol/http/HttpURLConnection$13.h>
#include <sun/net/www/protocol/http/HttpURLConnection$2.h>
#include <sun/net/www/protocol/http/HttpURLConnection$3.h>
#include <sun/net/www/protocol/http/HttpURLConnection$4.h>
#include <sun/net/www/protocol/http/HttpURLConnection$5.h>
#include <sun/net/www/protocol/http/HttpURLConnection$6.h>
#include <sun/net/www/protocol/http/HttpURLConnection$7.h>
#include <sun/net/www/protocol/http/HttpURLConnection$8.h>
#include <sun/net/www/protocol/http/HttpURLConnection$9.h>
#include <sun/net/www/protocol/http/HttpURLConnection$ErrorStream.h>
#include <sun/net/www/protocol/http/HttpURLConnection$HttpInputStream.h>
#include <sun/net/www/protocol/http/HttpURLConnection$StreamingOutputStream.h>
#include <sun/net/www/protocol/http/HttpURLConnection$TunnelState.h>
#include <sun/net/www/protocol/http/NTLMAuthenticationProxy.h>
#include <sun/net/www/protocol/http/NegotiateAuthentication.h>
#include <sun/net/www/protocol/http/NegotiateAuthentication$1.h>
#include <sun/net/www/protocol/http/Negotiator.h>
#include <sun/net/www/protocol/http/ntlm/NTLMAuthentication.h>
#include <sun/net/www/protocol/http/ntlm/NTLMAuthentication$1.h>
#include <sun/net/www/protocol/http/ntlm/NTLMAuthenticationCallback.h>
#include <sun/net/www/protocol/https/AbstractDelegateHttpsURLConnection.h>
#include <sun/net/www/protocol/https/DelegateHttpsURLConnection.h>
#include <sun/net/www/protocol/https/Handler.h>
#include <sun/net/www/protocol/https/HttpsClient.h>
#include <sun/net/www/protocol/https/HttpsURLConnectionImpl.h>
#include <sun/net/www/protocol/jar/Handler.h>
#include <sun/net/www/protocol/jar/JarFileFactory.h>
#include <sun/net/www/protocol/jar/JarURLConnection.h>
#include <sun/net/www/protocol/jar/JarURLConnection$JarURLInputStream.h>
#include <sun/net/www/protocol/jar/URLJarFile.h>
#include <sun/net/www/protocol/jar/URLJarFile$1.h>
#include <sun/net/www/protocol/jar/URLJarFile$URLJarFileCloseController.h>
#include <sun/net/www/protocol/jar/URLJarFile$URLJarFileEntry.h>
#include <sun/net/www/protocol/jar/URLJarFileCallBack.h>
#include <sun/net/www/protocol/jmod/Handler.h>
#include <sun/net/www/protocol/jrt/Handler.h>
#include <sun/net/www/protocol/jrt/JavaRuntimeURLConnection.h>
#include <sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.h>
#include <sun/net/www/protocol/mailto/Handler.h>
#include <sun/net/www/protocol/mailto/MailToURLConnection.h>
#include <sun/nio/ByteBuffered.h>
#include <sun/nio/ch/AllocatedNativeObject.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl$1.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl$2.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl$3.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl$4.h>
#include <sun/nio/ch/AsynchronousChannelGroupImpl$4$1.h>
#include <sun/nio/ch/AsynchronousFileChannelImpl.h>
#include <sun/nio/ch/AsynchronousServerSocketChannelImpl.h>
#include <sun/nio/ch/AsynchronousServerSocketChannelImpl$DefaultOptionsHolder.h>
#include <sun/nio/ch/AsynchronousSocketChannelImpl.h>
#include <sun/nio/ch/AsynchronousSocketChannelImpl$DefaultOptionsHolder.h>
#include <sun/nio/ch/BsdAsynchronousChannelProvider.h>
#include <sun/nio/ch/Cancellable.h>
#include <sun/nio/ch/ChannelInputStream.h>
#include <sun/nio/ch/CompletedFuture.h>
#include <sun/nio/ch/DatagramChannelImpl.h>
#include <sun/nio/ch/DatagramChannelImpl$AbstractSelectableChannels.h>
#include <sun/nio/ch/DatagramChannelImpl$DefaultOptionsHolder.h>
#include <sun/nio/ch/DatagramDispatcher.h>
#include <sun/nio/ch/DatagramSocketAdaptor.h>
#include <sun/nio/ch/DatagramSocketAdaptor$DatagramPackets.h>
#include <sun/nio/ch/DatagramSocketAdaptor$DatagramSockets.h>
#include <sun/nio/ch/DatagramSocketAdaptor$NetworkInterfaces.h>
#include <sun/nio/ch/DefaultAsynchronousChannelProvider.h>
#include <sun/nio/ch/DefaultSelectorProvider.h>
#include <sun/nio/ch/DirectBuffer.h>
#include <sun/nio/ch/DummySocketImpl.h>
#include <sun/nio/ch/ExtendedSocketOption.h>
#include <sun/nio/ch/ExtendedSocketOption$1.h>
#include <sun/nio/ch/FileChannelImpl.h>
#include <sun/nio/ch/FileChannelImpl$1.h>
#include <sun/nio/ch/FileChannelImpl$2.h>
#include <sun/nio/ch/FileChannelImpl$Closer.h>
#include <sun/nio/ch/FileChannelImpl$DefaultUnmapper.h>
#include <sun/nio/ch/FileChannelImpl$SyncUnmapper.h>
#include <sun/nio/ch/FileChannelImpl$Unmapper.h>
#include <sun/nio/ch/FileDispatcher.h>
#include <sun/nio/ch/FileDispatcherImpl.h>
#include <sun/nio/ch/FileKey.h>
#include <sun/nio/ch/FileLockImpl.h>
#include <sun/nio/ch/FileLockTable.h>
#include <sun/nio/ch/FileLockTable$FileLockReference.h>
#include <sun/nio/ch/Groupable.h>
#include <sun/nio/ch/IOStatus.h>
#include <sun/nio/ch/IOUtil.h>
#include <sun/nio/ch/IOUtil$LinkedRunnable.h>
#include <sun/nio/ch/IOUtil$Releaser.h>
#include <sun/nio/ch/IOVecWrapper.h>
#include <sun/nio/ch/IOVecWrapper$Deallocator.h>
#include <sun/nio/ch/InheritedChannel.h>
#include <sun/nio/ch/InheritedChannel$InheritedDatagramChannelImpl.h>
#include <sun/nio/ch/InheritedChannel$InheritedServerSocketChannelImpl.h>
#include <sun/nio/ch/InheritedChannel$InheritedSocketChannelImpl.h>
#include <sun/nio/ch/Interruptible.h>
#include <sun/nio/ch/Invoker.h>
#include <sun/nio/ch/Invoker$1.h>
#include <sun/nio/ch/Invoker$2.h>
#include <sun/nio/ch/Invoker$3.h>
#include <sun/nio/ch/Invoker$GroupAndInvokeCount.h>
#include <sun/nio/ch/KQueue.h>
#include <sun/nio/ch/KQueuePort.h>
#include <sun/nio/ch/KQueuePort$Event.h>
#include <sun/nio/ch/KQueuePort$EventHandlerTask.h>
#include <sun/nio/ch/KQueueSelectorImpl.h>
#include <sun/nio/ch/KQueueSelectorProvider.h>
#include <sun/nio/ch/MembershipKeyImpl.h>
#include <sun/nio/ch/MembershipKeyImpl$Type4.h>
#include <sun/nio/ch/MembershipKeyImpl$Type6.h>
#include <sun/nio/ch/MembershipRegistry.h>
#include <sun/nio/ch/MembershipRegistry$ThrowingConsumer.h>
#include <sun/nio/ch/NativeDispatcher.h>
#include <sun/nio/ch/NativeObject.h>
#include <sun/nio/ch/NativeSocketAddress.h>
#include <sun/nio/ch/NativeThread.h>
#include <sun/nio/ch/NativeThreadSet.h>
#include <sun/nio/ch/Net.h>
#include <sun/nio/ch/Net$1.h>
#include <sun/nio/ch/Net$2.h>
#include <sun/nio/ch/NioSocketImpl.h>
#include <sun/nio/ch/NioSocketImpl$1.h>
#include <sun/nio/ch/NioSocketImpl$2.h>
#include <sun/nio/ch/OptionKey.h>
#include <sun/nio/ch/PendingFuture.h>
#include <sun/nio/ch/PipeImpl.h>
#include <sun/nio/ch/PollArrayWrapper.h>
#include <sun/nio/ch/PollSelectorImpl.h>
#include <sun/nio/ch/PollSelectorProvider.h>
#include <sun/nio/ch/Port.h>
#include <sun/nio/ch/Port$1.h>
#include <sun/nio/ch/Port$PollableChannel.h>
#include <sun/nio/ch/Reflect.h>
#include <sun/nio/ch/Reflect$1.h>
#include <sun/nio/ch/Reflect$ReflectionError.h>
#include <sun/nio/ch/SelChImpl.h>
#include <sun/nio/ch/SelectionKeyImpl.h>
#include <sun/nio/ch/SelectorImpl.h>
#include <sun/nio/ch/SelectorProviderImpl.h>
#include <sun/nio/ch/ServerSocketAdaptor.h>
#include <sun/nio/ch/ServerSocketChannelImpl.h>
#include <sun/nio/ch/ServerSocketChannelImpl$DefaultOptionsHolder.h>
#include <sun/nio/ch/SimpleAsynchronousFileChannelImpl.h>
#include <sun/nio/ch/SimpleAsynchronousFileChannelImpl$1.h>
#include <sun/nio/ch/SimpleAsynchronousFileChannelImpl$2.h>
#include <sun/nio/ch/SimpleAsynchronousFileChannelImpl$3.h>
#include <sun/nio/ch/SimpleAsynchronousFileChannelImpl$DefaultExecutorHolder.h>
#include <sun/nio/ch/SinkChannelImpl.h>
#include <sun/nio/ch/SocketAdaptor.h>
#include <sun/nio/ch/SocketAdaptor$1.h>
#include <sun/nio/ch/SocketAdaptor$2.h>
#include <sun/nio/ch/SocketChannelImpl.h>
#include <sun/nio/ch/SocketChannelImpl$DefaultOptionsHolder.h>
#include <sun/nio/ch/SocketDispatcher.h>
#include <sun/nio/ch/SocketOptionRegistry.h>
#include <sun/nio/ch/SocketOptionRegistry$LazyInitialization.h>
#include <sun/nio/ch/SocketOptionRegistry$RegistryKey.h>
#include <sun/nio/ch/SourceChannelImpl.h>
#include <sun/nio/ch/ThreadPool.h>
#include <sun/nio/ch/ThreadPool$DefaultThreadPoolHolder.h>
#include <sun/nio/ch/UnixAsynchronousServerSocketChannelImpl.h>
#include <sun/nio/ch/UnixAsynchronousServerSocketChannelImpl$1.h>
#include <sun/nio/ch/UnixAsynchronousSocketChannelImpl.h>
#include <sun/nio/ch/UnixAsynchronousSocketChannelImpl$1.h>
#include <sun/nio/ch/UnixAsynchronousSocketChannelImpl$2.h>
#include <sun/nio/ch/UnixAsynchronousSocketChannelImpl$OpType.h>
#include <sun/nio/ch/UnixDomainSockets.h>
#include <sun/nio/ch/UnixDomainSocketsUtil.h>
#include <sun/nio/ch/Util.h>
#include <sun/nio/ch/Util$1.h>
#include <sun/nio/ch/Util$2.h>
#include <sun/nio/ch/Util$3.h>
#include <sun/nio/ch/Util$4.h>
#include <sun/nio/ch/Util$BufferCache.h>
#include <sun/nio/cs/ArrayDecoder.h>
#include <sun/nio/cs/ArrayEncoder.h>
#include <sun/nio/cs/CESU_8.h>
#include <sun/nio/cs/CESU_8$Decoder.h>
#include <sun/nio/cs/CESU_8$Encoder.h>
#include <sun/nio/cs/CharsetMapping.h>
#include <sun/nio/cs/CharsetMapping$1.h>
#include <sun/nio/cs/CharsetMapping$2.h>
#include <sun/nio/cs/CharsetMapping$3.h>
#include <sun/nio/cs/CharsetMapping$4.h>
#include <sun/nio/cs/CharsetMapping$Entry.h>
#include <sun/nio/cs/DelegatableDecoder.h>
#include <sun/nio/cs/DoubleByte.h>
#include <sun/nio/cs/DoubleByte$Decoder.h>
#include <sun/nio/cs/DoubleByte$Decoder_DBCSONLY.h>
#include <sun/nio/cs/DoubleByte$Decoder_EBCDIC.h>
#include <sun/nio/cs/DoubleByte$Decoder_EUC_SIM.h>
#include <sun/nio/cs/DoubleByte$Encoder.h>
#include <sun/nio/cs/DoubleByte$Encoder_DBCSONLY.h>
#include <sun/nio/cs/DoubleByte$Encoder_EBCDIC.h>
#include <sun/nio/cs/DoubleByte$Encoder_EUC_SIM.h>
#include <sun/nio/cs/GB18030.h>
#include <sun/nio/cs/GB18030$Decoder.h>
#include <sun/nio/cs/GB18030$Encoder.h>
#include <sun/nio/cs/GBK.h>
#include <sun/nio/cs/GBK$DecodeHolder.h>
#include <sun/nio/cs/GBK$EncodeHolder.h>
#include <sun/nio/cs/HKSCS.h>
#include <sun/nio/cs/HKSCS$Decoder.h>
#include <sun/nio/cs/HKSCS$Encoder.h>
#include <sun/nio/cs/HKSCSMapping.h>
#include <sun/nio/cs/HKSCS_XPMapping.h>
#include <sun/nio/cs/HistoricallyNamedCharset.h>
#include <sun/nio/cs/IBM437.h>
#include <sun/nio/cs/IBM437$Holder.h>
#include <sun/nio/cs/IBM737.h>
#include <sun/nio/cs/IBM737$Holder.h>
#include <sun/nio/cs/IBM775.h>
#include <sun/nio/cs/IBM775$Holder.h>
#include <sun/nio/cs/IBM850.h>
#include <sun/nio/cs/IBM850$Holder.h>
#include <sun/nio/cs/IBM852.h>
#include <sun/nio/cs/IBM852$Holder.h>
#include <sun/nio/cs/IBM855.h>
#include <sun/nio/cs/IBM855$Holder.h>
#include <sun/nio/cs/IBM857.h>
#include <sun/nio/cs/IBM857$Holder.h>
#include <sun/nio/cs/IBM858.h>
#include <sun/nio/cs/IBM858$Holder.h>
#include <sun/nio/cs/IBM862.h>
#include <sun/nio/cs/IBM862$Holder.h>
#include <sun/nio/cs/IBM866.h>
#include <sun/nio/cs/IBM866$Holder.h>
#include <sun/nio/cs/IBM874.h>
#include <sun/nio/cs/IBM874$Holder.h>
#include <sun/nio/cs/ISO_8859_1.h>
#include <sun/nio/cs/ISO_8859_1$Decoder.h>
#include <sun/nio/cs/ISO_8859_1$Encoder.h>
#include <sun/nio/cs/ISO_8859_13.h>
#include <sun/nio/cs/ISO_8859_13$Holder.h>
#include <sun/nio/cs/ISO_8859_15.h>
#include <sun/nio/cs/ISO_8859_15$Holder.h>
#include <sun/nio/cs/ISO_8859_16.h>
#include <sun/nio/cs/ISO_8859_16$Holder.h>
#include <sun/nio/cs/ISO_8859_2.h>
#include <sun/nio/cs/ISO_8859_2$Holder.h>
#include <sun/nio/cs/ISO_8859_4.h>
#include <sun/nio/cs/ISO_8859_4$Holder.h>
#include <sun/nio/cs/ISO_8859_5.h>
#include <sun/nio/cs/ISO_8859_5$Holder.h>
#include <sun/nio/cs/ISO_8859_7.h>
#include <sun/nio/cs/ISO_8859_7$Holder.h>
#include <sun/nio/cs/ISO_8859_9.h>
#include <sun/nio/cs/ISO_8859_9$Holder.h>
#include <sun/nio/cs/JIS_X_0201.h>
#include <sun/nio/cs/JIS_X_0201$Holder.h>
#include <sun/nio/cs/Johab.h>
#include <sun/nio/cs/Johab$DecodeHolder.h>
#include <sun/nio/cs/Johab$EncodeHolder.h>
#include <sun/nio/cs/KOI8_R.h>
#include <sun/nio/cs/KOI8_R$Holder.h>
#include <sun/nio/cs/KOI8_U.h>
#include <sun/nio/cs/KOI8_U$Holder.h>
#include <sun/nio/cs/MS1250.h>
#include <sun/nio/cs/MS1250$Holder.h>
#include <sun/nio/cs/MS1251.h>
#include <sun/nio/cs/MS1251$Holder.h>
#include <sun/nio/cs/MS1252.h>
#include <sun/nio/cs/MS1252$Holder.h>
#include <sun/nio/cs/MS1253.h>
#include <sun/nio/cs/MS1253$Holder.h>
#include <sun/nio/cs/MS1254.h>
#include <sun/nio/cs/MS1254$Holder.h>
#include <sun/nio/cs/MS1255.h>
#include <sun/nio/cs/MS1255$Holder.h>
#include <sun/nio/cs/MS1256.h>
#include <sun/nio/cs/MS1256$Holder.h>
#include <sun/nio/cs/MS1257.h>
#include <sun/nio/cs/MS1257$Holder.h>
#include <sun/nio/cs/MS1258.h>
#include <sun/nio/cs/MS1258$Holder.h>
#include <sun/nio/cs/MS874.h>
#include <sun/nio/cs/MS874$Holder.h>
#include <sun/nio/cs/MS932.h>
#include <sun/nio/cs/MS932$DecodeHolder.h>
#include <sun/nio/cs/MS932$EncodeHolder.h>
#include <sun/nio/cs/MS936.h>
#include <sun/nio/cs/MS936$DecodeHolder.h>
#include <sun/nio/cs/MS936$EncodeHolder.h>
#include <sun/nio/cs/MS949.h>
#include <sun/nio/cs/MS949$DecodeHolder.h>
#include <sun/nio/cs/MS949$EncodeHolder.h>
#include <sun/nio/cs/MS950.h>
#include <sun/nio/cs/MS950$DecodeHolder.h>
#include <sun/nio/cs/MS950$EncodeHolder.h>
#include <sun/nio/cs/MS950_HKSCS.h>
#include <sun/nio/cs/MS950_HKSCS$Decoder.h>
#include <sun/nio/cs/MS950_HKSCS$Encoder.h>
#include <sun/nio/cs/MS950_HKSCS_XP.h>
#include <sun/nio/cs/MS950_HKSCS_XP$Decoder.h>
#include <sun/nio/cs/MS950_HKSCS_XP$Encoder.h>
#include <sun/nio/cs/SJIS.h>
#include <sun/nio/cs/SJIS$DecodeHolder.h>
#include <sun/nio/cs/SJIS$EncodeHolder.h>
#include <sun/nio/cs/SingleByte.h>
#include <sun/nio/cs/SingleByte$Decoder.h>
#include <sun/nio/cs/SingleByte$Encoder.h>
#include <sun/nio/cs/StandardCharsets.h>
#include <sun/nio/cs/StandardCharsets$1.h>
#include <sun/nio/cs/StandardCharsets$Aliases.h>
#include <sun/nio/cs/StandardCharsets$Cache.h>
#include <sun/nio/cs/StandardCharsets$Classes.h>
#include <sun/nio/cs/StreamDecoder.h>
#include <sun/nio/cs/StreamEncoder.h>
#include <sun/nio/cs/StringUTF16.h>
#include <sun/nio/cs/Surrogate.h>
#include <sun/nio/cs/Surrogate$Generator.h>
#include <sun/nio/cs/Surrogate$Parser.h>
#include <sun/nio/cs/ThreadLocalCoders.h>
#include <sun/nio/cs/ThreadLocalCoders$1.h>
#include <sun/nio/cs/ThreadLocalCoders$2.h>
#include <sun/nio/cs/ThreadLocalCoders$Cache.h>
#include <sun/nio/cs/US_ASCII.h>
#include <sun/nio/cs/US_ASCII$Decoder.h>
#include <sun/nio/cs/US_ASCII$Encoder.h>
#include <sun/nio/cs/UTF_16.h>
#include <sun/nio/cs/UTF_16$Decoder.h>
#include <sun/nio/cs/UTF_16$Encoder.h>
#include <sun/nio/cs/UTF_16BE.h>
#include <sun/nio/cs/UTF_16BE$Decoder.h>
#include <sun/nio/cs/UTF_16BE$Encoder.h>
#include <sun/nio/cs/UTF_16LE.h>
#include <sun/nio/cs/UTF_16LE$Decoder.h>
#include <sun/nio/cs/UTF_16LE$Encoder.h>
#include <sun/nio/cs/UTF_16LE_BOM.h>
#include <sun/nio/cs/UTF_16LE_BOM$Decoder.h>
#include <sun/nio/cs/UTF_16LE_BOM$Encoder.h>
#include <sun/nio/cs/UTF_32.h>
#include <sun/nio/cs/UTF_32BE.h>
#include <sun/nio/cs/UTF_32BE_BOM.h>
#include <sun/nio/cs/UTF_32Coder.h>
#include <sun/nio/cs/UTF_32Coder$Decoder.h>
#include <sun/nio/cs/UTF_32Coder$Encoder.h>
#include <sun/nio/cs/UTF_32LE.h>
#include <sun/nio/cs/UTF_32LE_BOM.h>
#include <sun/nio/cs/UTF_8.h>
#include <sun/nio/cs/UTF_8$Decoder.h>
#include <sun/nio/cs/UTF_8$Encoder.h>
#include <sun/nio/cs/Unicode.h>
#include <sun/nio/cs/UnicodeDecoder.h>
#include <sun/nio/cs/UnicodeEncoder.h>
#include <sun/nio/fs/AbstractAclFileAttributeView.h>
#include <sun/nio/fs/AbstractBasicFileAttributeView.h>
#include <sun/nio/fs/AbstractBasicFileAttributeView$AttributesBuilder.h>
#include <sun/nio/fs/AbstractFileSystemProvider.h>
#include <sun/nio/fs/AbstractFileTypeDetector.h>
#include <sun/nio/fs/AbstractPoller.h>
#include <sun/nio/fs/AbstractPoller$1.h>
#include <sun/nio/fs/AbstractPoller$2.h>
#include <sun/nio/fs/AbstractPoller$Request.h>
#include <sun/nio/fs/AbstractPoller$RequestType.h>
#include <sun/nio/fs/AbstractUserDefinedFileAttributeView.h>
#include <sun/nio/fs/AbstractWatchKey.h>
#include <sun/nio/fs/AbstractWatchKey$Event.h>
#include <sun/nio/fs/AbstractWatchKey$State.h>
#include <sun/nio/fs/AbstractWatchService.h>
#include <sun/nio/fs/AbstractWatchService$1.h>
#include <sun/nio/fs/BasicFileAttributesHolder.h>
#include <sun/nio/fs/BsdFileStore.h>
#include <sun/nio/fs/BsdFileSystem.h>
#include <sun/nio/fs/BsdFileSystem$SupportedFileFileAttributeViewsHolder.h>
#include <sun/nio/fs/BsdFileSystemProvider.h>
#include <sun/nio/fs/BsdNativeDispatcher.h>
#include <sun/nio/fs/BsdUserDefinedFileAttributeView.h>
#include <sun/nio/fs/Cancellable.h>
#include <sun/nio/fs/DefaultFileSystemProvider.h>
#include <sun/nio/fs/DefaultFileTypeDetector.h>
#include <sun/nio/fs/DynamicFileAttributeView.h>
#include <sun/nio/fs/ExtendedOptions.h>
#include <sun/nio/fs/ExtendedOptions$InternalOption.h>
#include <sun/nio/fs/ExtendedOptions$Wrapper.h>
#include <sun/nio/fs/FileOwnerAttributeViewImpl.h>
#include <sun/nio/fs/Globs.h>
#include <sun/nio/fs/MacOSXFileSystem.h>
#include <sun/nio/fs/MacOSXFileSystemProvider.h>
#include <sun/nio/fs/MacOSXNativeDispatcher.h>
#include <sun/nio/fs/MimeTypesFileTypeDetector.h>
#include <sun/nio/fs/MimeTypesFileTypeDetector$1.h>
#include <sun/nio/fs/NativeBuffer.h>
#include <sun/nio/fs/NativeBuffer$Deallocator.h>
#include <sun/nio/fs/NativeBuffers.h>
#include <sun/nio/fs/NativeBuffers$1.h>
#include <sun/nio/fs/PollingWatchService.h>
#include <sun/nio/fs/PollingWatchService$1.h>
#include <sun/nio/fs/PollingWatchService$2.h>
#include <sun/nio/fs/PollingWatchService$3.h>
#include <sun/nio/fs/PollingWatchService$CacheEntry.h>
#include <sun/nio/fs/PollingWatchService$PollingWatchKey.h>
#include <sun/nio/fs/PollingWatchService$PollingWatchKey$1.h>
#include <sun/nio/fs/Reflect.h>
#include <sun/nio/fs/Reflect$1.h>
#include <sun/nio/fs/UTIFileTypeDetector.h>
#include <sun/nio/fs/UnixChannelFactory.h>
#include <sun/nio/fs/UnixChannelFactory$1.h>
#include <sun/nio/fs/UnixChannelFactory$Flags.h>
#include <sun/nio/fs/UnixConstants.h>
#include <sun/nio/fs/UnixCopyFile.h>
#include <sun/nio/fs/UnixCopyFile$1.h>
#include <sun/nio/fs/UnixCopyFile$Flags.h>
#include <sun/nio/fs/UnixDirectoryStream.h>
#include <sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.h>
#include <sun/nio/fs/UnixException.h>
#include <sun/nio/fs/UnixFileAttributeViews.h>
#include <sun/nio/fs/UnixFileAttributeViews$Basic.h>
#include <sun/nio/fs/UnixFileAttributeViews$Posix.h>
#include <sun/nio/fs/UnixFileAttributeViews$Unix.h>
#include <sun/nio/fs/UnixFileAttributes.h>
#include <sun/nio/fs/UnixFileAttributes$UnixAsBasicFileAttributes.h>
#include <sun/nio/fs/UnixFileKey.h>
#include <sun/nio/fs/UnixFileModeAttribute.h>
#include <sun/nio/fs/UnixFileModeAttribute$1.h>
#include <sun/nio/fs/UnixFileStore.h>
#include <sun/nio/fs/UnixFileStore$1.h>
#include <sun/nio/fs/UnixFileStore$FeatureStatus.h>
#include <sun/nio/fs/UnixFileStoreAttributes.h>
#include <sun/nio/fs/UnixFileSystem.h>
#include <sun/nio/fs/UnixFileSystem$1.h>
#include <sun/nio/fs/UnixFileSystem$2.h>
#include <sun/nio/fs/UnixFileSystem$3.h>
#include <sun/nio/fs/UnixFileSystem$FileStoreIterator.h>
#include <sun/nio/fs/UnixFileSystem$LookupService.h>
#include <sun/nio/fs/UnixFileSystem$LookupService$1.h>
#include <sun/nio/fs/UnixFileSystemProvider.h>
#include <sun/nio/fs/UnixFileSystemProvider$1.h>
#include <sun/nio/fs/UnixFileSystemProvider$2.h>
#include <sun/nio/fs/UnixFileSystemProvider$3.h>
#include <sun/nio/fs/UnixMountEntry.h>
#include <sun/nio/fs/UnixNativeDispatcher.h>
#include <sun/nio/fs/UnixPath.h>
#include <sun/nio/fs/UnixSecureDirectoryStream.h>
#include <sun/nio/fs/UnixSecureDirectoryStream$BasicFileAttributeViewImpl.h>
#include <sun/nio/fs/UnixSecureDirectoryStream$PosixFileAttributeViewImpl.h>
#include <sun/nio/fs/UnixUriUtils.h>
#include <sun/nio/fs/UnixUserDefinedFileAttributeView.h>
#include <sun/nio/fs/UnixUserPrincipals.h>
#include <sun/nio/fs/UnixUserPrincipals$Group.h>
#include <sun/nio/fs/UnixUserPrincipals$User.h>
#include <sun/nio/fs/Util.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedArrayTypeImpl.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedTypeBaseImpl.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedTypeVariableImpl.h>
#include <sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedWildcardTypeImpl.h>
#include <sun/reflect/annotation/AnnotationInvocationHandler.h>
#include <sun/reflect/annotation/AnnotationInvocationHandler$1.h>
#include <sun/reflect/annotation/AnnotationInvocationHandler$UnsafeAccessor.h>
#include <sun/reflect/annotation/AnnotationParser.h>
#include <sun/reflect/annotation/AnnotationParser$1.h>
#include <sun/reflect/annotation/AnnotationSupport.h>
#include <sun/reflect/annotation/AnnotationSupport$1.h>
#include <sun/reflect/annotation/AnnotationType.h>
#include <sun/reflect/annotation/AnnotationType$1.h>
#include <sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.h>
#include <sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h>
#include <sun/reflect/annotation/ExceptionProxy.h>
#include <sun/reflect/annotation/TypeAnnotation.h>
#include <sun/reflect/annotation/TypeAnnotation$LocationInfo.h>
#include <sun/reflect/annotation/TypeAnnotation$LocationInfo$Location.h>
#include <sun/reflect/annotation/TypeAnnotation$TypeAnnotationTarget.h>
#include <sun/reflect/annotation/TypeAnnotation$TypeAnnotationTargetInfo.h>
#include <sun/reflect/annotation/TypeAnnotationParser.h>
#include <sun/reflect/annotation/TypeNotPresentExceptionProxy.h>
#include <sun/reflect/generics/factory/CoreReflectionFactory.h>
#include <sun/reflect/generics/factory/GenericsFactory.h>
#include <sun/reflect/generics/parser/SignatureParser.h>
#include <sun/reflect/generics/reflectiveObjects/GenericArrayTypeImpl.h>
#include <sun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator.h>
#include <sun/reflect/generics/reflectiveObjects/NotImplementedException.h>
#include <sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl.h>
#include <sun/reflect/generics/reflectiveObjects/TypeVariableImpl.h>
#include <sun/reflect/generics/reflectiveObjects/WildcardTypeImpl.h>
#include <sun/reflect/generics/repository/AbstractRepository.h>
#include <sun/reflect/generics/repository/ClassRepository.h>
#include <sun/reflect/generics/repository/ConstructorRepository.h>
#include <sun/reflect/generics/repository/FieldRepository.h>
#include <sun/reflect/generics/repository/GenericDeclRepository.h>
#include <sun/reflect/generics/repository/MethodRepository.h>
#include <sun/reflect/generics/scope/AbstractScope.h>
#include <sun/reflect/generics/scope/ClassScope.h>
#include <sun/reflect/generics/scope/ConstructorScope.h>
#include <sun/reflect/generics/scope/DummyScope.h>
#include <sun/reflect/generics/scope/MethodScope.h>
#include <sun/reflect/generics/scope/Scope.h>
#include <sun/reflect/generics/tree/ArrayTypeSignature.h>
#include <sun/reflect/generics/tree/BaseType.h>
#include <sun/reflect/generics/tree/BooleanSignature.h>
#include <sun/reflect/generics/tree/BottomSignature.h>
#include <sun/reflect/generics/tree/ByteSignature.h>
#include <sun/reflect/generics/tree/CharSignature.h>
#include <sun/reflect/generics/tree/ClassSignature.h>
#include <sun/reflect/generics/tree/ClassTypeSignature.h>
#include <sun/reflect/generics/tree/DoubleSignature.h>
#include <sun/reflect/generics/tree/FieldTypeSignature.h>
#include <sun/reflect/generics/tree/FloatSignature.h>
#include <sun/reflect/generics/tree/FormalTypeParameter.h>
#include <sun/reflect/generics/tree/IntSignature.h>
#include <sun/reflect/generics/tree/LongSignature.h>
#include <sun/reflect/generics/tree/MethodTypeSignature.h>
#include <sun/reflect/generics/tree/ReturnType.h>
#include <sun/reflect/generics/tree/ShortSignature.h>
#include <sun/reflect/generics/tree/Signature.h>
#include <sun/reflect/generics/tree/SimpleClassTypeSignature.h>
#include <sun/reflect/generics/tree/Tree.h>
#include <sun/reflect/generics/tree/TypeArgument.h>
#include <sun/reflect/generics/tree/TypeSignature.h>
#include <sun/reflect/generics/tree/TypeTree.h>
#include <sun/reflect/generics/tree/TypeVariableSignature.h>
#include <sun/reflect/generics/tree/VoidDescriptor.h>
#include <sun/reflect/generics/tree/Wildcard.h>
#include <sun/reflect/generics/visitor/Reifier.h>
#include <sun/reflect/generics/visitor/TypeTreeVisitor.h>
#include <sun/reflect/generics/visitor/Visitor.h>
#include <sun/reflect/misc/ConstructorUtil.h>
#include <sun/reflect/misc/FieldUtil.h>
#include <sun/reflect/misc/MethodUtil.h>
#include <sun/reflect/misc/MethodUtil$1.h>
#include <sun/reflect/misc/MethodUtil$Signature.h>
#include <sun/reflect/misc/ReflectUtil.h>
#include <sun/reflect/misc/Trampoline.h>
#include <sun/security/action/GetBooleanAction.h>
#include <sun/security/action/GetIntegerAction.h>
#include <sun/security/action/GetLongAction.h>
#include <sun/security/action/GetPropertyAction.h>
#include <sun/security/action/GetPropertyAction$1.h>
#include <sun/security/action/OpenFileInputStreamAction.h>
#include <sun/security/action/PutAllAction.h>
#include <sun/security/internal/interfaces/TlsMasterSecret.h>
#include <sun/security/internal/spec/TlsKeyMaterialParameterSpec.h>
#include <sun/security/internal/spec/TlsKeyMaterialSpec.h>
#include <sun/security/internal/spec/TlsMasterSecretParameterSpec.h>
#include <sun/security/internal/spec/TlsPrfParameterSpec.h>
#include <sun/security/internal/spec/TlsRsaPremasterSecretParameterSpec.h>
#include <sun/security/jca/GetInstance.h>
#include <sun/security/jca/GetInstance$Instance.h>
#include <sun/security/jca/JCAUtil.h>
#include <sun/security/jca/JCAUtil$CachedSecureRandomHolder.h>
#include <sun/security/jca/ProviderConfig.h>
#include <sun/security/jca/ProviderConfig$1.h>
#include <sun/security/jca/ProviderConfig$2.h>
#include <sun/security/jca/ProviderConfig$3.h>
#include <sun/security/jca/ProviderConfig$4.h>
#include <sun/security/jca/ProviderConfig$ProviderLoader.h>
#include <sun/security/jca/ProviderConfig$ProviderLoader$1.h>
#include <sun/security/jca/ProviderList.h>
#include <sun/security/jca/ProviderList$1.h>
#include <sun/security/jca/ProviderList$2.h>
#include <sun/security/jca/ProviderList$3.h>
#include <sun/security/jca/ProviderList$PreferredEntry.h>
#include <sun/security/jca/ProviderList$PreferredList.h>
#include <sun/security/jca/ProviderList$ServiceList.h>
#include <sun/security/jca/ProviderList$ServiceList$1.h>
#include <sun/security/jca/Providers.h>
#include <sun/security/jca/ServiceId.h>
#include <sun/security/pkcs/ContentInfo.h>
#include <sun/security/pkcs/ESSCertId.h>
#include <sun/security/pkcs/EncryptedPrivateKeyInfo.h>
#include <sun/security/pkcs/PKCS7.h>
#include <sun/security/pkcs/PKCS7$SecureRandomHolder.h>
#include <sun/security/pkcs/PKCS8Key.h>
#include <sun/security/pkcs/PKCS9Attribute.h>
#include <sun/security/pkcs/PKCS9Attributes.h>
#include <sun/security/pkcs/ParsingException.h>
#include <sun/security/pkcs/SignerInfo.h>
#include <sun/security/pkcs/SigningCertificateInfo.h>
#include <sun/security/pkcs10/PKCS10.h>
#include <sun/security/pkcs10/PKCS10Attribute.h>
#include <sun/security/pkcs10/PKCS10Attributes.h>
#include <sun/security/pkcs12/MacData.h>
#include <sun/security/pkcs12/PKCS12KeyStore.h>
#include <sun/security/pkcs12/PKCS12KeyStore$1.h>
#include <sun/security/pkcs12/PKCS12KeyStore$CertEntry.h>
#include <sun/security/pkcs12/PKCS12KeyStore$DualFormatPKCS12.h>
#include <sun/security/pkcs12/PKCS12KeyStore$Entry.h>
#include <sun/security/pkcs12/PKCS12KeyStore$KeyEntry.h>
#include <sun/security/pkcs12/PKCS12KeyStore$PrivateKeyEntry.h>
#include <sun/security/pkcs12/PKCS12KeyStore$RetryWithZero.h>
#include <sun/security/pkcs12/PKCS12KeyStore$SecretKeyEntry.h>
#include <sun/security/provider/AbstractDrbg.h>
#include <sun/security/provider/AbstractDrbg$NonceProvider.h>
#include <sun/security/provider/AbstractDrbg$SeederHolder.h>
#include <sun/security/provider/AbstractHashDrbg.h>
#include <sun/security/provider/ByteArrayAccess.h>
#include <sun/security/provider/ByteArrayAccess$BE.h>
#include <sun/security/provider/ByteArrayAccess$LE.h>
#include <sun/security/provider/ConfigFile.h>
#include <sun/security/provider/ConfigFile$Spi.h>
#include <sun/security/provider/ConfigFile$Spi$1.h>
#include <sun/security/provider/ConfigFile$Spi$2.h>
#include <sun/security/provider/CtrDrbg.h>
#include <sun/security/provider/DRBG.h>
#include <sun/security/provider/DSA.h>
#include <sun/security/provider/DSA$Raw.h>
#include <sun/security/provider/DSA$Raw$NullDigest20.h>
#include <sun/security/provider/DSA$RawDSA.h>
#include <sun/security/provider/DSA$RawDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA1withDSA.h>
#include <sun/security/provider/DSA$SHA1withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA224withDSA.h>
#include <sun/security/provider/DSA$SHA224withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA256withDSA.h>
#include <sun/security/provider/DSA$SHA256withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA384withDSA.h>
#include <sun/security/provider/DSA$SHA384withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA3_224withDSA.h>
#include <sun/security/provider/DSA$SHA3_224withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA3_256withDSA.h>
#include <sun/security/provider/DSA$SHA3_256withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA3_384withDSA.h>
#include <sun/security/provider/DSA$SHA3_384withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA3_512withDSA.h>
#include <sun/security/provider/DSA$SHA3_512withDSAinP1363Format.h>
#include <sun/security/provider/DSA$SHA512withDSA.h>
#include <sun/security/provider/DSA$SHA512withDSAinP1363Format.h>
#include <sun/security/provider/DSAKeyFactory.h>
#include <sun/security/provider/DSAKeyPairGenerator.h>
#include <sun/security/provider/DSAKeyPairGenerator$Current.h>
#include <sun/security/provider/DSAKeyPairGenerator$Legacy.h>
#include <sun/security/provider/DSAParameterGenerator.h>
#include <sun/security/provider/DSAParameters.h>
#include <sun/security/provider/DSAPrivateKey.h>
#include <sun/security/provider/DSAPublicKey.h>
#include <sun/security/provider/DSAPublicKeyImpl.h>
#include <sun/security/provider/DigestBase.h>
#include <sun/security/provider/DomainKeyStore.h>
#include <sun/security/provider/DomainKeyStore$1.h>
#include <sun/security/provider/DomainKeyStore$DKS.h>
#include <sun/security/provider/DomainKeyStore$KeyStoreBuilderComponents.h>
#include <sun/security/provider/EntropySource.h>
#include <sun/security/provider/FileInputStreamPool.h>
#include <sun/security/provider/FileInputStreamPool$StreamRef.h>
#include <sun/security/provider/FileInputStreamPool$UnclosableInputStream.h>
#include <sun/security/provider/HashDrbg.h>
#include <sun/security/provider/HmacDrbg.h>
#include <sun/security/provider/JavaKeyStore.h>
#include <sun/security/provider/JavaKeyStore$CaseExactJKS.h>
#include <sun/security/provider/JavaKeyStore$DualFormatJKS.h>
#include <sun/security/provider/JavaKeyStore$JKS.h>
#include <sun/security/provider/JavaKeyStore$KeyEntry.h>
#include <sun/security/provider/JavaKeyStore$TrustedCertEntry.h>
#include <sun/security/provider/KeyProtector.h>
#include <sun/security/provider/MD2.h>
#include <sun/security/provider/MD4.h>
#include <sun/security/provider/MD4$1.h>
#include <sun/security/provider/MD4$2.h>
#include <sun/security/provider/MD5.h>
#include <sun/security/provider/MoreDrbgParameters.h>
#include <sun/security/provider/NativePRNG.h>
#include <sun/security/provider/NativePRNG$1.h>
#include <sun/security/provider/NativePRNG$2.h>
#include <sun/security/provider/NativePRNG$Blocking.h>
#include <sun/security/provider/NativePRNG$NonBlocking.h>
#include <sun/security/provider/NativePRNG$RandomIO.h>
#include <sun/security/provider/NativePRNG$RandomIO$1.h>
#include <sun/security/provider/NativePRNG$Variant.h>
#include <sun/security/provider/NativeSeedGenerator.h>
#include <sun/security/provider/ParameterCache.h>
#include <sun/security/provider/PolicyFile.h>
#include <sun/security/provider/PolicyFile$1.h>
#include <sun/security/provider/PolicyFile$2.h>
#include <sun/security/provider/PolicyFile$3.h>
#include <sun/security/provider/PolicyFile$4.h>
#include <sun/security/provider/PolicyFile$5.h>
#include <sun/security/provider/PolicyFile$6.h>
#include <sun/security/provider/PolicyFile$7.h>
#include <sun/security/provider/PolicyFile$8.h>
#include <sun/security/provider/PolicyFile$PolicyEntry.h>
#include <sun/security/provider/PolicyFile$PolicyInfo.h>
#include <sun/security/provider/PolicyFile$SelfPermission.h>
#include <sun/security/provider/PolicyParser.h>
#include <sun/security/provider/PolicyParser$DomainEntry.h>
#include <sun/security/provider/PolicyParser$GrantEntry.h>
#include <sun/security/provider/PolicyParser$KeyStoreEntry.h>
#include <sun/security/provider/PolicyParser$ParsingException.h>
#include <sun/security/provider/PolicyParser$PermissionEntry.h>
#include <sun/security/provider/PolicyParser$PrincipalEntry.h>
#include <sun/security/provider/PolicySpiFile.h>
#include <sun/security/provider/SHA.h>
#include <sun/security/provider/SHA2.h>
#include <sun/security/provider/SHA2$SHA224.h>
#include <sun/security/provider/SHA2$SHA256.h>
#include <sun/security/provider/SHA3.h>
#include <sun/security/provider/SHA3$SHA224.h>
#include <sun/security/provider/SHA3$SHA256.h>
#include <sun/security/provider/SHA3$SHA384.h>
#include <sun/security/provider/SHA3$SHA512.h>
#include <sun/security/provider/SHA5.h>
#include <sun/security/provider/SHA5$SHA384.h>
#include <sun/security/provider/SHA5$SHA512.h>
#include <sun/security/provider/SHA5$SHA512_224.h>
#include <sun/security/provider/SHA5$SHA512_256.h>
#include <sun/security/provider/SHAKE256.h>
#include <sun/security/provider/SecureRandom.h>
#include <sun/security/provider/SecureRandom$SeederHolder.h>
#include <sun/security/provider/SeedGenerator.h>
#include <sun/security/provider/SeedGenerator$1.h>
#include <sun/security/provider/SeedGenerator$ThreadedSeedGenerator.h>
#include <sun/security/provider/SeedGenerator$ThreadedSeedGenerator$1.h>
#include <sun/security/provider/SeedGenerator$ThreadedSeedGenerator$BogusThread.h>
#include <sun/security/provider/SeedGenerator$URLSeedGenerator.h>
#include <sun/security/provider/SeedGenerator$URLSeedGenerator$1.h>
#include <sun/security/provider/SubjectCodeSource.h>
#include <sun/security/provider/SubjectCodeSource$1.h>
#include <sun/security/provider/SubjectCodeSource$2.h>
#include <sun/security/provider/Sun.h>
#include <sun/security/provider/Sun$1.h>
#include <sun/security/provider/SunEntries.h>
#include <sun/security/provider/SunEntries$1.h>
#include <sun/security/provider/VerificationProvider.h>
#include <sun/security/provider/VerificationProvider$1.h>
#include <sun/security/provider/X509Factory.h>
#include <sun/security/provider/certpath/AdaptableX509CertSelector.h>
#include <sun/security/provider/certpath/AdjacencyList.h>
#include <sun/security/provider/certpath/AlgorithmChecker.h>
#include <sun/security/provider/certpath/BasicChecker.h>
#include <sun/security/provider/certpath/BuildStep.h>
#include <sun/security/provider/certpath/Builder.h>
#include <sun/security/provider/certpath/CertId.h>
#include <sun/security/provider/certpath/CertPathConstraintsParameters.h>
#include <sun/security/provider/certpath/CertPathHelper.h>
#include <sun/security/provider/certpath/CollectionCertStore.h>
#include <sun/security/provider/certpath/ConstraintsChecker.h>
#include <sun/security/provider/certpath/DistributionPointFetcher.h>
#include <sun/security/provider/certpath/ForwardBuilder.h>
#include <sun/security/provider/certpath/ForwardBuilder$PKIXCertComparator.h>
#include <sun/security/provider/certpath/ForwardState.h>
#include <sun/security/provider/certpath/IndexedCollectionCertStore.h>
#include <sun/security/provider/certpath/KeyChecker.h>
#include <sun/security/provider/certpath/OCSP.h>
#include <sun/security/provider/certpath/OCSP$RevocationStatus.h>
#include <sun/security/provider/certpath/OCSP$RevocationStatus$CertStatus.h>
#include <sun/security/provider/certpath/OCSPNonceExtension.h>
#include <sun/security/provider/certpath/OCSPRequest.h>
#include <sun/security/provider/certpath/OCSPResponse.h>
#include <sun/security/provider/certpath/OCSPResponse$1.h>
#include <sun/security/provider/certpath/OCSPResponse$IssuerInfo.h>
#include <sun/security/provider/certpath/OCSPResponse$ResponseStatus.h>
#include <sun/security/provider/certpath/OCSPResponse$SingleResponse.h>
#include <sun/security/provider/certpath/PKIX.h>
#include <sun/security/provider/certpath/PKIX$BuilderParams.h>
#include <sun/security/provider/certpath/PKIX$CertStoreComparator.h>
#include <sun/security/provider/certpath/PKIX$CertStoreTypeException.h>
#include <sun/security/provider/certpath/PKIX$ValidatorParams.h>
#include <sun/security/provider/certpath/PKIXCertPathValidator.h>
#include <sun/security/provider/certpath/PKIXExtendedParameters.h>
#include <sun/security/provider/certpath/PKIXMasterCertPathValidator.h>
#include <sun/security/provider/certpath/PolicyChecker.h>
#include <sun/security/provider/certpath/PolicyNodeImpl.h>
#include <sun/security/provider/certpath/ResponderId.h>
#include <sun/security/provider/certpath/ResponderId$1.h>
#include <sun/security/provider/certpath/ResponderId$Type.h>
#include <sun/security/provider/certpath/RevocationChecker.h>
#include <sun/security/provider/certpath/RevocationChecker$1.h>
#include <sun/security/provider/certpath/RevocationChecker$2.h>
#include <sun/security/provider/certpath/RevocationChecker$Mode.h>
#include <sun/security/provider/certpath/RevocationChecker$RejectKeySelector.h>
#include <sun/security/provider/certpath/RevocationChecker$RevocationProperties.h>
#include <sun/security/provider/certpath/State.h>
#include <sun/security/provider/certpath/SunCertPathBuilder.h>
#include <sun/security/provider/certpath/SunCertPathBuilderException.h>
#include <sun/security/provider/certpath/SunCertPathBuilderResult.h>
#include <sun/security/provider/certpath/URICertStore.h>
#include <sun/security/provider/certpath/URICertStore$UCS.h>
#include <sun/security/provider/certpath/UntrustedChecker.h>
#include <sun/security/provider/certpath/Vertex.h>
#include <sun/security/provider/certpath/X509CertPath.h>
#include <sun/security/provider/certpath/X509CertificatePair.h>
#include <sun/security/provider/certpath/ssl/SSLServerCertStore.h>
#include <sun/security/provider/certpath/ssl/SSLServerCertStore$1.h>
#include <sun/security/provider/certpath/ssl/SSLServerCertStore$CS.h>
#include <sun/security/provider/certpath/ssl/SSLServerCertStore$GetChainTrustManager.h>
#include <sun/security/rsa/MGF1.h>
#include <sun/security/rsa/PSSParameters.h>
#include <sun/security/rsa/RSACore.h>
#include <sun/security/rsa/RSACore$BlindingParameters.h>
#include <sun/security/rsa/RSACore$BlindingRandomPair.h>
#include <sun/security/rsa/RSAKeyFactory.h>
#include <sun/security/rsa/RSAKeyFactory$Legacy.h>
#include <sun/security/rsa/RSAKeyFactory$PSS.h>
#include <sun/security/rsa/RSAKeyPairGenerator.h>
#include <sun/security/rsa/RSAKeyPairGenerator$Legacy.h>
#include <sun/security/rsa/RSAKeyPairGenerator$PSS.h>
#include <sun/security/rsa/RSAPSSSignature.h>
#include <sun/security/rsa/RSAPadding.h>
#include <sun/security/rsa/RSAPrivateCrtKeyImpl.h>
#include <sun/security/rsa/RSAPrivateKeyImpl.h>
#include <sun/security/rsa/RSAPublicKeyImpl.h>
#include <sun/security/rsa/RSASignature.h>
#include <sun/security/rsa/RSASignature$MD2withRSA.h>
#include <sun/security/rsa/RSASignature$MD5withRSA.h>
#include <sun/security/rsa/RSASignature$SHA1withRSA.h>
#include <sun/security/rsa/RSASignature$SHA224withRSA.h>
#include <sun/security/rsa/RSASignature$SHA256withRSA.h>
#include <sun/security/rsa/RSASignature$SHA384withRSA.h>
#include <sun/security/rsa/RSASignature$SHA3_224withRSA.h>
#include <sun/security/rsa/RSASignature$SHA3_256withRSA.h>
#include <sun/security/rsa/RSASignature$SHA3_384withRSA.h>
#include <sun/security/rsa/RSASignature$SHA3_512withRSA.h>
#include <sun/security/rsa/RSASignature$SHA512_224withRSA.h>
#include <sun/security/rsa/RSASignature$SHA512_256withRSA.h>
#include <sun/security/rsa/RSASignature$SHA512withRSA.h>
#include <sun/security/rsa/RSAUtil.h>
#include <sun/security/rsa/RSAUtil$KeyType.h>
#include <sun/security/rsa/SunRsaSign.h>
#include <sun/security/rsa/SunRsaSign$1.h>
#include <sun/security/rsa/SunRsaSignEntries.h>
#include <sun/security/ssl/AbstractKeyManagerWrapper.h>
#include <sun/security/ssl/AbstractTrustManagerWrapper.h>
#include <sun/security/ssl/Alert.h>
#include <sun/security/ssl/Alert$AlertConsumer.h>
#include <sun/security/ssl/Alert$AlertMessage.h>
#include <sun/security/ssl/Alert$Level.h>
#include <sun/security/ssl/AlpnExtension.h>
#include <sun/security/ssl/AlpnExtension$AlpnSpec.h>
#include <sun/security/ssl/AlpnExtension$AlpnStringizer.h>
#include <sun/security/ssl/AlpnExtension$CHAlpnAbsence.h>
#include <sun/security/ssl/AlpnExtension$CHAlpnConsumer.h>
#include <sun/security/ssl/AlpnExtension$CHAlpnProducer.h>
#include <sun/security/ssl/AlpnExtension$SHAlpnAbsence.h>
#include <sun/security/ssl/AlpnExtension$SHAlpnConsumer.h>
#include <sun/security/ssl/AlpnExtension$SHAlpnProducer.h>
#include <sun/security/ssl/Authenticator.h>
#include <sun/security/ssl/Authenticator$1.h>
#include <sun/security/ssl/Authenticator$DTLS10Authenticator.h>
#include <sun/security/ssl/Authenticator$DTLS10Mac.h>
#include <sun/security/ssl/Authenticator$DTLS13Authenticator.h>
#include <sun/security/ssl/Authenticator$DTLSAuthenticator.h>
#include <sun/security/ssl/Authenticator$DTLSNullAuthenticator.h>
#include <sun/security/ssl/Authenticator$DTLSNullMac.h>
#include <sun/security/ssl/Authenticator$MAC.h>
#include <sun/security/ssl/Authenticator$MacImpl.h>
#include <sun/security/ssl/Authenticator$SSL30Authenticator.h>
#include <sun/security/ssl/Authenticator$SSL30Mac.h>
#include <sun/security/ssl/Authenticator$SSLAuthenticator.h>
#include <sun/security/ssl/Authenticator$SSLNullAuthenticator.h>
#include <sun/security/ssl/Authenticator$SSLNullMac.h>
#include <sun/security/ssl/Authenticator$TLS10Authenticator.h>
#include <sun/security/ssl/Authenticator$TLS10Mac.h>
#include <sun/security/ssl/Authenticator$TLS13Authenticator.h>
#include <sun/security/ssl/BaseSSLSocketImpl.h>
#include <sun/security/ssl/CertSignAlgsExtension.h>
#include <sun/security/ssl/CertSignAlgsExtension$CHCertSignatureSchemesConsumer.h>
#include <sun/security/ssl/CertSignAlgsExtension$CHCertSignatureSchemesProducer.h>
#include <sun/security/ssl/CertSignAlgsExtension$CHCertSignatureSchemesUpdate.h>
#include <sun/security/ssl/CertSignAlgsExtension$CRCertSignatureSchemesConsumer.h>
#include <sun/security/ssl/CertSignAlgsExtension$CRCertSignatureSchemesProducer.h>
#include <sun/security/ssl/CertSignAlgsExtension$CRCertSignatureSchemesUpdate.h>
#include <sun/security/ssl/CertSignAlgsExtension$CertSignatureSchemesStringizer.h>
#include <sun/security/ssl/CertStatusExtension.h>
#include <sun/security/ssl/CertStatusExtension$CHCertStatusReqConsumer.h>
#include <sun/security/ssl/CertStatusExtension$CHCertStatusReqProducer.h>
#include <sun/security/ssl/CertStatusExtension$CHCertStatusReqV2Consumer.h>
#include <sun/security/ssl/CertStatusExtension$CHCertStatusReqV2Producer.h>
#include <sun/security/ssl/CertStatusExtension$CTCertStatusResponseConsumer.h>
#include <sun/security/ssl/CertStatusExtension$CTCertStatusResponseProducer.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequest.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequestSpec.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequestStringizer.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequestType.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequestV2Spec.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRequestsStringizer.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusRespStringizer.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusResponse.h>
#include <sun/security/ssl/CertStatusExtension$CertStatusResponseSpec.h>
#include <sun/security/ssl/CertStatusExtension$OCSPStatusRequest.h>
#include <sun/security/ssl/CertStatusExtension$OCSPStatusResponse.h>
#include <sun/security/ssl/CertStatusExtension$SHCertStatusReqConsumer.h>
#include <sun/security/ssl/CertStatusExtension$SHCertStatusReqProducer.h>
#include <sun/security/ssl/CertStatusExtension$SHCertStatusReqV2Consumer.h>
#include <sun/security/ssl/CertStatusExtension$SHCertStatusReqV2Producer.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CHCertificateAuthoritiesConsumer.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CHCertificateAuthoritiesProducer.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CRCertificateAuthoritiesConsumer.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CRCertificateAuthoritiesProducer.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CertificateAuthoritiesSpec.h>
#include <sun/security/ssl/CertificateAuthoritiesExtension$CertificateAuthoritiesStringizer.h>
#include <sun/security/ssl/CertificateMessage.h>
#include <sun/security/ssl/CertificateMessage$CertificateEntry.h>
#include <sun/security/ssl/CertificateMessage$T12CertificateConsumer.h>
#include <sun/security/ssl/CertificateMessage$T12CertificateMessage.h>
#include <sun/security/ssl/CertificateMessage$T12CertificateProducer.h>
#include <sun/security/ssl/CertificateMessage$T13CertificateConsumer.h>
#include <sun/security/ssl/CertificateMessage$T13CertificateMessage.h>
#include <sun/security/ssl/CertificateMessage$T13CertificateProducer.h>
#include <sun/security/ssl/CertificateRequest.h>
#include <sun/security/ssl/CertificateRequest$ClientCertificateType.h>
#include <sun/security/ssl/CertificateRequest$T10CertificateRequestConsumer.h>
#include <sun/security/ssl/CertificateRequest$T10CertificateRequestMessage.h>
#include <sun/security/ssl/CertificateRequest$T10CertificateRequestProducer.h>
#include <sun/security/ssl/CertificateRequest$T12CertificateRequestConsumer.h>
#include <sun/security/ssl/CertificateRequest$T12CertificateRequestMessage.h>
#include <sun/security/ssl/CertificateRequest$T12CertificateRequestProducer.h>
#include <sun/security/ssl/CertificateRequest$T13CertificateRequestConsumer.h>
#include <sun/security/ssl/CertificateRequest$T13CertificateRequestMessage.h>
#include <sun/security/ssl/CertificateRequest$T13CertificateRequestProducer.h>
#include <sun/security/ssl/CertificateStatus.h>
#include <sun/security/ssl/CertificateStatus$CertificateStatusAbsence.h>
#include <sun/security/ssl/CertificateStatus$CertificateStatusConsumer.h>
#include <sun/security/ssl/CertificateStatus$CertificateStatusMessage.h>
#include <sun/security/ssl/CertificateStatus$CertificateStatusProducer.h>
#include <sun/security/ssl/CertificateVerify.h>
#include <sun/security/ssl/CertificateVerify$S30CertificateVerifyConsumer.h>
#include <sun/security/ssl/CertificateVerify$S30CertificateVerifyMessage.h>
#include <sun/security/ssl/CertificateVerify$S30CertificateVerifyProducer.h>
#include <sun/security/ssl/CertificateVerify$T10CertificateVerifyConsumer.h>
#include <sun/security/ssl/CertificateVerify$T10CertificateVerifyMessage.h>
#include <sun/security/ssl/CertificateVerify$T10CertificateVerifyProducer.h>
#include <sun/security/ssl/CertificateVerify$T12CertificateVerifyConsumer.h>
#include <sun/security/ssl/CertificateVerify$T12CertificateVerifyMessage.h>
#include <sun/security/ssl/CertificateVerify$T12CertificateVerifyProducer.h>
#include <sun/security/ssl/CertificateVerify$T13CertificateVerifyConsumer.h>
#include <sun/security/ssl/CertificateVerify$T13CertificateVerifyMessage.h>
#include <sun/security/ssl/CertificateVerify$T13CertificateVerifyProducer.h>
#include <sun/security/ssl/ChangeCipherSpec.h>
#include <sun/security/ssl/ChangeCipherSpec$T10ChangeCipherSpecConsumer.h>
#include <sun/security/ssl/ChangeCipherSpec$T10ChangeCipherSpecProducer.h>
#include <sun/security/ssl/ChangeCipherSpec$T13ChangeCipherSpecConsumer.h>
#include <sun/security/ssl/CipherSuite.h>
#include <sun/security/ssl/CipherSuite$1.h>
#include <sun/security/ssl/CipherSuite$HashAlg.h>
#include <sun/security/ssl/CipherSuite$KeyExchange.h>
#include <sun/security/ssl/CipherSuite$MacAlg.h>
#include <sun/security/ssl/CipherType.h>
#include <sun/security/ssl/Ciphertext.h>
#include <sun/security/ssl/ClientAuthType.h>
#include <sun/security/ssl/ClientHandshakeContext.h>
#include <sun/security/ssl/ClientHello.h>
#include <sun/security/ssl/ClientHello$1.h>
#include <sun/security/ssl/ClientHello$ClientHelloConsumer.h>
#include <sun/security/ssl/ClientHello$ClientHelloKickstartProducer.h>
#include <sun/security/ssl/ClientHello$ClientHelloMessage.h>
#include <sun/security/ssl/ClientHello$ClientHelloProducer.h>
#include <sun/security/ssl/ClientHello$D12ClientHelloConsumer.h>
#include <sun/security/ssl/ClientHello$D13ClientHelloConsumer.h>
#include <sun/security/ssl/ClientHello$T12ClientHelloConsumer.h>
#include <sun/security/ssl/ClientHello$T13ClientHelloConsumer.h>
#include <sun/security/ssl/ClientKeyExchange.h>
#include <sun/security/ssl/ClientKeyExchange$ClientKeyExchangeConsumer.h>
#include <sun/security/ssl/ClientKeyExchange$ClientKeyExchangeProducer.h>
#include <sun/security/ssl/ConnectionContext.h>
#include <sun/security/ssl/ContentType.h>
#include <sun/security/ssl/CookieExtension.h>
#include <sun/security/ssl/CookieExtension$CHCookieConsumer.h>
#include <sun/security/ssl/CookieExtension$CHCookieProducer.h>
#include <sun/security/ssl/CookieExtension$CHCookieUpdate.h>
#include <sun/security/ssl/CookieExtension$CookieSpec.h>
#include <sun/security/ssl/CookieExtension$CookieStringizer.h>
#include <sun/security/ssl/CookieExtension$HRRCookieConsumer.h>
#include <sun/security/ssl/CookieExtension$HRRCookieProducer.h>
#include <sun/security/ssl/CookieExtension$HRRCookieReproducer.h>
#include <sun/security/ssl/DHClientKeyExchange.h>
#include <sun/security/ssl/DHClientKeyExchange$DHClientKeyExchangeConsumer.h>
#include <sun/security/ssl/DHClientKeyExchange$DHClientKeyExchangeMessage.h>
#include <sun/security/ssl/DHClientKeyExchange$DHClientKeyExchangeProducer.h>
#include <sun/security/ssl/DHKeyExchange.h>
#include <sun/security/ssl/DHKeyExchange$DHECredentials.h>
#include <sun/security/ssl/DHKeyExchange$DHEKAGenerator.h>
#include <sun/security/ssl/DHKeyExchange$DHEPossession.h>
#include <sun/security/ssl/DHKeyExchange$DHEPossessionGenerator.h>
#include <sun/security/ssl/DHServerKeyExchange.h>
#include <sun/security/ssl/DHServerKeyExchange$DHServerKeyExchangeConsumer.h>
#include <sun/security/ssl/DHServerKeyExchange$DHServerKeyExchangeMessage.h>
#include <sun/security/ssl/DHServerKeyExchange$DHServerKeyExchangeProducer.h>
#include <sun/security/ssl/DTLSInputRecord.h>
#include <sun/security/ssl/DTLSInputRecord$DTLSReassembler.h>
#include <sun/security/ssl/DTLSInputRecord$HandshakeFlight.h>
#include <sun/security/ssl/DTLSInputRecord$HandshakeFragment.h>
#include <sun/security/ssl/DTLSInputRecord$HoleDescriptor.h>
#include <sun/security/ssl/DTLSInputRecord$RecordFragment.h>
#include <sun/security/ssl/DTLSOutputRecord.h>
#include <sun/security/ssl/DTLSOutputRecord$DTLSFragmenter.h>
#include <sun/security/ssl/DTLSOutputRecord$HandshakeMemo.h>
#include <sun/security/ssl/DTLSOutputRecord$RecordMemo.h>
#include <sun/security/ssl/DTLSRecord.h>
#include <sun/security/ssl/DummyX509KeyManager.h>
#include <sun/security/ssl/DummyX509TrustManager.h>
#include <sun/security/ssl/ECDHClientKeyExchange.h>
#include <sun/security/ssl/ECDHClientKeyExchange$ECDHClientKeyExchangeConsumer.h>
#include <sun/security/ssl/ECDHClientKeyExchange$ECDHClientKeyExchangeMessage.h>
#include <sun/security/ssl/ECDHClientKeyExchange$ECDHClientKeyExchangeProducer.h>
#include <sun/security/ssl/ECDHClientKeyExchange$ECDHEClientKeyExchangeConsumer.h>
#include <sun/security/ssl/ECDHClientKeyExchange$ECDHEClientKeyExchangeProducer.h>
#include <sun/security/ssl/ECDHKeyExchange.h>
#include <sun/security/ssl/ECDHKeyExchange$1.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHECredentials.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHEKAGenerator.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHEPossession.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHEPossessionGenerator.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHEXDHKAGenerator.h>
#include <sun/security/ssl/ECDHKeyExchange$ECDHKAGenerator.h>
#include <sun/security/ssl/ECDHServerKeyExchange.h>
#include <sun/security/ssl/ECDHServerKeyExchange$ECDHServerKeyExchangeConsumer.h>
#include <sun/security/ssl/ECDHServerKeyExchange$ECDHServerKeyExchangeMessage.h>
#include <sun/security/ssl/ECDHServerKeyExchange$ECDHServerKeyExchangeProducer.h>
#include <sun/security/ssl/ECPointFormatsExtension.h>
#include <sun/security/ssl/ECPointFormatsExtension$CHECPointFormatsConsumer.h>
#include <sun/security/ssl/ECPointFormatsExtension$CHECPointFormatsProducer.h>
#include <sun/security/ssl/ECPointFormatsExtension$ECPointFormat.h>
#include <sun/security/ssl/ECPointFormatsExtension$ECPointFormatsSpec.h>
#include <sun/security/ssl/ECPointFormatsExtension$ECPointFormatsStringizer.h>
#include <sun/security/ssl/ECPointFormatsExtension$SHECPointFormatsConsumer.h>
#include <sun/security/ssl/EncryptedExtensions.h>
#include <sun/security/ssl/EncryptedExtensions$EncryptedExtensionsConsumer.h>
#include <sun/security/ssl/EncryptedExtensions$EncryptedExtensionsMessage.h>
#include <sun/security/ssl/EncryptedExtensions$EncryptedExtensionsProducer.h>
#include <sun/security/ssl/EphemeralKeyManager.h>
#include <sun/security/ssl/EphemeralKeyManager$EphemeralKeyPair.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$CHExtendedMasterSecretAbsence.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$CHExtendedMasterSecretConsumer.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$CHExtendedMasterSecretProducer.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$ExtendedMasterSecretSpec.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$ExtendedMasterSecretStringizer.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$SHExtendedMasterSecretAbsence.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$SHExtendedMasterSecretConsumer.h>
#include <sun/security/ssl/ExtendedMasterSecretExtension$SHExtendedMasterSecretProducer.h>
#include <sun/security/ssl/Finished.h>
#include <sun/security/ssl/Finished$1.h>
#include <sun/security/ssl/Finished$FinishedMessage.h>
#include <sun/security/ssl/Finished$S30VerifyDataGenerator.h>
#include <sun/security/ssl/Finished$T10VerifyDataGenerator.h>
#include <sun/security/ssl/Finished$T12FinishedConsumer.h>
#include <sun/security/ssl/Finished$T12FinishedProducer.h>
#include <sun/security/ssl/Finished$T12VerifyDataGenerator.h>
#include <sun/security/ssl/Finished$T13FinishedConsumer.h>
#include <sun/security/ssl/Finished$T13FinishedProducer.h>
#include <sun/security/ssl/Finished$T13VerifyDataGenerator.h>
#include <sun/security/ssl/Finished$VerifyDataGenerator.h>
#include <sun/security/ssl/Finished$VerifyDataScheme.h>
#include <sun/security/ssl/HKDF.h>
#include <sun/security/ssl/HandshakeAbsence.h>
#include <sun/security/ssl/HandshakeConsumer.h>
#include <sun/security/ssl/HandshakeContext.h>
#include <sun/security/ssl/HandshakeHash.h>
#include <sun/security/ssl/HandshakeHash$CacheOnlyHash.h>
#include <sun/security/ssl/HandshakeHash$CloneableHash.h>
#include <sun/security/ssl/HandshakeHash$NonCloneableHash.h>
#include <sun/security/ssl/HandshakeHash$S30HandshakeHash.h>
#include <sun/security/ssl/HandshakeHash$T10HandshakeHash.h>
#include <sun/security/ssl/HandshakeHash$T12HandshakeHash.h>
#include <sun/security/ssl/HandshakeHash$T13HandshakeHash.h>
#include <sun/security/ssl/HandshakeHash$TranscriptHash.h>
#include <sun/security/ssl/HandshakeOutStream.h>
#include <sun/security/ssl/HandshakeProducer.h>
#include <sun/security/ssl/HelloCookieManager.h>
#include <sun/security/ssl/HelloCookieManager$Builder.h>
#include <sun/security/ssl/HelloCookieManager$D10HelloCookieManager.h>
#include <sun/security/ssl/HelloCookieManager$D13HelloCookieManager.h>
#include <sun/security/ssl/HelloCookieManager$T13HelloCookieManager.h>
#include <sun/security/ssl/HelloRequest.h>
#include <sun/security/ssl/HelloRequest$HelloRequestConsumer.h>
#include <sun/security/ssl/HelloRequest$HelloRequestKickstartProducer.h>
#include <sun/security/ssl/HelloRequest$HelloRequestMessage.h>
#include <sun/security/ssl/HelloRequest$HelloRequestProducer.h>
#include <sun/security/ssl/HelloVerifyRequest.h>
#include <sun/security/ssl/HelloVerifyRequest$HelloVerifyRequestConsumer.h>
#include <sun/security/ssl/HelloVerifyRequest$HelloVerifyRequestMessage.h>
#include <sun/security/ssl/HelloVerifyRequest$HelloVerifyRequestProducer.h>
#include <sun/security/ssl/InputRecord.h>
#include <sun/security/ssl/JsseJce.h>
#include <sun/security/ssl/JsseJce$EcAvailability.h>
#include <sun/security/ssl/KAKeyDerivation.h>
#include <sun/security/ssl/KeyManagerFactoryImpl.h>
#include <sun/security/ssl/KeyManagerFactoryImpl$SunX509.h>
#include <sun/security/ssl/KeyManagerFactoryImpl$X509.h>
#include <sun/security/ssl/KeyShareExtension.h>
#include <sun/security/ssl/KeyShareExtension$CHKeyShareConsumer.h>
#include <sun/security/ssl/KeyShareExtension$CHKeyShareOnTradeAbsence.h>
#include <sun/security/ssl/KeyShareExtension$CHKeyShareProducer.h>
#include <sun/security/ssl/KeyShareExtension$CHKeyShareSpec.h>
#include <sun/security/ssl/KeyShareExtension$CHKeyShareStringizer.h>
#include <sun/security/ssl/KeyShareExtension$HRRKeyShareConsumer.h>
#include <sun/security/ssl/KeyShareExtension$HRRKeyShareProducer.h>
#include <sun/security/ssl/KeyShareExtension$HRRKeyShareReproducer.h>
#include <sun/security/ssl/KeyShareExtension$HRRKeyShareSpec.h>
#include <sun/security/ssl/KeyShareExtension$HRRKeyShareStringizer.h>
#include <sun/security/ssl/KeyShareExtension$KeyShareEntry.h>
#include <sun/security/ssl/KeyShareExtension$SHKeyShareAbsence.h>
#include <sun/security/ssl/KeyShareExtension$SHKeyShareConsumer.h>
#include <sun/security/ssl/KeyShareExtension$SHKeyShareProducer.h>
#include <sun/security/ssl/KeyShareExtension$SHKeyShareSpec.h>
#include <sun/security/ssl/KeyShareExtension$SHKeyShareStringizer.h>
#include <sun/security/ssl/KeyUpdate.h>
#include <sun/security/ssl/KeyUpdate$KeyUpdateConsumer.h>
#include <sun/security/ssl/KeyUpdate$KeyUpdateKickstartProducer.h>
#include <sun/security/ssl/KeyUpdate$KeyUpdateMessage.h>
#include <sun/security/ssl/KeyUpdate$KeyUpdateProducer.h>
#include <sun/security/ssl/KeyUpdate$KeyUpdateRequest.h>
#include <sun/security/ssl/MaxFragExtension.h>
#include <sun/security/ssl/MaxFragExtension$CHMaxFragmentLengthConsumer.h>
#include <sun/security/ssl/MaxFragExtension$CHMaxFragmentLengthProducer.h>
#include <sun/security/ssl/MaxFragExtension$EEMaxFragmentLengthConsumer.h>
#include <sun/security/ssl/MaxFragExtension$EEMaxFragmentLengthProducer.h>
#include <sun/security/ssl/MaxFragExtension$EEMaxFragmentLengthUpdate.h>
#include <sun/security/ssl/MaxFragExtension$MaxFragLenEnum.h>
#include <sun/security/ssl/MaxFragExtension$MaxFragLenSpec.h>
#include <sun/security/ssl/MaxFragExtension$MaxFragLenStringizer.h>
#include <sun/security/ssl/MaxFragExtension$SHMaxFragmentLengthConsumer.h>
#include <sun/security/ssl/MaxFragExtension$SHMaxFragmentLengthProducer.h>
#include <sun/security/ssl/MaxFragExtension$SHMaxFragmentLengthUpdate.h>
#include <sun/security/ssl/NamedGroup.h>
#include <sun/security/ssl/NamedGroup$ECDHEScheme.h>
#include <sun/security/ssl/NamedGroup$ExceptionSupplier.h>
#include <sun/security/ssl/NamedGroup$FFDHEScheme.h>
#include <sun/security/ssl/NamedGroup$NamedGroupScheme.h>
#include <sun/security/ssl/NamedGroup$NamedGroupSpec.h>
#include <sun/security/ssl/NamedGroup$XDHScheme.h>
#include <sun/security/ssl/NamedGroupCredentials.h>
#include <sun/security/ssl/NamedGroupPossession.h>
#include <sun/security/ssl/NewSessionTicket.h>
#include <sun/security/ssl/NewSessionTicket$NewSessionTicketMessage.h>
#include <sun/security/ssl/NewSessionTicket$T12NewSessionTicketConsumer.h>
#include <sun/security/ssl/NewSessionTicket$T12NewSessionTicketMessage.h>
#include <sun/security/ssl/NewSessionTicket$T12NewSessionTicketProducer.h>
#include <sun/security/ssl/NewSessionTicket$T13NewSessionTicketConsumer.h>
#include <sun/security/ssl/NewSessionTicket$T13NewSessionTicketMessage.h>
#include <sun/security/ssl/NewSessionTicket$T13NewSessionTicketProducer.h>
#include <sun/security/ssl/OutputRecord.h>
#include <sun/security/ssl/OutputRecord$T13PaddingHolder.h>
#include <sun/security/ssl/Plaintext.h>
#include <sun/security/ssl/PostHandshakeContext.h>
#include <sun/security/ssl/PreSharedKeyExtension.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyConsumer.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyOnLoadAbsence.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyOnTradeAbsence.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyProducer.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeySpec.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyStringizer.h>
#include <sun/security/ssl/PreSharedKeyExtension$CHPreSharedKeyUpdate.h>
#include <sun/security/ssl/PreSharedKeyExtension$PartialClientHelloMessage.h>
#include <sun/security/ssl/PreSharedKeyExtension$PskIdentity.h>
#include <sun/security/ssl/PreSharedKeyExtension$SHPreSharedKeyAbsence.h>
#include <sun/security/ssl/PreSharedKeyExtension$SHPreSharedKeyConsumer.h>
#include <sun/security/ssl/PreSharedKeyExtension$SHPreSharedKeyProducer.h>
#include <sun/security/ssl/PreSharedKeyExtension$SHPreSharedKeySpec.h>
#include <sun/security/ssl/PreSharedKeyExtension$SHPreSharedKeyStringizer.h>
#include <sun/security/ssl/PredefinedDHParameterSpecs.h>
#include <sun/security/ssl/PredefinedDHParameterSpecs$1.h>
#include <sun/security/ssl/ProtocolVersion.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeMode.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesConsumer.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesOnLoadAbsence.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesOnTradeAbsence.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesProducer.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesSpec.h>
#include <sun/security/ssl/PskKeyExchangeModesExtension$PskKeyExchangeModesStringizer.h>
#include <sun/security/ssl/RSAClientKeyExchange.h>
#include <sun/security/ssl/RSAClientKeyExchange$RSAClientKeyExchangeConsumer.h>
#include <sun/security/ssl/RSAClientKeyExchange$RSAClientKeyExchangeMessage.h>
#include <sun/security/ssl/RSAClientKeyExchange$RSAClientKeyExchangeProducer.h>
#include <sun/security/ssl/RSAKeyExchange.h>
#include <sun/security/ssl/RSAKeyExchange$EphemeralRSACredentials.h>
#include <sun/security/ssl/RSAKeyExchange$EphemeralRSAPossession.h>
#include <sun/security/ssl/RSAKeyExchange$EphemeralRSAPossessionGenerator.h>
#include <sun/security/ssl/RSAKeyExchange$RSAKAGenerator.h>
#include <sun/security/ssl/RSAKeyExchange$RSAKAGenerator$RSAKAKeyDerivation.h>
#include <sun/security/ssl/RSAKeyExchange$RSAPremasterSecret.h>
#include <sun/security/ssl/RSAServerKeyExchange.h>
#include <sun/security/ssl/RSAServerKeyExchange$RSAServerKeyExchangeConsumer.h>
#include <sun/security/ssl/RSAServerKeyExchange$RSAServerKeyExchangeMessage.h>
#include <sun/security/ssl/RSAServerKeyExchange$RSAServerKeyExchangeProducer.h>
#include <sun/security/ssl/RSASignature.h>
#include <sun/security/ssl/RandomCookie.h>
#include <sun/security/ssl/Record.h>
#include <sun/security/ssl/RenegoInfoExtension.h>
#include <sun/security/ssl/RenegoInfoExtension$CHRenegotiationInfoAbsence.h>
#include <sun/security/ssl/RenegoInfoExtension$CHRenegotiationInfoConsumer.h>
#include <sun/security/ssl/RenegoInfoExtension$CHRenegotiationInfoProducer.h>
#include <sun/security/ssl/RenegoInfoExtension$RenegotiationInfoSpec.h>
#include <sun/security/ssl/RenegoInfoExtension$RenegotiationInfoStringizer.h>
#include <sun/security/ssl/RenegoInfoExtension$SHRenegotiationInfoAbsence.h>
#include <sun/security/ssl/RenegoInfoExtension$SHRenegotiationInfoConsumer.h>
#include <sun/security/ssl/RenegoInfoExtension$SHRenegotiationInfoProducer.h>
#include <sun/security/ssl/SSLAlgorithmConstraints.h>
#include <sun/security/ssl/SSLAlgorithmConstraints$SupportedSignatureAlgorithmConstraints.h>
#include <sun/security/ssl/SSLAlgorithmDecomposer.h>
#include <sun/security/ssl/SSLAlgorithmDecomposer$1.h>
#include <sun/security/ssl/SSLAuthentication.h>
#include <sun/security/ssl/SSLBasicKeyDerivation.h>
#include <sun/security/ssl/SSLBasicKeyDerivation$SecretSizeSpec.h>
#include <sun/security/ssl/SSLCipher.h>
#include <sun/security/ssl/SSLCipher$1.h>
#include <sun/security/ssl/SSLCipher$NullReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$NullReadCipherGenerator$NullReadCipher.h>
#include <sun/security/ssl/SSLCipher$NullWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$NullWriteCipherGenerator$NullWriteCipher.h>
#include <sun/security/ssl/SSLCipher$ReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$SSLReadCipher.h>
#include <sun/security/ssl/SSLCipher$SSLWriteCipher.h>
#include <sun/security/ssl/SSLCipher$StreamReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$StreamReadCipherGenerator$StreamReadCipher.h>
#include <sun/security/ssl/SSLCipher$StreamWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$StreamWriteCipherGenerator$StreamWriteCipher.h>
#include <sun/security/ssl/SSLCipher$T10BlockReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T10BlockReadCipherGenerator$BlockReadCipher.h>
#include <sun/security/ssl/SSLCipher$T10BlockWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T10BlockWriteCipherGenerator$BlockWriteCipher.h>
#include <sun/security/ssl/SSLCipher$T11BlockReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T11BlockReadCipherGenerator$BlockReadCipher.h>
#include <sun/security/ssl/SSLCipher$T11BlockWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T11BlockWriteCipherGenerator$BlockWriteCipher.h>
#include <sun/security/ssl/SSLCipher$T12CC20P1305ReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T12CC20P1305ReadCipherGenerator$CC20P1305ReadCipher.h>
#include <sun/security/ssl/SSLCipher$T12CC20P1305WriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T12CC20P1305WriteCipherGenerator$CC20P1305WriteCipher.h>
#include <sun/security/ssl/SSLCipher$T12GcmReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T12GcmReadCipherGenerator$GcmReadCipher.h>
#include <sun/security/ssl/SSLCipher$T12GcmWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T12GcmWriteCipherGenerator$GcmWriteCipher.h>
#include <sun/security/ssl/SSLCipher$T13CC20P1305ReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T13CC20P1305ReadCipherGenerator$CC20P1305ReadCipher.h>
#include <sun/security/ssl/SSLCipher$T13CC20P1305WriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T13CC20P1305WriteCipherGenerator$CC20P1305WriteCipher.h>
#include <sun/security/ssl/SSLCipher$T13GcmReadCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher.h>
#include <sun/security/ssl/SSLCipher$T13GcmWriteCipherGenerator.h>
#include <sun/security/ssl/SSLCipher$T13GcmWriteCipherGenerator$GcmWriteCipher.h>
#include <sun/security/ssl/SSLCipher$WriteCipherGenerator.h>
#include <sun/security/ssl/SSLConfiguration.h>
#include <sun/security/ssl/SSLConfiguration$1.h>
#include <sun/security/ssl/SSLConfiguration$CustomizedClientSignatureSchemes.h>
#include <sun/security/ssl/SSLConfiguration$CustomizedServerSignatureSchemes.h>
#include <sun/security/ssl/SSLConsumer.h>
#include <sun/security/ssl/SSLContextImpl.h>
#include <sun/security/ssl/SSLContextImpl$AbstractDTLSContext.h>
#include <sun/security/ssl/SSLContextImpl$AbstractTLSContext.h>
#include <sun/security/ssl/SSLContextImpl$CustomizedDTLSContext.h>
#include <sun/security/ssl/SSLContextImpl$CustomizedSSLProtocols.h>
#include <sun/security/ssl/SSLContextImpl$CustomizedTLSContext.h>
#include <sun/security/ssl/SSLContextImpl$DTLS10Context.h>
#include <sun/security/ssl/SSLContextImpl$DTLS12Context.h>
#include <sun/security/ssl/SSLContextImpl$DTLSContext.h>
#include <sun/security/ssl/SSLContextImpl$DefaultManagersHolder.h>
#include <sun/security/ssl/SSLContextImpl$DefaultManagersHolder$1.h>
#include <sun/security/ssl/SSLContextImpl$DefaultManagersHolder$2.h>
#include <sun/security/ssl/SSLContextImpl$DefaultSSLContext.h>
#include <sun/security/ssl/SSLContextImpl$DefaultSSLContextHolder.h>
#include <sun/security/ssl/SSLContextImpl$TLS10Context.h>
#include <sun/security/ssl/SSLContextImpl$TLS11Context.h>
#include <sun/security/ssl/SSLContextImpl$TLS12Context.h>
#include <sun/security/ssl/SSLContextImpl$TLS13Context.h>
#include <sun/security/ssl/SSLContextImpl$TLSContext.h>
#include <sun/security/ssl/SSLCredentials.h>
#include <sun/security/ssl/SSLEngineImpl.h>
#include <sun/security/ssl/SSLEngineImpl$DelegatedTask.h>
#include <sun/security/ssl/SSLEngineImpl$DelegatedTask$DelegatedAction.h>
#include <sun/security/ssl/SSLEngineInputRecord.h>
#include <sun/security/ssl/SSLEngineOutputRecord.h>
#include <sun/security/ssl/SSLEngineOutputRecord$HandshakeFragment.h>
#include <sun/security/ssl/SSLEngineOutputRecord$HandshakeMemo.h>
#include <sun/security/ssl/SSLEngineOutputRecord$RecordMemo.h>
#include <sun/security/ssl/SSLExtension.h>
#include <sun/security/ssl/SSLExtension$ClientExtensions.h>
#include <sun/security/ssl/SSLExtension$ExtensionConsumer.h>
#include <sun/security/ssl/SSLExtension$SSLExtensionSpec.h>
#include <sun/security/ssl/SSLExtension$ServerExtensions.h>
#include <sun/security/ssl/SSLExtensions.h>
#include <sun/security/ssl/SSLHandshake.h>
#include <sun/security/ssl/SSLHandshake$HandshakeMessage.h>
#include <sun/security/ssl/SSLHandshakeBinding.h>
#include <sun/security/ssl/SSLKeyAgreement.h>
#include <sun/security/ssl/SSLKeyAgreementGenerator.h>
#include <sun/security/ssl/SSLKeyDerivation.h>
#include <sun/security/ssl/SSLKeyDerivationGenerator.h>
#include <sun/security/ssl/SSLKeyExchange.h>
#include <sun/security/ssl/SSLKeyExchange$1.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHANON.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHANONExport.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHEDSS.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHEDSSExport.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHERSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHERSAExport.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExDHERSAOrPSS.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHANON.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHECDSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHEECDSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHERSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHERSAOrPSS.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExECDHRSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExRSA.h>
#include <sun/security/ssl/SSLKeyExchange$SSLKeyExRSAExport.h>
#include <sun/security/ssl/SSLKeyExchange$T12KeyAgreement.h>
#include <sun/security/ssl/SSLKeyExchange$T13KeyAgreement.h>
#include <sun/security/ssl/SSLLogger.h>
#include <sun/security/ssl/SSLLogger$SSLConsoleLogger.h>
#include <sun/security/ssl/SSLLogger$SSLSimpleFormatter.h>
#include <sun/security/ssl/SSLMasterKeyDerivation.h>
#include <sun/security/ssl/SSLMasterKeyDerivation$1.h>
#include <sun/security/ssl/SSLMasterKeyDerivation$LegacyMasterKeyDerivation.h>
#include <sun/security/ssl/SSLPossession.h>
#include <sun/security/ssl/SSLPossessionGenerator.h>
#include <sun/security/ssl/SSLProducer.h>
#include <sun/security/ssl/SSLRecord.h>
#include <sun/security/ssl/SSLSecretDerivation.h>
#include <sun/security/ssl/SSLSecretDerivation$SecretSchedule.h>
#include <sun/security/ssl/SSLServerSocketFactoryImpl.h>
#include <sun/security/ssl/SSLServerSocketImpl.h>
#include <sun/security/ssl/SSLSessionContextImpl.h>
#include <sun/security/ssl/SSLSessionContextImpl$SessionCacheVisitor.h>
#include <sun/security/ssl/SSLSessionImpl.h>
#include <sun/security/ssl/SSLSocketFactoryImpl.h>
#include <sun/security/ssl/SSLSocketImpl.h>
#include <sun/security/ssl/SSLSocketImpl$AppInputStream.h>
#include <sun/security/ssl/SSLSocketImpl$AppOutputStream.h>
#include <sun/security/ssl/SSLSocketInputRecord.h>
#include <sun/security/ssl/SSLSocketOutputRecord.h>
#include <sun/security/ssl/SSLStringizer.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$1.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$KeySchedule.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$LegacyTrafficKeyDerivation.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$S30TrafficKeyDerivationGenerator.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$T10TrafficKeyDerivationGenerator.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$T12TrafficKeyDerivationGenerator.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$T13TrafficKeyDerivation.h>
#include <sun/security/ssl/SSLTrafficKeyDerivation$T13TrafficKeyDerivationGenerator.h>
#include <sun/security/ssl/SSLTransport.h>
#include <sun/security/ssl/SecureKey.h>
#include <sun/security/ssl/ServerHandshakeContext.h>
#include <sun/security/ssl/ServerHello.h>
#include <sun/security/ssl/ServerHello$ServerHelloConsumer.h>
#include <sun/security/ssl/ServerHello$ServerHelloMessage.h>
#include <sun/security/ssl/ServerHello$T12ServerHelloConsumer.h>
#include <sun/security/ssl/ServerHello$T12ServerHelloProducer.h>
#include <sun/security/ssl/ServerHello$T12ServerHelloProducer$KeyExchangeProperties.h>
#include <sun/security/ssl/ServerHello$T13HelloRetryRequestConsumer.h>
#include <sun/security/ssl/ServerHello$T13HelloRetryRequestProducer.h>
#include <sun/security/ssl/ServerHello$T13HelloRetryRequestReproducer.h>
#include <sun/security/ssl/ServerHello$T13ServerHelloConsumer.h>
#include <sun/security/ssl/ServerHello$T13ServerHelloProducer.h>
#include <sun/security/ssl/ServerHelloDone.h>
#include <sun/security/ssl/ServerHelloDone$ServerHelloDoneConsumer.h>
#include <sun/security/ssl/ServerHelloDone$ServerHelloDoneMessage.h>
#include <sun/security/ssl/ServerHelloDone$ServerHelloDoneProducer.h>
#include <sun/security/ssl/ServerKeyExchange.h>
#include <sun/security/ssl/ServerKeyExchange$ServerKeyExchangeConsumer.h>
#include <sun/security/ssl/ServerKeyExchange$ServerKeyExchangeProducer.h>
#include <sun/security/ssl/ServerNameExtension.h>
#include <sun/security/ssl/ServerNameExtension$CHServerNameConsumer.h>
#include <sun/security/ssl/ServerNameExtension$CHServerNameProducer.h>
#include <sun/security/ssl/ServerNameExtension$CHServerNamesSpec.h>
#include <sun/security/ssl/ServerNameExtension$CHServerNamesSpec$UnknownServerName.h>
#include <sun/security/ssl/ServerNameExtension$CHServerNamesStringizer.h>
#include <sun/security/ssl/ServerNameExtension$EEServerNameConsumer.h>
#include <sun/security/ssl/ServerNameExtension$EEServerNameProducer.h>
#include <sun/security/ssl/ServerNameExtension$SHServerNameConsumer.h>
#include <sun/security/ssl/ServerNameExtension$SHServerNameProducer.h>
#include <sun/security/ssl/ServerNameExtension$SHServerNamesSpec.h>
#include <sun/security/ssl/ServerNameExtension$SHServerNamesStringizer.h>
#include <sun/security/ssl/SessionId.h>
#include <sun/security/ssl/SessionTicketExtension.h>
#include <sun/security/ssl/SessionTicketExtension$KeyState.h>
#include <sun/security/ssl/SessionTicketExtension$SessionTicketSpec.h>
#include <sun/security/ssl/SessionTicketExtension$SessionTicketStringizer.h>
#include <sun/security/ssl/SessionTicketExtension$StatelessKey.h>
#include <sun/security/ssl/SessionTicketExtension$T12CHSessionTicketConsumer.h>
#include <sun/security/ssl/SessionTicketExtension$T12CHSessionTicketProducer.h>
#include <sun/security/ssl/SessionTicketExtension$T12SHSessionTicketConsumer.h>
#include <sun/security/ssl/SessionTicketExtension$T12SHSessionTicketProducer.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CHSignatureSchemesConsumer.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CHSignatureSchemesOnLoadAbsence.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CHSignatureSchemesOnTradeAbsence.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CHSignatureSchemesProducer.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CHSignatureSchemesUpdate.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CRSignatureSchemesAbsence.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CRSignatureSchemesConsumer.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CRSignatureSchemesProducer.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$CRSignatureSchemesUpdate.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$SignatureSchemesSpec.h>
#include <sun/security/ssl/SignatureAlgorithmsExtension$SignatureSchemesStringizer.h>
#include <sun/security/ssl/SignatureScheme.h>
#include <sun/security/ssl/SignatureScheme$SigAlgParamSpec.h>
#include <sun/security/ssl/StatusResponseManager.h>
#include <sun/security/ssl/StatusResponseManager$1.h>
#include <sun/security/ssl/StatusResponseManager$OCSPFetchCall.h>
#include <sun/security/ssl/StatusResponseManager$ResponseCacheEntry.h>
#include <sun/security/ssl/StatusResponseManager$StaplingParameters.h>
#include <sun/security/ssl/StatusResponseManager$StatusInfo.h>
#include <sun/security/ssl/SunJSSE.h>
#include <sun/security/ssl/SunX509KeyManagerImpl.h>
#include <sun/security/ssl/SunX509KeyManagerImpl$X509Credentials.h>
#include <sun/security/ssl/SupportedGroupsExtension.h>
#include <sun/security/ssl/SupportedGroupsExtension$CHSupportedGroupsConsumer.h>
#include <sun/security/ssl/SupportedGroupsExtension$CHSupportedGroupsOnTradeAbsence.h>
#include <sun/security/ssl/SupportedGroupsExtension$CHSupportedGroupsProducer.h>
#include <sun/security/ssl/SupportedGroupsExtension$EESupportedGroupsConsumer.h>
#include <sun/security/ssl/SupportedGroupsExtension$EESupportedGroupsProducer.h>
#include <sun/security/ssl/SupportedGroupsExtension$SupportedGroups.h>
#include <sun/security/ssl/SupportedGroupsExtension$SupportedGroupsSpec.h>
#include <sun/security/ssl/SupportedGroupsExtension$SupportedGroupsStringizer.h>
#include <sun/security/ssl/SupportedVersionsExtension.h>
#include <sun/security/ssl/SupportedVersionsExtension$CHSupportedVersionsConsumer.h>
#include <sun/security/ssl/SupportedVersionsExtension$CHSupportedVersionsProducer.h>
#include <sun/security/ssl/SupportedVersionsExtension$CHSupportedVersionsSpec.h>
#include <sun/security/ssl/SupportedVersionsExtension$CHSupportedVersionsStringizer.h>
#include <sun/security/ssl/SupportedVersionsExtension$HRRSupportedVersionsConsumer.h>
#include <sun/security/ssl/SupportedVersionsExtension$HRRSupportedVersionsProducer.h>
#include <sun/security/ssl/SupportedVersionsExtension$HRRSupportedVersionsReproducer.h>
#include <sun/security/ssl/SupportedVersionsExtension$SHSupportedVersionsConsumer.h>
#include <sun/security/ssl/SupportedVersionsExtension$SHSupportedVersionsProducer.h>
#include <sun/security/ssl/SupportedVersionsExtension$SHSupportedVersionsSpec.h>
#include <sun/security/ssl/SupportedVersionsExtension$SHSupportedVersionsStringizer.h>
#include <sun/security/ssl/TransportContext.h>
#include <sun/security/ssl/TransportContext$1.h>
#include <sun/security/ssl/TransportContext$NotifyHandshake.h>
#include <sun/security/ssl/TransportContext$NotifyHandshake$1.h>
#include <sun/security/ssl/TrustManagerFactoryImpl.h>
#include <sun/security/ssl/TrustManagerFactoryImpl$1.h>
#include <sun/security/ssl/TrustManagerFactoryImpl$PKIXFactory.h>
#include <sun/security/ssl/TrustManagerFactoryImpl$SimpleFactory.h>
#include <sun/security/ssl/TrustStoreManager.h>
#include <sun/security/ssl/TrustStoreManager$TrustAnchorManager.h>
#include <sun/security/ssl/TrustStoreManager$TrustStoreDescriptor.h>
#include <sun/security/ssl/TrustStoreManager$TrustStoreDescriptor$1.h>
#include <sun/security/ssl/Utilities.h>
#include <sun/security/ssl/X509Authentication.h>
#include <sun/security/ssl/X509Authentication$X509Credentials.h>
#include <sun/security/ssl/X509Authentication$X509Possession.h>
#include <sun/security/ssl/X509Authentication$X509PossessionGenerator.h>
#include <sun/security/ssl/X509KeyManagerImpl.h>
#include <sun/security/ssl/X509KeyManagerImpl$CheckResult.h>
#include <sun/security/ssl/X509KeyManagerImpl$CheckType.h>
#include <sun/security/ssl/X509KeyManagerImpl$EntryStatus.h>
#include <sun/security/ssl/X509KeyManagerImpl$KeyType.h>
#include <sun/security/ssl/X509KeyManagerImpl$SizedMap.h>
#include <sun/security/ssl/X509TrustManagerImpl.h>
#include <sun/security/ssl/XDHKeyExchange.h>
#include <sun/security/ssl/XDHKeyExchange$1.h>
#include <sun/security/ssl/XDHKeyExchange$XDHECredentials.h>
#include <sun/security/ssl/XDHKeyExchange$XDHEKAGenerator.h>
#include <sun/security/ssl/XDHKeyExchange$XDHEPossession.h>
#include <sun/security/timestamp/HttpTimestamper.h>
#include <sun/security/timestamp/TSRequest.h>
#include <sun/security/timestamp/TSResponse.h>
#include <sun/security/timestamp/TSResponse$TimestampException.h>
#include <sun/security/timestamp/TimestampToken.h>
#include <sun/security/timestamp/Timestamper.h>
#include <sun/security/tools/KeyStoreUtil.h>
#include <sun/security/tools/PathList.h>
#include <sun/security/tools/keytool/CertAndKeyGen.h>
#include <sun/security/tools/keytool/Main.h>
#include <sun/security/tools/keytool/Main$Command.h>
#include <sun/security/tools/keytool/Main$Option.h>
#include <sun/security/tools/keytool/Pair.h>
#include <sun/security/tools/keytool/Resources.h>
#include <sun/security/tools/keytool/Resources_ja.h>
#include <sun/security/tools/keytool/Resources_zh_CN.h>
#include <sun/security/tools/keytool/ShowInfo.h>
#include <sun/security/util/AbstractAlgorithmConstraints.h>
#include <sun/security/util/AbstractAlgorithmConstraints$1.h>
#include <sun/security/util/AlgorithmDecomposer.h>
#include <sun/security/util/AnchorCertificates.h>
#include <sun/security/util/AnchorCertificates$1.h>
#include <sun/security/util/ArrayUtil.h>
#include <sun/security/util/AuthResources.h>
#include <sun/security/util/AuthResources_ja.h>
#include <sun/security/util/AuthResources_zh_CN.h>
#include <sun/security/util/BitArray.h>
#include <sun/security/util/ByteArrayLexOrder.h>
#include <sun/security/util/ByteArrayTagOrder.h>
#include <sun/security/util/Cache.h>
#include <sun/security/util/Cache$CacheVisitor.h>
#include <sun/security/util/Cache$EqualByteArray.h>
#include <sun/security/util/ConsoleCallbackHandler.h>
#include <sun/security/util/ConsoleCallbackHandler$1OptionInfo.h>
#include <sun/security/util/ConstraintsParameters.h>
#include <sun/security/util/CurveDB.h>
#include <sun/security/util/Debug.h>
#include <sun/security/util/DerEncoder.h>
#include <sun/security/util/DerIndefLenConverter.h>
#include <sun/security/util/DerInputStream.h>
#include <sun/security/util/DerOutputStream.h>
#include <sun/security/util/DerValue.h>
#include <sun/security/util/DisabledAlgorithmConstraints.h>
#include <sun/security/util/DisabledAlgorithmConstraints$1.h>
#include <sun/security/util/DisabledAlgorithmConstraints$CertPathHolder.h>
#include <sun/security/util/DisabledAlgorithmConstraints$Constraint.h>
#include <sun/security/util/DisabledAlgorithmConstraints$Constraint$Operator.h>
#include <sun/security/util/DisabledAlgorithmConstraints$Constraints.h>
#include <sun/security/util/DisabledAlgorithmConstraints$Constraints$Holder.h>
#include <sun/security/util/DisabledAlgorithmConstraints$DenyAfterConstraint.h>
#include <sun/security/util/DisabledAlgorithmConstraints$DisabledConstraint.h>
#include <sun/security/util/DisabledAlgorithmConstraints$JarHolder.h>
#include <sun/security/util/DisabledAlgorithmConstraints$KeySizeConstraint.h>
#include <sun/security/util/DisabledAlgorithmConstraints$UsageConstraint.h>
#include <sun/security/util/DisabledAlgorithmConstraints$jdkCAConstraint.h>
#include <sun/security/util/DomainName.h>
#include <sun/security/util/DomainName$1.h>
#include <sun/security/util/DomainName$CommonMatch.h>
#include <sun/security/util/DomainName$Match.h>
#include <sun/security/util/DomainName$OtherMatch.h>
#include <sun/security/util/DomainName$OtherRule.h>
#include <sun/security/util/DomainName$RegisteredDomainImpl.h>
#include <sun/security/util/DomainName$Rule.h>
#include <sun/security/util/DomainName$Rule$Type.h>
#include <sun/security/util/DomainName$Rules.h>
#include <sun/security/util/DomainName$Rules$1.h>
#include <sun/security/util/DomainName$Rules$RuleSet.h>
#include <sun/security/util/ECKeySizeParameterSpec.h>
#include <sun/security/util/ECParameters.h>
#include <sun/security/util/ECUtil.h>
#include <sun/security/util/Event.h>
#include <sun/security/util/Event$Reporter.h>
#include <sun/security/util/Event$ReporterCategory.h>
#include <sun/security/util/FilePaths.h>
#include <sun/security/util/FilePermCompat.h>
#include <sun/security/util/GCMParameters.h>
#include <sun/security/util/HexDumpEncoder.h>
#include <sun/security/util/HostnameChecker.h>
#include <sun/security/util/IOUtils.h>
#include <sun/security/util/JarConstraintsParameters.h>
#include <sun/security/util/KeyStoreDelegator.h>
#include <sun/security/util/KeyUtil.h>
#include <sun/security/util/KnownOIDs.h>
#include <sun/security/util/KnownOIDs$1.h>
#include <sun/security/util/KnownOIDs$10.h>
#include <sun/security/util/KnownOIDs$2.h>
#include <sun/security/util/KnownOIDs$3.h>
#include <sun/security/util/KnownOIDs$4.h>
#include <sun/security/util/KnownOIDs$5.h>
#include <sun/security/util/KnownOIDs$6.h>
#include <sun/security/util/KnownOIDs$7.h>
#include <sun/security/util/KnownOIDs$8.h>
#include <sun/security/util/KnownOIDs$9.h>
#include <sun/security/util/LazyCodeSourcePermissionCollection.h>
#include <sun/security/util/LegacyAlgorithmConstraints.h>
#include <sun/security/util/Length.h>
#include <sun/security/util/LocalizedMessage.h>
#include <sun/security/util/ManifestDigester.h>
#include <sun/security/util/ManifestDigester$Entry.h>
#include <sun/security/util/ManifestDigester$Position.h>
#include <sun/security/util/ManifestDigester$Section.h>
#include <sun/security/util/ManifestEntryVerifier.h>
#include <sun/security/util/ManifestEntryVerifier$SunProviderHolder.h>
#include <sun/security/util/MemoryCache.h>
#include <sun/security/util/MemoryCache$CacheEntry.h>
#include <sun/security/util/MemoryCache$HardCacheEntry.h>
#include <sun/security/util/MemoryCache$SoftCacheEntry.h>
#include <sun/security/util/MessageDigestSpi2.h>
#include <sun/security/util/NamedCurve.h>
#include <sun/security/util/NullCache.h>
#include <sun/security/util/ObjectIdentifier.h>
#include <sun/security/util/ObjectIdentifier$HugeOidNotSupportedByOldJDK.h>
#include <sun/security/util/Password.h>
#include <sun/security/util/Pem.h>
#include <sun/security/util/PendingException.h>
#include <sun/security/util/PermissionFactory.h>
#include <sun/security/util/PolicyUtil.h>
#include <sun/security/util/PropertyExpander.h>
#include <sun/security/util/PropertyExpander$ExpandException.h>
#include <sun/security/util/RegisteredDomain.h>
#include <sun/security/util/RegisteredDomain$Type.h>
#include <sun/security/util/Resources.h>
#include <sun/security/util/ResourcesMgr.h>
#include <sun/security/util/Resources_ja.h>
#include <sun/security/util/Resources_zh_CN.h>
#include <sun/security/util/SecurityConstants.h>
#include <sun/security/util/SecurityProperties.h>
#include <sun/security/util/SecurityProviderConstants.h>
#include <sun/security/util/SignatureFileVerifier.h>
#include <sun/security/util/SignatureUtil.h>
#include <sun/security/util/SignatureUtil$EdDSADigestAlgHolder.h>
#include <sun/security/util/SignatureUtil$PSSParamsHolder.h>
#include <sun/security/util/UntrustedCertificates.h>
#include <sun/security/util/UntrustedCertificates$1.h>
#include <sun/security/util/math/ImmutableIntegerModuloP.h>
#include <sun/security/util/math/IntegerFieldModuloP.h>
#include <sun/security/util/math/IntegerModuloP.h>
#include <sun/security/util/math/MutableIntegerModuloP.h>
#include <sun/security/util/math/SmallValue.h>
#include <sun/security/util/math/intpoly/Curve25519OrderField.h>
#include <sun/security/util/math/intpoly/Curve448OrderField.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial$Element.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial$Limb.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial$MutableElement.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial1305.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial25519.h>
#include <sun/security/util/math/intpoly/IntegerPolynomial448.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialModBinP.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialModBinP$Curve25519OrderField.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialModBinP$Curve448OrderField.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialP256.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialP384.h>
#include <sun/security/util/math/intpoly/IntegerPolynomialP521.h>
#include <sun/security/util/math/intpoly/P256OrderField.h>
#include <sun/security/util/math/intpoly/P384OrderField.h>
#include <sun/security/util/math/intpoly/P521OrderField.h>
#include <sun/security/validator/CADistrustPolicy.h>
#include <sun/security/validator/CADistrustPolicy$1.h>
#include <sun/security/validator/CADistrustPolicy$2.h>
#include <sun/security/validator/EndEntityChecker.h>
#include <sun/security/validator/PKIXValidator.h>
#include <sun/security/validator/SimpleValidator.h>
#include <sun/security/validator/SymantecTLSPolicy.h>
#include <sun/security/validator/TrustStoreUtil.h>
#include <sun/security/validator/Validator.h>
#include <sun/security/validator/ValidatorException.h>
#include <sun/security/x509/AVA.h>
#include <sun/security/x509/AVAComparator.h>
#include <sun/security/x509/AVAKeyword.h>
#include <sun/security/x509/AccessDescription.h>
#include <sun/security/x509/AlgIdDSA.h>
#include <sun/security/x509/AlgorithmId.h>
#include <sun/security/x509/AttributeNameEnumeration.h>
#include <sun/security/x509/AuthorityInfoAccessExtension.h>
#include <sun/security/x509/AuthorityKeyIdentifierExtension.h>
#include <sun/security/x509/BasicConstraintsExtension.h>
#include <sun/security/x509/CRLDistributionPointsExtension.h>
#include <sun/security/x509/CRLExtensions.h>
#include <sun/security/x509/CRLNumberExtension.h>
#include <sun/security/x509/CRLReasonCodeExtension.h>
#include <sun/security/x509/CertAttrSet.h>
#include <sun/security/x509/CertException.h>
#include <sun/security/x509/CertParseError.h>
#include <sun/security/x509/CertificateAlgorithmId.h>
#include <sun/security/x509/CertificateExtensions.h>
#include <sun/security/x509/CertificateIssuerExtension.h>
#include <sun/security/x509/CertificateIssuerName.h>
#include <sun/security/x509/CertificatePoliciesExtension.h>
#include <sun/security/x509/CertificatePolicyId.h>
#include <sun/security/x509/CertificatePolicyMap.h>
#include <sun/security/x509/CertificatePolicySet.h>
#include <sun/security/x509/CertificateSerialNumber.h>
#include <sun/security/x509/CertificateSubjectName.h>
#include <sun/security/x509/CertificateValidity.h>
#include <sun/security/x509/CertificateVersion.h>
#include <sun/security/x509/CertificateX509Key.h>
#include <sun/security/x509/DNSName.h>
#include <sun/security/x509/DeltaCRLIndicatorExtension.h>
#include <sun/security/x509/DistributionPoint.h>
#include <sun/security/x509/DistributionPointName.h>
#include <sun/security/x509/EDIPartyName.h>
#include <sun/security/x509/ExtendedKeyUsageExtension.h>
#include <sun/security/x509/Extension.h>
#include <sun/security/x509/FreshestCRLExtension.h>
#include <sun/security/x509/GeneralName.h>
#include <sun/security/x509/GeneralNameInterface.h>
#include <sun/security/x509/GeneralNames.h>
#include <sun/security/x509/GeneralSubtree.h>
#include <sun/security/x509/GeneralSubtrees.h>
#include <sun/security/x509/IPAddressName.h>
#include <sun/security/x509/InhibitAnyPolicyExtension.h>
#include <sun/security/x509/InvalidityDateExtension.h>
#include <sun/security/x509/IssuerAlternativeNameExtension.h>
#include <sun/security/x509/IssuingDistributionPointExtension.h>
#include <sun/security/x509/KeyIdentifier.h>
#include <sun/security/x509/KeyUsageExtension.h>
#include <sun/security/x509/NameConstraintsExtension.h>
#include <sun/security/x509/NetscapeCertTypeExtension.h>
#include <sun/security/x509/NetscapeCertTypeExtension$MapEntry.h>
#include <sun/security/x509/OCSPNoCheckExtension.h>
#include <sun/security/x509/OIDMap.h>
#include <sun/security/x509/OIDMap$OIDInfo.h>
#include <sun/security/x509/OIDName.h>
#include <sun/security/x509/OtherName.h>
#include <sun/security/x509/PKIXExtensions.h>
#include <sun/security/x509/PolicyConstraintsExtension.h>
#include <sun/security/x509/PolicyInformation.h>
#include <sun/security/x509/PolicyMappingsExtension.h>
#include <sun/security/x509/PrivateKeyUsageExtension.h>
#include <sun/security/x509/RDN.h>
#include <sun/security/x509/RFC822Name.h>
#include <sun/security/x509/ReasonFlags.h>
#include <sun/security/x509/SerialNumber.h>
#include <sun/security/x509/SubjectAlternativeNameExtension.h>
#include <sun/security/x509/SubjectInfoAccessExtension.h>
#include <sun/security/x509/SubjectKeyIdentifierExtension.h>
#include <sun/security/x509/URIName.h>
#include <sun/security/x509/UniqueIdentity.h>
#include <sun/security/x509/UnparseableExtension.h>
#include <sun/security/x509/X400Address.h>
#include <sun/security/x509/X500Name.h>
#include <sun/security/x509/X500Name$1.h>
#include <sun/security/x509/X509AttributeName.h>
#include <sun/security/x509/X509CRLEntryImpl.h>
#include <sun/security/x509/X509CRLImpl.h>
#include <sun/security/x509/X509CRLImpl$X509IssuerSerial.h>
#include <sun/security/x509/X509CertImpl.h>
#include <sun/security/x509/X509CertInfo.h>
#include <sun/security/x509/X509Key.h>
#include <sun/text/BreakDictionary.h>
#include <sun/text/CollatorUtilities.h>
#include <sun/text/CompactByteArray.h>
#include <sun/text/ComposedCharIter.h>
#include <sun/text/DictionaryBasedBreakIterator.h>
#include <sun/text/IntHashtable.h>
#include <sun/text/Normalizer.h>
#include <sun/text/RuleBasedBreakIterator.h>
#include <sun/text/RuleBasedBreakIterator$SafeCharIterator.h>
#include <sun/text/SupplementaryCharacterData.h>
#include <sun/text/UCompactIntArray.h>
#include <sun/text/resources/BreakIteratorInfo.h>
#include <sun/text/resources/BreakIteratorInfoProvider.h>
#include <sun/text/resources/BreakIteratorResources.h>
#include <sun/text/resources/BreakIteratorRules.h>
#include <sun/text/resources/CollationData.h>
#include <sun/text/resources/CollationDataProvider.h>
#include <sun/text/resources/FormatData.h>
#include <sun/text/resources/FormatDataProvider.h>
#include <sun/text/resources/FormatData_en.h>
#include <sun/text/resources/FormatData_en_US.h>
#include <sun/text/resources/JavaTimeSupplementary.h>
#include <sun/text/resources/JavaTimeSupplementaryProvider.h>
#include <sun/text/resources/JavaTimeSupplementary_en.h>
#include <sun/text/resources/cldr/FormatData.h>
#include <sun/text/resources/cldr/FormatDataProvider.h>
#include <sun/text/resources/cldr/FormatData_en.h>
#include <sun/text/resources/cldr/FormatData_en_US_POSIX.h>
#include <sun/text/spi/JavaTimeDateTimePatternProvider.h>
#include <sun/util/BuddhistCalendar.h>
#include <sun/util/PreHashedMap.h>
#include <sun/util/PreHashedMap$1.h>
#include <sun/util/PreHashedMap$1$1.h>
#include <sun/util/PreHashedMap$2.h>
#include <sun/util/PreHashedMap$2$1.h>
#include <sun/util/PreHashedMap$2$1$1.h>
#include <sun/util/PropertyResourceBundleCharset.h>
#include <sun/util/PropertyResourceBundleCharset$PropertiesFileDecoder.h>
#include <sun/util/ResourceBundleEnumeration.h>
#include <sun/util/calendar/AbstractCalendar.h>
#include <sun/util/calendar/BaseCalendar.h>
#include <sun/util/calendar/BaseCalendar$Date.h>
#include <sun/util/calendar/CalendarDate.h>
#include <sun/util/calendar/CalendarSystem.h>
#include <sun/util/calendar/CalendarUtils.h>
#include <sun/util/calendar/Era.h>
#include <sun/util/calendar/Gregorian.h>
#include <sun/util/calendar/Gregorian$Date.h>
#include <sun/util/calendar/ImmutableGregorianDate.h>
#include <sun/util/calendar/JulianCalendar.h>
#include <sun/util/calendar/JulianCalendar$Date.h>
#include <sun/util/calendar/LocalGregorianCalendar.h>
#include <sun/util/calendar/LocalGregorianCalendar$Date.h>
#include <sun/util/calendar/ZoneInfo.h>
#include <sun/util/calendar/ZoneInfoFile.h>
#include <sun/util/calendar/ZoneInfoFile$1.h>
#include <sun/util/calendar/ZoneInfoFile$Checksum.h>
#include <sun/util/calendar/ZoneInfoFile$ZoneOffsetTransitionRule.h>
#include <sun/util/cldr/CLDRBaseLocaleDataMetaInfo.h>
#include <sun/util/cldr/CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder.h>
#include <sun/util/cldr/CLDRCalendarDataProviderImpl.h>
#include <sun/util/cldr/CLDRCalendarNameProviderImpl.h>
#include <sun/util/cldr/CLDRLocaleProviderAdapter.h>
#include <sun/util/cldr/CLDRTimeZoneNameProviderImpl.h>
#include <sun/util/cldr/CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS.h>
#include <sun/util/locale/BaseLocale.h>
#include <sun/util/locale/BaseLocale$Cache.h>
#include <sun/util/locale/BaseLocale$Key.h>
#include <sun/util/locale/Extension.h>
#include <sun/util/locale/InternalLocaleBuilder.h>
#include <sun/util/locale/InternalLocaleBuilder$CaseInsensitiveChar.h>
#include <sun/util/locale/InternalLocaleBuilder$CaseInsensitiveString.h>
#include <sun/util/locale/LanguageTag.h>
#include <sun/util/locale/LocaleEquivalentMaps.h>
#include <sun/util/locale/LocaleExtensions.h>
#include <sun/util/locale/LocaleMatcher.h>
#include <sun/util/locale/LocaleObjectCache.h>
#include <sun/util/locale/LocaleObjectCache$CacheEntry.h>
#include <sun/util/locale/LocaleSyntaxException.h>
#include <sun/util/locale/LocaleUtils.h>
#include <sun/util/locale/ParseStatus.h>
#include <sun/util/locale/StringTokenIterator.h>
#include <sun/util/locale/UnicodeLocaleExtension.h>
#include <sun/util/locale/provider/AuxLocaleProviderAdapter.h>
#include <sun/util/locale/provider/AuxLocaleProviderAdapter$NullProvider.h>
#include <sun/util/locale/provider/AvailableLanguageTags.h>
#include <sun/util/locale/provider/BaseLocaleDataMetaInfo.h>
#include <sun/util/locale/provider/BreakIteratorProviderImpl.h>
#include <sun/util/locale/provider/CalendarDataProviderImpl.h>
#include <sun/util/locale/provider/CalendarDataUtility.h>
#include <sun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNameGetter.h>
#include <sun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNamesMapGetter.h>
#include <sun/util/locale/provider/CalendarDataUtility$CalendarWeekParameterGetter.h>
#include <sun/util/locale/provider/CalendarNameProviderImpl.h>
#include <sun/util/locale/provider/CalendarNameProviderImpl$LengthBasedComparator.h>
#include <sun/util/locale/provider/CalendarProviderImpl.h>
#include <sun/util/locale/provider/CollationRules.h>
#include <sun/util/locale/provider/CollatorProviderImpl.h>
#include <sun/util/locale/provider/CurrencyNameProviderImpl.h>
#include <sun/util/locale/provider/DateFormatProviderImpl.h>
#include <sun/util/locale/provider/DateFormatSymbolsProviderImpl.h>
#include <sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.h>
#include <sun/util/locale/provider/FallbackLocaleProviderAdapter.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapter.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$1.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$10.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$11.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$2.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$3.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$4.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$5.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$6.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$7.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$8.h>
#include <sun/util/locale/provider/HostLocaleProviderAdapterImpl$9.h>
#include <sun/util/locale/provider/JRELocaleConstants.h>
#include <sun/util/locale/provider/JRELocaleProviderAdapter.h>
#include <sun/util/locale/provider/JRELocaleProviderAdapter$AvailableJRELocales.h>
#include <sun/util/locale/provider/JavaTimeDateTimePatternImpl.h>
#include <sun/util/locale/provider/LocaleDataMetaInfo.h>
#include <sun/util/locale/provider/LocaleNameProviderImpl.h>
#include <sun/util/locale/provider/LocaleProviderAdapter.h>
#include <sun/util/locale/provider/LocaleProviderAdapter$1.h>
#include <sun/util/locale/provider/LocaleProviderAdapter$Type.h>
#include <sun/util/locale/provider/LocaleResources.h>
#include <sun/util/locale/provider/LocaleResources$ResourceReference.h>
#include <sun/util/locale/provider/LocaleServiceProviderPool.h>
#include <sun/util/locale/provider/LocaleServiceProviderPool$AllAvailableLocales.h>
#include <sun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter.h>
#include <sun/util/locale/provider/NumberFormatProviderImpl.h>
#include <sun/util/locale/provider/ResourceBundleBasedAdapter.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$1.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$BreakIteratorProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$CalendarDataProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$CalendarNameProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$CollatorProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$CurrencyNameProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$DateFormatProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$Delegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$LocaleNameProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$NumberFormatProviderDelegate.h>
#include <sun/util/locale/provider/SPILocaleProviderAdapter$TimeZoneNameProviderDelegate.h>
#include <sun/util/locale/provider/TimeZoneNameProviderImpl.h>
#include <sun/util/locale/provider/TimeZoneNameUtility.h>
#include <sun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter.h>
#include <sun/util/logging/PlatformLogger.h>
#include <sun/util/logging/PlatformLogger$Bridge.h>
#include <sun/util/logging/PlatformLogger$ConfigurableBridge.h>
#include <sun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration.h>
#include <sun/util/logging/PlatformLogger$Level.h>
#include <sun/util/resources/BreakIteratorResourceBundle.h>
#include <sun/util/resources/Bundles.h>
#include <sun/util/resources/Bundles$1.h>
#include <sun/util/resources/Bundles$2.h>
#include <sun/util/resources/Bundles$BundleReference.h>
#include <sun/util/resources/Bundles$CacheKey.h>
#include <sun/util/resources/Bundles$CacheKeyReference.h>
#include <sun/util/resources/Bundles$Strategy.h>
#include <sun/util/resources/CalendarData.h>
#include <sun/util/resources/CalendarDataProvider.h>
#include <sun/util/resources/CalendarData_en.h>
#include <sun/util/resources/CurrencyNames.h>
#include <sun/util/resources/CurrencyNamesProvider.h>
#include <sun/util/resources/CurrencyNames_en_US.h>
#include <sun/util/resources/LocaleData.h>
#include <sun/util/resources/LocaleData$1.h>
#include <sun/util/resources/LocaleData$2.h>
#include <sun/util/resources/LocaleData$CommonResourceBundleProvider.h>
#include <sun/util/resources/LocaleData$LocaleDataResourceBundleProvider.h>
#include <sun/util/resources/LocaleData$LocaleDataStrategy.h>
#include <sun/util/resources/LocaleData$SupplementaryResourceBundleProvider.h>
#include <sun/util/resources/LocaleData$SupplementaryStrategy.h>
#include <sun/util/resources/LocaleDataProvider.h>
#include <sun/util/resources/LocaleNames.h>
#include <sun/util/resources/LocaleNamesBundle.h>
#include <sun/util/resources/LocaleNamesProvider.h>
#include <sun/util/resources/LocaleNames_en.h>
#include <sun/util/resources/OpenListResourceBundle.h>
#include <sun/util/resources/ParallelListResourceBundle.h>
#include <sun/util/resources/ParallelListResourceBundle$KeySet.h>
#include <sun/util/resources/ParallelListResourceBundle$KeySet$1.h>
#include <sun/util/resources/TimeZoneNames.h>
#include <sun/util/resources/TimeZoneNamesBundle.h>
#include <sun/util/resources/TimeZoneNamesProvider.h>
#include <sun/util/resources/TimeZoneNames_en.h>
#include <sun/util/resources/cldr/CalendarData.h>
#include <sun/util/resources/cldr/CalendarDataProvider.h>
#include <sun/util/resources/cldr/CurrencyNames.h>
#include <sun/util/resources/cldr/CurrencyNamesProvider.h>
#include <sun/util/resources/cldr/CurrencyNames_en.h>
#include <sun/util/resources/cldr/LocaleNames.h>
#include <sun/util/resources/cldr/LocaleNamesProvider.h>
#include <sun/util/resources/cldr/LocaleNames_en.h>
#include <sun/util/resources/cldr/TimeZoneNames.h>
#include <sun/util/resources/cldr/TimeZoneNamesProvider.h>
#include <sun/util/resources/cldr/TimeZoneNames_en.h>
#include <sun/util/spi/CalendarProvider.h>
#include <META-INF/services/java.nio.file.spi.FileSystemProvider.resource.h>
#include <java/lang/uniName.dat.resource.h>
#include <java/time/chrono/hijrah-config-Hijrah-umalqura_islamic-umalqura.properties.resource.h>
#include <java/time/tzdb.dat.resource.h>
#include <java/util/currency.data.resource.h>
#include <jdk/internal/icu/impl/data/icudt67b/nfc.nrm.resource.h>
#include <jdk/internal/icu/impl/data/icudt67b/nfkc.nrm.resource.h>
#include <jdk/internal/icu/impl/data/icudt67b/ubidi.icu.resource.h>
#include <jdk/internal/icu/impl/data/icudt67b/uprops.icu.resource.h>
#include <sun/net/idn/uidna.spp.resource.h>
#include <sun/net/www/content-types.properties.resource.h>
#include <sun/text/resources/CharacterBreakIteratorData.resource.h>
#include <sun/text/resources/LineBreakIteratorData.resource.h>
#include <sun/text/resources/SentenceBreakIteratorData.resource.h>
#include <sun/text/resources/WordBreakIteratorData.resource.h>

#undef ASCII
#undef AVA
#undef CDS
#undef CESU_8
#undef CRC32
#undef CRC32C
#undef CRL
#undef DRBG
#undef DSA
#undef GBK
#undef GCM
#undef GCTR
#undef GHASH
#undef HKDF
#undef HKSCS
#undef IDN
#undef KOI8_R
#undef KOI8_U
#undef MD2
#undef MD4
#undef MD5
#undef MGF1
#undef MS950_HKSCS
#undef MS950_HKSCS_XP
#undef NTLM
#undef OCSP
#undef PCBC
#undef PKCS10
#undef PKCS7
#undef PKIX
#undef RDN
#undef SHA
#undef SHA2
#undef SHA3
#undef SHA5
#undef SHAKE256
#undef SJIS
#undef URI
#undef URL
#undef US_ASCII
#undef UTF16
#undef UTF8
#undef UTF_16
#undef UTF_16BE
#undef UTF_16LE
#undef UTF_16LE_BOM
#undef UTF_32
#undef UTF_32BE
#undef UTF_32BE_BOM
#undef UTF_32LE
#undef UTF_32LE_BOM
#undef UTF_8
#undef UUID
#undef VM
#undef X509CRL

#define $classEntry(name, clazz) {name, clazz::load$, $getMark(clazz)}
::java::lang::ClassEntry _java$base_classes_[] = {
	$classEntry("[B", $Array<int8_t>),
	$classEntry("[C", $Array<char16_t>),
	$classEntry("[D", $Array<double>),
	$classEntry("[F", $Array<float>),
	$classEntry("[I", $Array<int32_t>),
	$classEntry("[J", $Array<int64_t>),
	$classEntry("[Ljava.lang.Object;", $Array<::java::lang::Object>),
	$classEntry("[S", $Array<int16_t>),
	$classEntry("[Z", $Array<bool>),
	$classEntry("apple.security.AppleProvider", ::apple::security::AppleProvider),
	$classEntry("apple.security.AppleProvider$1", ::apple::security::AppleProvider$1),
	$classEntry("apple.security.AppleProvider$ProviderService", ::apple::security::AppleProvider$ProviderService),
	$classEntry("apple.security.KeychainStore", ::apple::security::KeychainStore),
	$classEntry("apple.security.KeychainStore$CertKeychainItemPair", ::apple::security::KeychainStore$CertKeychainItemPair),
	$classEntry("apple.security.KeychainStore$KeyEntry", ::apple::security::KeychainStore$KeyEntry),
	$classEntry("apple.security.KeychainStore$TrustedCertEntry", ::apple::security::KeychainStore$TrustedCertEntry),
	$classEntry("com.sun.crypto.provider.AESCipher", ::com::sun::crypto::provider::AESCipher),
	$classEntry("com.sun.crypto.provider.AESCipher$AES128_CBC_NoPadding", ::com::sun::crypto::provider::AESCipher$AES128_CBC_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES128_CFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES128_CFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES128_ECB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES128_ECB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES128_OFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES128_OFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES192_CBC_NoPadding", ::com::sun::crypto::provider::AESCipher$AES192_CBC_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES192_CFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES192_CFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES192_ECB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES192_ECB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES192_OFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES192_OFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES256_CBC_NoPadding", ::com::sun::crypto::provider::AESCipher$AES256_CBC_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES256_CFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES256_CFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES256_ECB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES256_ECB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$AES256_OFB_NoPadding", ::com::sun::crypto::provider::AESCipher$AES256_OFB_NoPadding),
	$classEntry("com.sun.crypto.provider.AESCipher$General", ::com::sun::crypto::provider::AESCipher$General),
	$classEntry("com.sun.crypto.provider.AESCipher$OidImpl", ::com::sun::crypto::provider::AESCipher$OidImpl),
	$classEntry("com.sun.crypto.provider.AESConstants", ::com::sun::crypto::provider::AESConstants),
	$classEntry("com.sun.crypto.provider.AESCrypt", ::com::sun::crypto::provider::AESCrypt),
	$classEntry("com.sun.crypto.provider.AESKeyGenerator", ::com::sun::crypto::provider::AESKeyGenerator),
	$classEntry("com.sun.crypto.provider.AESKeyWrap", ::com::sun::crypto::provider::AESKeyWrap),
	$classEntry("com.sun.crypto.provider.AESKeyWrapPadded", ::com::sun::crypto::provider::AESKeyWrapPadded),
	$classEntry("com.sun.crypto.provider.AESParameters", ::com::sun::crypto::provider::AESParameters),
	$classEntry("com.sun.crypto.provider.ARCFOURCipher", ::com::sun::crypto::provider::ARCFOURCipher),
	$classEntry("com.sun.crypto.provider.BlockCipherParamsCore", ::com::sun::crypto::provider::BlockCipherParamsCore),
	$classEntry("com.sun.crypto.provider.BlowfishCipher", ::com::sun::crypto::provider::BlowfishCipher),
	$classEntry("com.sun.crypto.provider.BlowfishConstants", ::com::sun::crypto::provider::BlowfishConstants),
	$classEntry("com.sun.crypto.provider.BlowfishCrypt", ::com::sun::crypto::provider::BlowfishCrypt),
	$classEntry("com.sun.crypto.provider.BlowfishKeyGenerator", ::com::sun::crypto::provider::BlowfishKeyGenerator),
	$classEntry("com.sun.crypto.provider.BlowfishParameters", ::com::sun::crypto::provider::BlowfishParameters),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher", ::com::sun::crypto::provider::ChaCha20Cipher),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Only", ::com::sun::crypto::provider::ChaCha20Cipher$ChaCha20Only),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305", ::com::sun::crypto::provider::ChaCha20Cipher$ChaCha20Poly1305),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$ChaChaEngine", ::com::sun::crypto::provider::ChaCha20Cipher$ChaChaEngine),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$EngineAEADDec", ::com::sun::crypto::provider::ChaCha20Cipher$EngineAEADDec),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$EngineAEADEnc", ::com::sun::crypto::provider::ChaCha20Cipher$EngineAEADEnc),
	$classEntry("com.sun.crypto.provider.ChaCha20Cipher$EngineStreamOnly", ::com::sun::crypto::provider::ChaCha20Cipher$EngineStreamOnly),
	$classEntry("com.sun.crypto.provider.ChaCha20Poly1305Parameters", ::com::sun::crypto::provider::ChaCha20Poly1305Parameters),
	$classEntry("com.sun.crypto.provider.CipherBlockChaining", ::com::sun::crypto::provider::CipherBlockChaining),
	$classEntry("com.sun.crypto.provider.CipherCore", ::com::sun::crypto::provider::CipherCore),
	$classEntry("com.sun.crypto.provider.CipherFeedback", ::com::sun::crypto::provider::CipherFeedback),
	$classEntry("com.sun.crypto.provider.CipherForKeyProtector", ::com::sun::crypto::provider::CipherForKeyProtector),
	$classEntry("com.sun.crypto.provider.CipherTextStealing", ::com::sun::crypto::provider::CipherTextStealing),
	$classEntry("com.sun.crypto.provider.ConstructKeys", ::com::sun::crypto::provider::ConstructKeys),
	$classEntry("com.sun.crypto.provider.CounterMode", ::com::sun::crypto::provider::CounterMode),
	$classEntry("com.sun.crypto.provider.DESCipher", ::com::sun::crypto::provider::DESCipher),
	$classEntry("com.sun.crypto.provider.DESConstants", ::com::sun::crypto::provider::DESConstants),
	$classEntry("com.sun.crypto.provider.DESCrypt", ::com::sun::crypto::provider::DESCrypt),
	$classEntry("com.sun.crypto.provider.DESKey", ::com::sun::crypto::provider::DESKey),
	$classEntry("com.sun.crypto.provider.DESKeyFactory", ::com::sun::crypto::provider::DESKeyFactory),
	$classEntry("com.sun.crypto.provider.DESKeyGenerator", ::com::sun::crypto::provider::DESKeyGenerator),
	$classEntry("com.sun.crypto.provider.DESParameters", ::com::sun::crypto::provider::DESParameters),
	$classEntry("com.sun.crypto.provider.DESedeCipher", ::com::sun::crypto::provider::DESedeCipher),
	$classEntry("com.sun.crypto.provider.DESedeCrypt", ::com::sun::crypto::provider::DESedeCrypt),
	$classEntry("com.sun.crypto.provider.DESedeKey", ::com::sun::crypto::provider::DESedeKey),
	$classEntry("com.sun.crypto.provider.DESedeKeyFactory", ::com::sun::crypto::provider::DESedeKeyFactory),
	$classEntry("com.sun.crypto.provider.DESedeKeyGenerator", ::com::sun::crypto::provider::DESedeKeyGenerator),
	$classEntry("com.sun.crypto.provider.DESedeParameters", ::com::sun::crypto::provider::DESedeParameters),
	$classEntry("com.sun.crypto.provider.DESedeWrapCipher", ::com::sun::crypto::provider::DESedeWrapCipher),
	$classEntry("com.sun.crypto.provider.DHKeyAgreement", ::com::sun::crypto::provider::DHKeyAgreement),
	$classEntry("com.sun.crypto.provider.DHKeyAgreement$AllowKDF", ::com::sun::crypto::provider::DHKeyAgreement$AllowKDF),
	$classEntry("com.sun.crypto.provider.DHKeyFactory", ::com::sun::crypto::provider::DHKeyFactory),
	$classEntry("com.sun.crypto.provider.DHKeyPairGenerator", ::com::sun::crypto::provider::DHKeyPairGenerator),
	$classEntry("com.sun.crypto.provider.DHParameterGenerator", ::com::sun::crypto::provider::DHParameterGenerator),
	$classEntry("com.sun.crypto.provider.DHParameters", ::com::sun::crypto::provider::DHParameters),
	$classEntry("com.sun.crypto.provider.DHPrivateKey", ::com::sun::crypto::provider::DHPrivateKey),
	$classEntry("com.sun.crypto.provider.DHPublicKey", ::com::sun::crypto::provider::DHPublicKey),
	$classEntry("com.sun.crypto.provider.ElectronicCodeBook", ::com::sun::crypto::provider::ElectronicCodeBook),
	$classEntry("com.sun.crypto.provider.EncryptedPrivateKeyInfo", ::com::sun::crypto::provider::EncryptedPrivateKeyInfo),
	$classEntry("com.sun.crypto.provider.FeedbackCipher", ::com::sun::crypto::provider::FeedbackCipher),
	$classEntry("com.sun.crypto.provider.GCM", ::com::sun::crypto::provider::GCM),
	$classEntry("com.sun.crypto.provider.GCMParameters", ::com::sun::crypto::provider::GCMParameters),
	$classEntry("com.sun.crypto.provider.GCTR", ::com::sun::crypto::provider::GCTR),
	$classEntry("com.sun.crypto.provider.GHASH", ::com::sun::crypto::provider::GHASH),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode", ::com::sun::crypto::provider::GaloisCounterMode),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$AES128", ::com::sun::crypto::provider::GaloisCounterMode$AES128),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$AES192", ::com::sun::crypto::provider::GaloisCounterMode$AES192),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$AES256", ::com::sun::crypto::provider::GaloisCounterMode$AES256),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$AESGCM", ::com::sun::crypto::provider::GaloisCounterMode$AESGCM),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$GCMDecrypt", ::com::sun::crypto::provider::GaloisCounterMode$GCMDecrypt),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$GCMEncrypt", ::com::sun::crypto::provider::GaloisCounterMode$GCMEncrypt),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$GCMEngine", ::com::sun::crypto::provider::GaloisCounterMode$GCMEngine),
	$classEntry("com.sun.crypto.provider.GaloisCounterMode$GCTRGHASH", ::com::sun::crypto::provider::GaloisCounterMode$GCTRGHASH),
	$classEntry("com.sun.crypto.provider.HmacCore", ::com::sun::crypto::provider::HmacCore),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA224", ::com::sun::crypto::provider::HmacCore$HmacSHA224),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA256", ::com::sun::crypto::provider::HmacCore$HmacSHA256),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA384", ::com::sun::crypto::provider::HmacCore$HmacSHA384),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA3_224", ::com::sun::crypto::provider::HmacCore$HmacSHA3_224),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA3_256", ::com::sun::crypto::provider::HmacCore$HmacSHA3_256),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA3_384", ::com::sun::crypto::provider::HmacCore$HmacSHA3_384),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA3_512", ::com::sun::crypto::provider::HmacCore$HmacSHA3_512),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA512", ::com::sun::crypto::provider::HmacCore$HmacSHA512),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA512_224", ::com::sun::crypto::provider::HmacCore$HmacSHA512_224),
	$classEntry("com.sun.crypto.provider.HmacCore$HmacSHA512_256", ::com::sun::crypto::provider::HmacCore$HmacSHA512_256),
	$classEntry("com.sun.crypto.provider.HmacMD5", ::com::sun::crypto::provider::HmacMD5),
	$classEntry("com.sun.crypto.provider.HmacMD5KeyGenerator", ::com::sun::crypto::provider::HmacMD5KeyGenerator),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore", ::com::sun::crypto::provider::HmacPKCS12PBECore),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA1", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA1),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA224", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA224),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA256", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA256),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA384", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA384),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA512", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA512),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_224", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_224),
	$classEntry("com.sun.crypto.provider.HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_256", ::com::sun::crypto::provider::HmacPKCS12PBECore$HmacPKCS12PBE_SHA512_256),
	$classEntry("com.sun.crypto.provider.HmacSHA1", ::com::sun::crypto::provider::HmacSHA1),
	$classEntry("com.sun.crypto.provider.HmacSHA1KeyGenerator", ::com::sun::crypto::provider::HmacSHA1KeyGenerator),
	$classEntry("com.sun.crypto.provider.ISO10126Padding", ::com::sun::crypto::provider::ISO10126Padding),
	$classEntry("com.sun.crypto.provider.JceKeyStore", ::com::sun::crypto::provider::JceKeyStore),
	$classEntry("com.sun.crypto.provider.JceKeyStore$DeserializationChecker", ::com::sun::crypto::provider::JceKeyStore$DeserializationChecker),
	$classEntry("com.sun.crypto.provider.JceKeyStore$PrivateKeyEntry", ::com::sun::crypto::provider::JceKeyStore$PrivateKeyEntry),
	$classEntry("com.sun.crypto.provider.JceKeyStore$SecretKeyEntry", ::com::sun::crypto::provider::JceKeyStore$SecretKeyEntry),
	$classEntry("com.sun.crypto.provider.JceKeyStore$TrustedCertEntry", ::com::sun::crypto::provider::JceKeyStore$TrustedCertEntry),
	$classEntry("com.sun.crypto.provider.KWUtil", ::com::sun::crypto::provider::KWUtil),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore", ::com::sun::crypto::provider::KeyGeneratorCore),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$ARCFOURKeyGenerator", ::com::sun::crypto::provider::KeyGeneratorCore$ARCFOURKeyGenerator),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$ChaCha20KeyGenerator", ::com::sun::crypto::provider::KeyGeneratorCore$ChaCha20KeyGenerator),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA224", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA224),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA256", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA256),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA384", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA384),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA3_224", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA3_224),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA3_256", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA3_256),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA3_384", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA3_384),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA3_512", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA3_512),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA512", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA512),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA512_224", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA512_224),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA512_256", ::com::sun::crypto::provider::KeyGeneratorCore$HmacKG$SHA512_256),
	$classEntry("com.sun.crypto.provider.KeyGeneratorCore$RC2KeyGenerator", ::com::sun::crypto::provider::KeyGeneratorCore$RC2KeyGenerator),
	$classEntry("com.sun.crypto.provider.KeyProtector", ::com::sun::crypto::provider::KeyProtector),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher", ::com::sun::crypto::provider::KeyWrapCipher),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES128_KWP_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES128_KWP_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES128_KW_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES128_KW_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES128_KW_PKCS5Padding", ::com::sun::crypto::provider::KeyWrapCipher$AES128_KW_PKCS5Padding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES192_KWP_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES192_KWP_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES192_KW_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES192_KW_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES192_KW_PKCS5Padding", ::com::sun::crypto::provider::KeyWrapCipher$AES192_KW_PKCS5Padding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES256_KWP_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES256_KWP_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES256_KW_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES256_KW_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES256_KW_PKCS5Padding", ::com::sun::crypto::provider::KeyWrapCipher$AES256_KW_PKCS5Padding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES_KWP_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES_KWP_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES_KW_NoPadding", ::com::sun::crypto::provider::KeyWrapCipher$AES_KW_NoPadding),
	$classEntry("com.sun.crypto.provider.KeyWrapCipher$AES_KW_PKCS5Padding", ::com::sun::crypto::provider::KeyWrapCipher$AES_KW_PKCS5Padding),
	$classEntry("com.sun.crypto.provider.OAEPParameters", ::com::sun::crypto::provider::OAEPParameters),
	$classEntry("com.sun.crypto.provider.OutputFeedback", ::com::sun::crypto::provider::OutputFeedback),
	$classEntry("com.sun.crypto.provider.PBEKey", ::com::sun::crypto::provider::PBEKey),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory", ::com::sun::crypto::provider::PBEKeyFactory),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA1AndAES_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_256", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA1AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA224AndAES_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_256", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA224AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA256AndAES_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_256", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA256AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA384AndAES_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_256", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA384AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA512AndAES_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_256", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithHmacSHA512AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithMD5AndDES),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndTripleDES", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithMD5AndTripleDES),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndDESede", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithSHA1AndDESede),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndRC2_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithSHA1AndRC2_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndRC2_40", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithSHA1AndRC2_40),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndRC4_128", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithSHA1AndRC4_128),
	$classEntry("com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndRC4_40", ::com::sun::crypto::provider::PBEKeyFactory$PBEWithSHA1AndRC4_40),
	$classEntry("com.sun.crypto.provider.PBEParameters", ::com::sun::crypto::provider::PBEParameters),
	$classEntry("com.sun.crypto.provider.PBES1Core", ::com::sun::crypto::provider::PBES1Core),
	$classEntry("com.sun.crypto.provider.PBES2Core", ::com::sun::crypto::provider::PBES2Core),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_128", ::com::sun::crypto::provider::PBES2Core$HmacSHA1AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_256", ::com::sun::crypto::provider::PBES2Core$HmacSHA1AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_128", ::com::sun::crypto::provider::PBES2Core$HmacSHA224AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_256", ::com::sun::crypto::provider::PBES2Core$HmacSHA224AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_128", ::com::sun::crypto::provider::PBES2Core$HmacSHA256AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256", ::com::sun::crypto::provider::PBES2Core$HmacSHA256AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_128", ::com::sun::crypto::provider::PBES2Core$HmacSHA384AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_256", ::com::sun::crypto::provider::PBES2Core$HmacSHA384AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_128", ::com::sun::crypto::provider::PBES2Core$HmacSHA512AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_256", ::com::sun::crypto::provider::PBES2Core$HmacSHA512AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Parameters", ::com::sun::crypto::provider::PBES2Parameters),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$General", ::com::sun::crypto::provider::PBES2Parameters$General),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_128", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA1AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_256", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA1AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_128", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA224AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_256", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA224AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_128", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA256AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_256", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA256AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_128", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA384AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_256", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA384AndAES_256),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_128", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA512AndAES_128),
	$classEntry("com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_256", ::com::sun::crypto::provider::PBES2Parameters$HmacSHA512AndAES_256),
	$classEntry("com.sun.crypto.provider.PBEWithMD5AndDESCipher", ::com::sun::crypto::provider::PBEWithMD5AndDESCipher),
	$classEntry("com.sun.crypto.provider.PBEWithMD5AndTripleDESCipher", ::com::sun::crypto::provider::PBEWithMD5AndTripleDESCipher),
	$classEntry("com.sun.crypto.provider.PBKDF2Core", ::com::sun::crypto::provider::PBKDF2Core),
	$classEntry("com.sun.crypto.provider.PBKDF2Core$HmacSHA1", ::com::sun::crypto::provider::PBKDF2Core$HmacSHA1),
	$classEntry("com.sun.crypto.provider.PBKDF2Core$HmacSHA224", ::com::sun::crypto::provider::PBKDF2Core$HmacSHA224),
	$classEntry("com.sun.crypto.provider.PBKDF2Core$HmacSHA256", ::com::sun::crypto::provider::PBKDF2Core$HmacSHA256),
	$classEntry("com.sun.crypto.provider.PBKDF2Core$HmacSHA384", ::com::sun::crypto::provider::PBKDF2Core$HmacSHA384),
	$classEntry("com.sun.crypto.provider.PBKDF2Core$HmacSHA512", ::com::sun::crypto::provider::PBKDF2Core$HmacSHA512),
	$classEntry("com.sun.crypto.provider.PBKDF2HmacSHA1Factory", ::com::sun::crypto::provider::PBKDF2HmacSHA1Factory),
	$classEntry("com.sun.crypto.provider.PBKDF2KeyImpl", ::com::sun::crypto::provider::PBKDF2KeyImpl),
	$classEntry("com.sun.crypto.provider.PBKDF2KeyImpl$1", ::com::sun::crypto::provider::PBKDF2KeyImpl$1),
	$classEntry("com.sun.crypto.provider.PBMAC1Core", ::com::sun::crypto::provider::PBMAC1Core),
	$classEntry("com.sun.crypto.provider.PBMAC1Core$HmacSHA1", ::com::sun::crypto::provider::PBMAC1Core$HmacSHA1),
	$classEntry("com.sun.crypto.provider.PBMAC1Core$HmacSHA224", ::com::sun::crypto::provider::PBMAC1Core$HmacSHA224),
	$classEntry("com.sun.crypto.provider.PBMAC1Core$HmacSHA256", ::com::sun::crypto::provider::PBMAC1Core$HmacSHA256),
	$classEntry("com.sun.crypto.provider.PBMAC1Core$HmacSHA384", ::com::sun::crypto::provider::PBMAC1Core$HmacSHA384),
	$classEntry("com.sun.crypto.provider.PBMAC1Core$HmacSHA512", ::com::sun::crypto::provider::PBMAC1Core$HmacSHA512),
	$classEntry("com.sun.crypto.provider.PCBC", ::com::sun::crypto::provider::PCBC),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore", ::com::sun::crypto::provider::PKCS12PBECipherCore),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede", ::com::sun::crypto::provider::PKCS12PBECipherCore$PBEWithSHA1AndDESede),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_128", ::com::sun::crypto::provider::PKCS12PBECipherCore$PBEWithSHA1AndRC2_128),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40", ::com::sun::crypto::provider::PKCS12PBECipherCore$PBEWithSHA1AndRC2_40),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC4_128", ::com::sun::crypto::provider::PKCS12PBECipherCore$PBEWithSHA1AndRC4_128),
	$classEntry("com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC4_40", ::com::sun::crypto::provider::PKCS12PBECipherCore$PBEWithSHA1AndRC4_40),
	$classEntry("com.sun.crypto.provider.PKCS5Padding", ::com::sun::crypto::provider::PKCS5Padding),
	$classEntry("com.sun.crypto.provider.Padding", ::com::sun::crypto::provider::Padding),
	$classEntry("com.sun.crypto.provider.Poly1305", ::com::sun::crypto::provider::Poly1305),
	$classEntry("com.sun.crypto.provider.PrivateKeyInfo", ::com::sun::crypto::provider::PrivateKeyInfo),
	$classEntry("com.sun.crypto.provider.RC2Cipher", ::com::sun::crypto::provider::RC2Cipher),
	$classEntry("com.sun.crypto.provider.RC2Crypt", ::com::sun::crypto::provider::RC2Crypt),
	$classEntry("com.sun.crypto.provider.RC2Parameters", ::com::sun::crypto::provider::RC2Parameters),
	$classEntry("com.sun.crypto.provider.RSACipher", ::com::sun::crypto::provider::RSACipher),
	$classEntry("com.sun.crypto.provider.SealedObjectForKeyProtector", ::com::sun::crypto::provider::SealedObjectForKeyProtector),
	$classEntry("com.sun.crypto.provider.SealedObjectForKeyProtector$DeserializationChecker", ::com::sun::crypto::provider::SealedObjectForKeyProtector$DeserializationChecker),
	$classEntry("com.sun.crypto.provider.SslMacCore", ::com::sun::crypto::provider::SslMacCore),
	$classEntry("com.sun.crypto.provider.SslMacCore$SslMacMD5", ::com::sun::crypto::provider::SslMacCore$SslMacMD5),
	$classEntry("com.sun.crypto.provider.SslMacCore$SslMacSHA1", ::com::sun::crypto::provider::SslMacCore$SslMacSHA1),
	$classEntry("com.sun.crypto.provider.SunJCE", ::com::sun::crypto::provider::SunJCE),
	$classEntry("com.sun.crypto.provider.SunJCE$1", ::com::sun::crypto::provider::SunJCE$1),
	$classEntry("com.sun.crypto.provider.SunJCE$SecureRandomHolder", ::com::sun::crypto::provider::SunJCE$SecureRandomHolder),
	$classEntry("com.sun.crypto.provider.SymmetricCipher", ::com::sun::crypto::provider::SymmetricCipher),
	$classEntry("com.sun.crypto.provider.TlsKeyMaterialGenerator", ::com::sun::crypto::provider::TlsKeyMaterialGenerator),
	$classEntry("com.sun.crypto.provider.TlsMasterSecretGenerator", ::com::sun::crypto::provider::TlsMasterSecretGenerator),
	$classEntry("com.sun.crypto.provider.TlsMasterSecretGenerator$TlsMasterSecretKey", ::com::sun::crypto::provider::TlsMasterSecretGenerator$TlsMasterSecretKey),
	$classEntry("com.sun.crypto.provider.TlsPrfGenerator", ::com::sun::crypto::provider::TlsPrfGenerator),
	$classEntry("com.sun.crypto.provider.TlsPrfGenerator$V10", ::com::sun::crypto::provider::TlsPrfGenerator$V10),
	$classEntry("com.sun.crypto.provider.TlsPrfGenerator$V12", ::com::sun::crypto::provider::TlsPrfGenerator$V12),
	$classEntry("com.sun.crypto.provider.TlsRsaPremasterSecretGenerator", ::com::sun::crypto::provider::TlsRsaPremasterSecretGenerator),
	$classEntry("com.sun.security.ntlm.Client", ::com::sun::security::ntlm::Client),
	$classEntry("com.sun.security.ntlm.NTLM", ::com::sun::security::ntlm::NTLM),
	$classEntry("com.sun.security.ntlm.NTLM$Reader", ::com::sun::security::ntlm::NTLM$Reader),
	$classEntry("com.sun.security.ntlm.NTLM$Writer", ::com::sun::security::ntlm::NTLM$Writer),
	$classEntry("com.sun.security.ntlm.NTLMException", ::com::sun::security::ntlm::NTLMException),
	$classEntry("com.sun.security.ntlm.Server", ::com::sun::security::ntlm::Server),
	$classEntry("com.sun.security.ntlm.Version", ::com::sun::security::ntlm::Version),
	$classEntry("java.io.Bits", ::java::io::Bits),
	$classEntry("java.io.BufferedInputStream", ::java::io::BufferedInputStream),
	$classEntry("java.io.BufferedOutputStream", ::java::io::BufferedOutputStream),
	$classEntry("java.io.BufferedReader", ::java::io::BufferedReader),
	$classEntry("java.io.BufferedReader$1", ::java::io::BufferedReader$1),
	$classEntry("java.io.BufferedWriter", ::java::io::BufferedWriter),
	$classEntry("java.io.ByteArrayInputStream", ::java::io::ByteArrayInputStream),
	$classEntry("java.io.ByteArrayOutputStream", ::java::io::ByteArrayOutputStream),
	$classEntry("java.io.CharArrayReader", ::java::io::CharArrayReader),
	$classEntry("java.io.CharArrayWriter", ::java::io::CharArrayWriter),
	$classEntry("java.io.CharConversionException", ::java::io::CharConversionException),
	$classEntry("java.io.Closeable", ::java::io::Closeable),
	$classEntry("java.io.Console", ::java::io::Console),
	$classEntry("java.io.Console$1", ::java::io::Console$1),
	$classEntry("java.io.Console$2", ::java::io::Console$2),
	$classEntry("java.io.Console$3", ::java::io::Console$3),
	$classEntry("java.io.Console$LineReader", ::java::io::Console$LineReader),
	$classEntry("java.io.DataInput", ::java::io::DataInput),
	$classEntry("java.io.DataInputStream", ::java::io::DataInputStream),
	$classEntry("java.io.DataOutput", ::java::io::DataOutput),
	$classEntry("java.io.DataOutputStream", ::java::io::DataOutputStream),
	$classEntry("java.io.DefaultFileSystem", ::java::io::DefaultFileSystem),
	$classEntry("java.io.DeleteOnExitHook", ::java::io::DeleteOnExitHook),
	$classEntry("java.io.DeleteOnExitHook$1", ::java::io::DeleteOnExitHook$1),
	$classEntry("java.io.EOFException", ::java::io::EOFException),
	$classEntry("java.io.ExpiringCache", ::java::io::ExpiringCache),
	$classEntry("java.io.ExpiringCache$1", ::java::io::ExpiringCache$1),
	$classEntry("java.io.ExpiringCache$Entry", ::java::io::ExpiringCache$Entry),
	$classEntry("java.io.Externalizable", ::java::io::Externalizable),
	$classEntry("java.io.File", ::java::io::File),
	$classEntry("java.io.File$PathStatus", ::java::io::File$PathStatus),
	$classEntry("java.io.File$TempDirectory", ::java::io::File$TempDirectory),
	$classEntry("java.io.FileCleanable", ::java::io::FileCleanable),
	$classEntry("java.io.FileDescriptor", ::java::io::FileDescriptor),
	$classEntry("java.io.FileDescriptor$1", ::java::io::FileDescriptor$1),
	$classEntry("java.io.FileFilter", ::java::io::FileFilter),
	$classEntry("java.io.FileInputStream", ::java::io::FileInputStream),
	$classEntry("java.io.FileInputStream$1", ::java::io::FileInputStream$1),
	$classEntry("java.io.FileNotFoundException", ::java::io::FileNotFoundException),
	$classEntry("java.io.FileOutputStream", ::java::io::FileOutputStream),
	$classEntry("java.io.FileOutputStream$1", ::java::io::FileOutputStream$1),
	$classEntry("java.io.FilePermission", ::java::io::FilePermission),
	$classEntry("java.io.FilePermission$1", ::java::io::FilePermission$1),
	$classEntry("java.io.FilePermission$2", ::java::io::FilePermission$2),
	$classEntry("java.io.FilePermissionCollection", ::java::io::FilePermissionCollection),
	$classEntry("java.io.FilePermissionCollection$1", ::java::io::FilePermissionCollection$1),
	$classEntry("java.io.FileReader", ::java::io::FileReader),
	$classEntry("java.io.FileSystem", ::java::io::FileSystem),
	$classEntry("java.io.FileWriter", ::java::io::FileWriter),
	$classEntry("java.io.FilenameFilter", ::java::io::FilenameFilter),
	$classEntry("java.io.FilterInputStream", ::java::io::FilterInputStream),
	$classEntry("java.io.FilterOutputStream", ::java::io::FilterOutputStream),
	$classEntry("java.io.FilterReader", ::java::io::FilterReader),
	$classEntry("java.io.FilterWriter", ::java::io::FilterWriter),
	$classEntry("java.io.Flushable", ::java::io::Flushable),
	$classEntry("java.io.IOError", ::java::io::IOError),
	$classEntry("java.io.IOException", ::java::io::IOException),
	$classEntry("java.io.InputStream", ::java::io::InputStream),
	$classEntry("java.io.InputStream$1", ::java::io::InputStream$1),
	$classEntry("java.io.InputStreamReader", ::java::io::InputStreamReader),
	$classEntry("java.io.InterruptedIOException", ::java::io::InterruptedIOException),
	$classEntry("java.io.InvalidClassException", ::java::io::InvalidClassException),
	$classEntry("java.io.InvalidObjectException", ::java::io::InvalidObjectException),
	$classEntry("java.io.LineNumberInputStream", ::java::io::LineNumberInputStream),
	$classEntry("java.io.LineNumberReader", ::java::io::LineNumberReader),
	$classEntry("java.io.NotActiveException", ::java::io::NotActiveException),
	$classEntry("java.io.NotSerializableException", ::java::io::NotSerializableException),
	$classEntry("java.io.ObjectInput", ::java::io::ObjectInput),
	$classEntry("java.io.ObjectInputFilter", ::java::io::ObjectInputFilter),
	$classEntry("java.io.ObjectInputFilter$Config", ::java::io::ObjectInputFilter$Config),
	$classEntry("java.io.ObjectInputFilter$Config$BuiltinFilterFactory", ::java::io::ObjectInputFilter$Config$BuiltinFilterFactory),
	$classEntry("java.io.ObjectInputFilter$Config$Global", ::java::io::ObjectInputFilter$Config$Global),
	$classEntry("java.io.ObjectInputFilter$Config$MergeFilter", ::java::io::ObjectInputFilter$Config$MergeFilter),
	$classEntry("java.io.ObjectInputFilter$Config$PredicateFilter", ::java::io::ObjectInputFilter$Config$PredicateFilter),
	$classEntry("java.io.ObjectInputFilter$Config$RejectUndecidedFilter", ::java::io::ObjectInputFilter$Config$RejectUndecidedFilter),
	$classEntry("java.io.ObjectInputFilter$Config$RejectUndecidedFilter$SerialInfo", ::java::io::ObjectInputFilter$Config$RejectUndecidedFilter$SerialInfo),
	$classEntry("java.io.ObjectInputFilter$FilterInfo", ::java::io::ObjectInputFilter$FilterInfo),
	$classEntry("java.io.ObjectInputFilter$Status", ::java::io::ObjectInputFilter$Status),
	$classEntry("java.io.ObjectInputStream", ::java::io::ObjectInputStream),
	$classEntry("java.io.ObjectInputStream$1", ::java::io::ObjectInputStream$1),
	$classEntry("java.io.ObjectInputStream$BlockDataInputStream", ::java::io::ObjectInputStream$BlockDataInputStream),
	$classEntry("java.io.ObjectInputStream$Caches", ::java::io::ObjectInputStream$Caches),
	$classEntry("java.io.ObjectInputStream$FieldValues", ::java::io::ObjectInputStream$FieldValues),
	$classEntry("java.io.ObjectInputStream$FilterValues", ::java::io::ObjectInputStream$FilterValues),
	$classEntry("java.io.ObjectInputStream$GetField", ::java::io::ObjectInputStream$GetField),
	$classEntry("java.io.ObjectInputStream$HandleTable", ::java::io::ObjectInputStream$HandleTable),
	$classEntry("java.io.ObjectInputStream$HandleTable$HandleList", ::java::io::ObjectInputStream$HandleTable$HandleList),
	$classEntry("java.io.ObjectInputStream$Logging", ::java::io::ObjectInputStream$Logging),
	$classEntry("java.io.ObjectInputStream$PeekInputStream", ::java::io::ObjectInputStream$PeekInputStream),
	$classEntry("java.io.ObjectInputStream$ValidationList", ::java::io::ObjectInputStream$ValidationList),
	$classEntry("java.io.ObjectInputStream$ValidationList$1", ::java::io::ObjectInputStream$ValidationList$1),
	$classEntry("java.io.ObjectInputStream$ValidationList$Callback", ::java::io::ObjectInputStream$ValidationList$Callback),
	$classEntry("java.io.ObjectInputValidation", ::java::io::ObjectInputValidation),
	$classEntry("java.io.ObjectOutput", ::java::io::ObjectOutput),
	$classEntry("java.io.ObjectOutputStream", ::java::io::ObjectOutputStream),
	$classEntry("java.io.ObjectOutputStream$1", ::java::io::ObjectOutputStream$1),
	$classEntry("java.io.ObjectOutputStream$BlockDataOutputStream", ::java::io::ObjectOutputStream$BlockDataOutputStream),
	$classEntry("java.io.ObjectOutputStream$Caches", ::java::io::ObjectOutputStream$Caches),
	$classEntry("java.io.ObjectOutputStream$DebugTraceInfoStack", ::java::io::ObjectOutputStream$DebugTraceInfoStack),
	$classEntry("java.io.ObjectOutputStream$HandleTable", ::java::io::ObjectOutputStream$HandleTable),
	$classEntry("java.io.ObjectOutputStream$PutField", ::java::io::ObjectOutputStream$PutField),
	$classEntry("java.io.ObjectOutputStream$PutFieldImpl", ::java::io::ObjectOutputStream$PutFieldImpl),
	$classEntry("java.io.ObjectOutputStream$ReplaceTable", ::java::io::ObjectOutputStream$ReplaceTable),
	$classEntry("java.io.ObjectStreamClass", ::java::io::ObjectStreamClass),
	$classEntry("java.io.ObjectStreamClass$1", ::java::io::ObjectStreamClass$1),
	$classEntry("java.io.ObjectStreamClass$2", ::java::io::ObjectStreamClass$2),
	$classEntry("java.io.ObjectStreamClass$3", ::java::io::ObjectStreamClass$3),
	$classEntry("java.io.ObjectStreamClass$4", ::java::io::ObjectStreamClass$4),
	$classEntry("java.io.ObjectStreamClass$5", ::java::io::ObjectStreamClass$5),
	$classEntry("java.io.ObjectStreamClass$Caches", ::java::io::ObjectStreamClass$Caches),
	$classEntry("java.io.ObjectStreamClass$ClassDataSlot", ::java::io::ObjectStreamClass$ClassDataSlot),
	$classEntry("java.io.ObjectStreamClass$DeserializationConstructorsCache", ::java::io::ObjectStreamClass$DeserializationConstructorsCache),
	$classEntry("java.io.ObjectStreamClass$DeserializationConstructorsCache$Key", ::java::io::ObjectStreamClass$DeserializationConstructorsCache$Key),
	$classEntry("java.io.ObjectStreamClass$DeserializationConstructorsCache$Key$Impl", ::java::io::ObjectStreamClass$DeserializationConstructorsCache$Key$Impl),
	$classEntry("java.io.ObjectStreamClass$DeserializationConstructorsCache$Key$Lookup", ::java::io::ObjectStreamClass$DeserializationConstructorsCache$Key$Lookup),
	$classEntry("java.io.ObjectStreamClass$EntryFuture", ::java::io::ObjectStreamClass$EntryFuture),
	$classEntry("java.io.ObjectStreamClass$EntryFuture$1", ::java::io::ObjectStreamClass$EntryFuture$1),
	$classEntry("java.io.ObjectStreamClass$ExceptionInfo", ::java::io::ObjectStreamClass$ExceptionInfo),
	$classEntry("java.io.ObjectStreamClass$FieldReflector", ::java::io::ObjectStreamClass$FieldReflector),
	$classEntry("java.io.ObjectStreamClass$FieldReflectorKey", ::java::io::ObjectStreamClass$FieldReflectorKey),
	$classEntry("java.io.ObjectStreamClass$MemberSignature", ::java::io::ObjectStreamClass$MemberSignature),
	$classEntry("java.io.ObjectStreamClass$RecordSupport", ::java::io::ObjectStreamClass$RecordSupport),
	$classEntry("java.io.ObjectStreamClass$WeakClassKey", ::java::io::ObjectStreamClass$WeakClassKey),
	$classEntry("java.io.ObjectStreamConstants", ::java::io::ObjectStreamConstants),
	$classEntry("java.io.ObjectStreamException", ::java::io::ObjectStreamException),
	$classEntry("java.io.ObjectStreamField", ::java::io::ObjectStreamField),
	$classEntry("java.io.OptionalDataException", ::java::io::OptionalDataException),
	$classEntry("java.io.OutputStream", ::java::io::OutputStream),
	$classEntry("java.io.OutputStream$1", ::java::io::OutputStream$1),
	$classEntry("java.io.OutputStreamWriter", ::java::io::OutputStreamWriter),
	$classEntry("java.io.PipedInputStream", ::java::io::PipedInputStream),
	$classEntry("java.io.PipedOutputStream", ::java::io::PipedOutputStream),
	$classEntry("java.io.PipedReader", ::java::io::PipedReader),
	$classEntry("java.io.PipedWriter", ::java::io::PipedWriter),
	$classEntry("java.io.PrintStream", ::java::io::PrintStream),
	$classEntry("java.io.PrintWriter", ::java::io::PrintWriter),
	$classEntry("java.io.PushbackInputStream", ::java::io::PushbackInputStream),
	$classEntry("java.io.PushbackReader", ::java::io::PushbackReader),
	$classEntry("java.io.RandomAccessFile", ::java::io::RandomAccessFile),
	$classEntry("java.io.RandomAccessFile$1", ::java::io::RandomAccessFile$1),
	$classEntry("java.io.RandomAccessFile$2", ::java::io::RandomAccessFile$2),
	$classEntry("java.io.Reader", ::java::io::Reader),
	$classEntry("java.io.Reader$1", ::java::io::Reader$1),
	$classEntry("java.io.SequenceInputStream", ::java::io::SequenceInputStream),
	$classEntry("java.io.Serial", ::java::io::Serial),
	$classEntry("java.io.SerialCallbackContext", ::java::io::SerialCallbackContext),
	$classEntry("java.io.Serializable", ::java::io::Serializable),
	$classEntry("java.io.SerializablePermission", ::java::io::SerializablePermission),
	$classEntry("java.io.StreamCorruptedException", ::java::io::StreamCorruptedException),
	$classEntry("java.io.StreamTokenizer", ::java::io::StreamTokenizer),
	$classEntry("java.io.StringBufferInputStream", ::java::io::StringBufferInputStream),
	$classEntry("java.io.StringReader", ::java::io::StringReader),
	$classEntry("java.io.StringWriter", ::java::io::StringWriter),
	$classEntry("java.io.SyncFailedException", ::java::io::SyncFailedException),
	$classEntry("java.io.UTFDataFormatException", ::java::io::UTFDataFormatException),
	$classEntry("java.io.UncheckedIOException", ::java::io::UncheckedIOException),
	$classEntry("java.io.UnixFileSystem", ::java::io::UnixFileSystem),
	$classEntry("java.io.UnsupportedEncodingException", ::java::io::UnsupportedEncodingException),
	$classEntry("java.io.WriteAbortedException", ::java::io::WriteAbortedException),
	$classEntry("java.io.Writer", ::java::io::Writer),
	$classEntry("java.io.Writer$1", ::java::io::Writer$1),
	$classEntry("java.lang.AbstractMethodError", ::java::lang::AbstractMethodError),
	$classEntry("java.lang.AbstractStringBuilder", ::java::lang::AbstractStringBuilder),
	$classEntry("java.lang.Appendable", ::java::lang::Appendable),
	$classEntry("java.lang.ApplicationShutdownHooks", ::java::lang::ApplicationShutdownHooks),
	$classEntry("java.lang.ApplicationShutdownHooks$1", ::java::lang::ApplicationShutdownHooks$1),
	$classEntry("java.lang.ArithmeticException", ::java::lang::ArithmeticException),
	$classEntry("java.lang.ArrayIndexOutOfBoundsException", ::java::lang::ArrayIndexOutOfBoundsException),
	$classEntry("java.lang.ArrayStoreException", ::java::lang::ArrayStoreException),
	$classEntry("java.lang.AssertionError", ::java::lang::AssertionError),
	$classEntry("java.lang.AssertionStatusDirectives", ::java::lang::AssertionStatusDirectives),
	$classEntry("java.lang.AutoCloseable", ::java::lang::AutoCloseable),
	$classEntry("java.lang.Boolean", ::java::lang::Boolean),
	$classEntry("java.lang.BootstrapMethodError", ::java::lang::BootstrapMethodError),
	$classEntry("java.lang.Byte", ::java::lang::Byte),
	$classEntry("java.lang.Byte$ByteCache", ::java::lang::Byte$ByteCache),
	$classEntry("java.lang.CharSequence", ::java::lang::CharSequence),
	$classEntry("java.lang.CharSequence$1CharIterator", ::java::lang::CharSequence$1CharIterator),
	$classEntry("java.lang.CharSequence$1CodePointIterator", ::java::lang::CharSequence$1CodePointIterator),
	$classEntry("java.lang.Character", ::java::lang::Character),
	$classEntry("java.lang.Character$CharacterCache", ::java::lang::Character$CharacterCache),
	$classEntry("java.lang.Character$Subset", ::java::lang::Character$Subset),
	$classEntry("java.lang.Character$UnicodeBlock", ::java::lang::Character$UnicodeBlock),
	$classEntry("java.lang.Character$UnicodeScript", ::java::lang::Character$UnicodeScript),
	$classEntry("java.lang.CharacterData", ::java::lang::CharacterData),
	$classEntry("java.lang.CharacterData00", ::java::lang::CharacterData00),
	$classEntry("java.lang.CharacterData01", ::java::lang::CharacterData01),
	$classEntry("java.lang.CharacterData02", ::java::lang::CharacterData02),
	$classEntry("java.lang.CharacterData03", ::java::lang::CharacterData03),
	$classEntry("java.lang.CharacterData0E", ::java::lang::CharacterData0E),
	$classEntry("java.lang.CharacterDataLatin1", ::java::lang::CharacterDataLatin1),
	$classEntry("java.lang.CharacterDataPrivateUse", ::java::lang::CharacterDataPrivateUse),
	$classEntry("java.lang.CharacterDataUndefined", ::java::lang::CharacterDataUndefined),
	$classEntry("java.lang.CharacterName", ::java::lang::CharacterName),
	$classEntry("java.lang.CharacterName$1", ::java::lang::CharacterName$1),
	$classEntry("java.lang.Class", ::java::lang::Class),
	$classEntry("java.lang.Class$1", ::java::lang::Class$1),
	$classEntry("java.lang.Class$2", ::java::lang::Class$2),
	$classEntry("java.lang.Class$3", ::java::lang::Class$3),
	$classEntry("java.lang.Class$AnnotationData", ::java::lang::Class$AnnotationData),
	$classEntry("java.lang.Class$Atomic", ::java::lang::Class$Atomic),
	$classEntry("java.lang.Class$EnclosingMethodInfo", ::java::lang::Class$EnclosingMethodInfo),
	$classEntry("java.lang.Class$ReflectionData", ::java::lang::Class$ReflectionData),
	$classEntry("java.lang.ClassCastException", ::java::lang::ClassCastException),
	$classEntry("java.lang.ClassCircularityError", ::java::lang::ClassCircularityError),
	$classEntry("java.lang.ClassFormatError", ::java::lang::ClassFormatError),
	$classEntry("java.lang.ClassLoader", ::java::lang::ClassLoader),
	$classEntry("java.lang.ClassLoader$1", ::java::lang::ClassLoader$1),
	$classEntry("java.lang.ClassLoader$ParallelLoaders", ::java::lang::ClassLoader$ParallelLoaders),
	$classEntry("java.lang.ClassNotFoundException", ::java::lang::ClassNotFoundException),
	$classEntry("java.lang.ClassValue", ::java::lang::ClassValue),
	$classEntry("java.lang.ClassValue$ClassValueMap", ::java::lang::ClassValue$ClassValueMap),
	$classEntry("java.lang.ClassValue$Entry", ::java::lang::ClassValue$Entry),
	$classEntry("java.lang.ClassValue$Identity", ::java::lang::ClassValue$Identity),
	$classEntry("java.lang.ClassValue$Version", ::java::lang::ClassValue$Version),
	$classEntry("java.lang.CloneNotSupportedException", ::java::lang::CloneNotSupportedException),
	$classEntry("java.lang.Cloneable", ::java::lang::Cloneable),
	$classEntry("java.lang.Comparable", ::java::lang::Comparable),
	$classEntry("java.lang.Compiler", ::java::lang::Compiler),
	$classEntry("java.lang.CompoundEnumeration", ::java::lang::CompoundEnumeration),
	$classEntry("java.lang.ConditionalSpecialCasing", ::java::lang::ConditionalSpecialCasing),
	$classEntry("java.lang.ConditionalSpecialCasing$Entry", ::java::lang::ConditionalSpecialCasing$Entry),
	$classEntry("java.lang.Deprecated", ::java::lang::Deprecated),
	$classEntry("java.lang.Double", ::java::lang::Double),
	$classEntry("java.lang.Enum", ::java::lang::Enum),
	$classEntry("java.lang.Enum$EnumDesc", ::java::lang::Enum$EnumDesc),
	$classEntry("java.lang.EnumConstantNotPresentException", ::java::lang::EnumConstantNotPresentException),
	$classEntry("java.lang.Error", ::java::lang::Error),
	$classEntry("java.lang.Exception", ::java::lang::Exception),
	$classEntry("java.lang.ExceptionInInitializerError", ::java::lang::ExceptionInInitializerError),
	$classEntry("java.lang.FdLibm", ::java::lang::FdLibm),
	$classEntry("java.lang.FdLibm$Cbrt", ::java::lang::FdLibm$Cbrt),
	$classEntry("java.lang.FdLibm$Exp", ::java::lang::FdLibm$Exp),
	$classEntry("java.lang.FdLibm$Hypot", ::java::lang::FdLibm$Hypot),
	$classEntry("java.lang.FdLibm$Pow", ::java::lang::FdLibm$Pow),
	$classEntry("java.lang.Float", ::java::lang::Float),
	$classEntry("java.lang.FunctionalInterface", ::java::lang::FunctionalInterface),
	$classEntry("java.lang.IllegalAccessError", ::java::lang::IllegalAccessError),
	$classEntry("java.lang.IllegalAccessException", ::java::lang::IllegalAccessException),
	$classEntry("java.lang.IllegalArgumentException", ::java::lang::IllegalArgumentException),
	$classEntry("java.lang.IllegalCallerException", ::java::lang::IllegalCallerException),
	$classEntry("java.lang.IllegalMonitorStateException", ::java::lang::IllegalMonitorStateException),
	$classEntry("java.lang.IllegalStateException", ::java::lang::IllegalStateException),
	$classEntry("java.lang.IllegalThreadStateException", ::java::lang::IllegalThreadStateException),
	$classEntry("java.lang.IncompatibleClassChangeError", ::java::lang::IncompatibleClassChangeError),
	$classEntry("java.lang.IndexOutOfBoundsException", ::java::lang::IndexOutOfBoundsException),
	$classEntry("java.lang.InheritableThreadLocal", ::java::lang::InheritableThreadLocal),
	$classEntry("java.lang.InstantiationError", ::java::lang::InstantiationError),
	$classEntry("java.lang.InstantiationException", ::java::lang::InstantiationException),
	$classEntry("java.lang.Integer", ::java::lang::Integer),
	$classEntry("java.lang.Integer$IntegerCache", ::java::lang::Integer$IntegerCache),
	$classEntry("java.lang.InternalError", ::java::lang::InternalError),
	$classEntry("java.lang.InterruptedException", ::java::lang::InterruptedException),
	$classEntry("java.lang.Iterable", ::java::lang::Iterable),
	$classEntry("java.lang.LayerInstantiationException", ::java::lang::LayerInstantiationException),
	$classEntry("java.lang.LinkageError", ::java::lang::LinkageError),
	$classEntry("java.lang.LiveStackFrame", ::java::lang::LiveStackFrame),
	$classEntry("java.lang.LiveStackFrame$PrimitiveSlot", ::java::lang::LiveStackFrame$PrimitiveSlot),
	$classEntry("java.lang.LiveStackFrameInfo", ::java::lang::LiveStackFrameInfo),
	$classEntry("java.lang.LiveStackFrameInfo$PrimitiveSlot32", ::java::lang::LiveStackFrameInfo$PrimitiveSlot32),
	$classEntry("java.lang.LiveStackFrameInfo$PrimitiveSlot64", ::java::lang::LiveStackFrameInfo$PrimitiveSlot64),
	$classEntry("java.lang.Long", ::java::lang::Long),
	$classEntry("java.lang.Long$LongCache", ::java::lang::Long$LongCache),
	$classEntry("java.lang.Math", ::java::lang::Math),
	$classEntry("java.lang.Math$RandomNumberGeneratorHolder", ::java::lang::Math$RandomNumberGeneratorHolder),
	$classEntry("java.lang.Module", ::java::lang::Module),
	$classEntry("java.lang.Module$1", ::java::lang::Module$1),
	$classEntry("java.lang.Module$1DummyModuleInfo", ::java::lang::Module$1DummyModuleInfo),
	$classEntry("java.lang.Module$2", ::java::lang::Module$2),
	$classEntry("java.lang.Module$ArchivedData", ::java::lang::Module$ArchivedData),
	$classEntry("java.lang.Module$ReflectionData", ::java::lang::Module$ReflectionData),
	$classEntry("java.lang.ModuleLayer", ::java::lang::ModuleLayer),
	$classEntry("java.lang.ModuleLayer$Controller", ::java::lang::ModuleLayer$Controller),
	$classEntry("java.lang.NamedPackage", ::java::lang::NamedPackage),
	$classEntry("java.lang.NegativeArraySizeException", ::java::lang::NegativeArraySizeException),
	$classEntry("java.lang.NoClassDefFoundError", ::java::lang::NoClassDefFoundError),
	$classEntry("java.lang.NoSuchFieldError", ::java::lang::NoSuchFieldError),
	$classEntry("java.lang.NoSuchFieldException", ::java::lang::NoSuchFieldException),
	$classEntry("java.lang.NoSuchMethodError", ::java::lang::NoSuchMethodError),
	$classEntry("java.lang.NoSuchMethodException", ::java::lang::NoSuchMethodException),
	$classEntry("java.lang.NullPointerException", ::java::lang::NullPointerException),
	$classEntry("java.lang.Number", ::java::lang::Number),
	$classEntry("java.lang.NumberFormatException", ::java::lang::NumberFormatException),
	$classEntry("java.lang.Object", ::java::lang::Object),
	$classEntry("java.lang.OutOfMemoryError", ::java::lang::OutOfMemoryError),
	$classEntry("java.lang.Override", ::java::lang::Override),
	$classEntry("java.lang.Package", ::java::lang::Package),
	$classEntry("java.lang.Package$1PackageInfoProxy", ::java::lang::Package$1PackageInfoProxy),
	$classEntry("java.lang.Package$VersionInfo", ::java::lang::Package$VersionInfo),
	$classEntry("java.lang.Process", ::java::lang::Process),
	$classEntry("java.lang.Process$1", ::java::lang::Process$1),
	$classEntry("java.lang.Process$CharsetHolder", ::java::lang::Process$CharsetHolder),
	$classEntry("java.lang.Process$PipeInputStream", ::java::lang::Process$PipeInputStream),
	$classEntry("java.lang.ProcessBuilder", ::java::lang::ProcessBuilder),
	$classEntry("java.lang.ProcessBuilder$NullInputStream", ::java::lang::ProcessBuilder$NullInputStream),
	$classEntry("java.lang.ProcessBuilder$NullOutputStream", ::java::lang::ProcessBuilder$NullOutputStream),
	$classEntry("java.lang.ProcessBuilder$Redirect", ::java::lang::ProcessBuilder$Redirect),
	$classEntry("java.lang.ProcessBuilder$Redirect$1", ::java::lang::ProcessBuilder$Redirect$1),
	$classEntry("java.lang.ProcessBuilder$Redirect$2", ::java::lang::ProcessBuilder$Redirect$2),
	$classEntry("java.lang.ProcessBuilder$Redirect$3", ::java::lang::ProcessBuilder$Redirect$3),
	$classEntry("java.lang.ProcessBuilder$Redirect$4", ::java::lang::ProcessBuilder$Redirect$4),
	$classEntry("java.lang.ProcessBuilder$Redirect$5", ::java::lang::ProcessBuilder$Redirect$5),
	$classEntry("java.lang.ProcessBuilder$Redirect$6", ::java::lang::ProcessBuilder$Redirect$6),
	$classEntry("java.lang.ProcessBuilder$Redirect$Type", ::java::lang::ProcessBuilder$Redirect$Type),
	$classEntry("java.lang.ProcessBuilder$RedirectPipeImpl", ::java::lang::ProcessBuilder$RedirectPipeImpl),
	$classEntry("java.lang.ProcessEnvironment", ::java::lang::ProcessEnvironment),
	$classEntry("java.lang.ProcessEnvironment$ExternalData", ::java::lang::ProcessEnvironment$ExternalData),
	$classEntry("java.lang.ProcessEnvironment$StringEntry", ::java::lang::ProcessEnvironment$StringEntry),
	$classEntry("java.lang.ProcessEnvironment$StringEntrySet", ::java::lang::ProcessEnvironment$StringEntrySet),
	$classEntry("java.lang.ProcessEnvironment$StringEntrySet$1", ::java::lang::ProcessEnvironment$StringEntrySet$1),
	$classEntry("java.lang.ProcessEnvironment$StringEntrySet$2", ::java::lang::ProcessEnvironment$StringEntrySet$2),
	$classEntry("java.lang.ProcessEnvironment$StringEnvironment", ::java::lang::ProcessEnvironment$StringEnvironment),
	$classEntry("java.lang.ProcessEnvironment$StringKeySet", ::java::lang::ProcessEnvironment$StringKeySet),
	$classEntry("java.lang.ProcessEnvironment$StringKeySet$1", ::java::lang::ProcessEnvironment$StringKeySet$1),
	$classEntry("java.lang.ProcessEnvironment$StringValues", ::java::lang::ProcessEnvironment$StringValues),
	$classEntry("java.lang.ProcessEnvironment$StringValues$1", ::java::lang::ProcessEnvironment$StringValues$1),
	$classEntry("java.lang.ProcessEnvironment$Value", ::java::lang::ProcessEnvironment$Value),
	$classEntry("java.lang.ProcessEnvironment$Variable", ::java::lang::ProcessEnvironment$Variable),
	$classEntry("java.lang.ProcessHandle", ::java::lang::ProcessHandle),
	$classEntry("java.lang.ProcessHandle$Info", ::java::lang::ProcessHandle$Info),
	$classEntry("java.lang.ProcessHandleImpl", ::java::lang::ProcessHandleImpl),
	$classEntry("java.lang.ProcessHandleImpl$1", ::java::lang::ProcessHandleImpl$1),
	$classEntry("java.lang.ProcessHandleImpl$ExitCompletion", ::java::lang::ProcessHandleImpl$ExitCompletion),
	$classEntry("java.lang.ProcessHandleImpl$Info", ::java::lang::ProcessHandleImpl$Info),
	$classEntry("java.lang.ProcessImpl", ::java::lang::ProcessImpl),
	$classEntry("java.lang.ProcessImpl$1", ::java::lang::ProcessImpl$1),
	$classEntry("java.lang.ProcessImpl$DeferredCloseInputStream", ::java::lang::ProcessImpl$DeferredCloseInputStream),
	$classEntry("java.lang.ProcessImpl$DeferredCloseProcessPipeInputStream", ::java::lang::ProcessImpl$DeferredCloseProcessPipeInputStream),
	$classEntry("java.lang.ProcessImpl$LaunchMechanism", ::java::lang::ProcessImpl$LaunchMechanism),
	$classEntry("java.lang.ProcessImpl$Platform", ::java::lang::ProcessImpl$Platform),
	$classEntry("java.lang.ProcessImpl$ProcessPipeInputStream", ::java::lang::ProcessImpl$ProcessPipeInputStream),
	$classEntry("java.lang.ProcessImpl$ProcessPipeOutputStream", ::java::lang::ProcessImpl$ProcessPipeOutputStream),
	$classEntry("java.lang.PublicMethods", ::java::lang::PublicMethods),
	$classEntry("java.lang.PublicMethods$Key", ::java::lang::PublicMethods$Key),
	$classEntry("java.lang.PublicMethods$MethodList", ::java::lang::PublicMethods$MethodList),
	$classEntry("java.lang.Readable", ::java::lang::Readable),
	$classEntry("java.lang.Record", ::java::lang::Record),
	$classEntry("java.lang.ReflectiveOperationException", ::java::lang::ReflectiveOperationException),
	$classEntry("java.lang.Runnable", ::java::lang::Runnable),
	$classEntry("java.lang.Runtime", ::java::lang::Runtime),
	$classEntry("java.lang.Runtime$Version", ::java::lang::Runtime$Version),
	$classEntry("java.lang.Runtime$VersionPattern", ::java::lang::Runtime$VersionPattern),
	$classEntry("java.lang.RuntimeException", ::java::lang::RuntimeException),
	$classEntry("java.lang.RuntimePermission", ::java::lang::RuntimePermission),
	$classEntry("java.lang.SafeVarargs", ::java::lang::SafeVarargs),
	$classEntry("java.lang.SecurityException", ::java::lang::SecurityException),
	$classEntry("java.lang.SecurityManager", ::java::lang::SecurityManager),
	$classEntry("java.lang.SecurityManager$1", ::java::lang::SecurityManager$1),
	$classEntry("java.lang.SecurityManager$2", ::java::lang::SecurityManager$2),
	$classEntry("java.lang.Short", ::java::lang::Short),
	$classEntry("java.lang.Short$ShortCache", ::java::lang::Short$ShortCache),
	$classEntry("java.lang.Shutdown", ::java::lang::Shutdown),
	$classEntry("java.lang.Shutdown$Lock", ::java::lang::Shutdown$Lock),
	$classEntry("java.lang.StackFrameInfo", ::java::lang::StackFrameInfo),
	$classEntry("java.lang.StackOverflowError", ::java::lang::StackOverflowError),
	$classEntry("java.lang.StackStreamFactory", ::java::lang::StackStreamFactory),
	$classEntry("java.lang.StackStreamFactory$1", ::java::lang::StackStreamFactory$1),
	$classEntry("java.lang.StackStreamFactory$AbstractStackWalker", ::java::lang::StackStreamFactory$AbstractStackWalker),
	$classEntry("java.lang.StackStreamFactory$CallerClassFinder", ::java::lang::StackStreamFactory$CallerClassFinder),
	$classEntry("java.lang.StackStreamFactory$CallerClassFinder$ClassBuffer", ::java::lang::StackStreamFactory$CallerClassFinder$ClassBuffer),
	$classEntry("java.lang.StackStreamFactory$FrameBuffer", ::java::lang::StackStreamFactory$FrameBuffer),
	$classEntry("java.lang.StackStreamFactory$LiveStackInfoTraverser", ::java::lang::StackStreamFactory$LiveStackInfoTraverser),
	$classEntry("java.lang.StackStreamFactory$LiveStackInfoTraverser$LiveStackFrameBuffer", ::java::lang::StackStreamFactory$LiveStackInfoTraverser$LiveStackFrameBuffer),
	$classEntry("java.lang.StackStreamFactory$StackFrameTraverser", ::java::lang::StackStreamFactory$StackFrameTraverser),
	$classEntry("java.lang.StackStreamFactory$StackFrameTraverser$StackFrameBuffer", ::java::lang::StackStreamFactory$StackFrameTraverser$StackFrameBuffer),
	$classEntry("java.lang.StackStreamFactory$WalkerState", ::java::lang::StackStreamFactory$WalkerState),
	$classEntry("java.lang.StackTraceElement", ::java::lang::StackTraceElement),
	$classEntry("java.lang.StackTraceElement$HashedModules", ::java::lang::StackTraceElement$HashedModules),
	$classEntry("java.lang.StackWalker", ::java::lang::StackWalker),
	$classEntry("java.lang.StackWalker$ExtendedOption", ::java::lang::StackWalker$ExtendedOption),
	$classEntry("java.lang.StackWalker$Option", ::java::lang::StackWalker$Option),
	$classEntry("java.lang.StackWalker$StackFrame", ::java::lang::StackWalker$StackFrame),
	$classEntry("java.lang.StrictMath", ::java::lang::StrictMath),
	$classEntry("java.lang.StrictMath$RandomNumberGeneratorHolder", ::java::lang::StrictMath$RandomNumberGeneratorHolder),
	$classEntry("java.lang.String", ::java::lang::String),
	$classEntry("java.lang.String$CaseInsensitiveComparator", ::java::lang::String$CaseInsensitiveComparator),
	$classEntry("java.lang.StringBuffer", ::java::lang::StringBuffer),
	$classEntry("java.lang.StringBuilder", ::java::lang::StringBuilder),
	$classEntry("java.lang.StringCoding", ::java::lang::StringCoding),
	$classEntry("java.lang.StringConcatHelper", ::java::lang::StringConcatHelper),
	$classEntry("java.lang.StringIndexOutOfBoundsException", ::java::lang::StringIndexOutOfBoundsException),
	$classEntry("java.lang.StringLatin1", ::java::lang::StringLatin1),
	$classEntry("java.lang.StringLatin1$CharsSpliterator", ::java::lang::StringLatin1$CharsSpliterator),
	$classEntry("java.lang.StringLatin1$LinesSpliterator", ::java::lang::StringLatin1$LinesSpliterator),
	$classEntry("java.lang.StringUTF16", ::java::lang::StringUTF16),
	$classEntry("java.lang.StringUTF16$CharsSpliterator", ::java::lang::StringUTF16$CharsSpliterator),
	$classEntry("java.lang.StringUTF16$CodePointsSpliterator", ::java::lang::StringUTF16$CodePointsSpliterator),
	$classEntry("java.lang.StringUTF16$LinesSpliterator", ::java::lang::StringUTF16$LinesSpliterator),
	$classEntry("java.lang.SuppressWarnings", ::java::lang::SuppressWarnings),
	$classEntry("java.lang.System", ::java::lang::System),
	$classEntry("java.lang.System$1", ::java::lang::System$1),
	$classEntry("java.lang.System$2", ::java::lang::System$2),
	$classEntry("java.lang.System$CallersHolder", ::java::lang::System$CallersHolder),
	$classEntry("java.lang.System$Logger", ::java::lang::System$Logger),
	$classEntry("java.lang.System$Logger$Level", ::java::lang::System$Logger$Level),
	$classEntry("java.lang.System$LoggerFinder", ::java::lang::System$LoggerFinder),
	$classEntry("java.lang.Terminator", ::java::lang::Terminator),
	$classEntry("java.lang.Terminator$1", ::java::lang::Terminator$1),
	$classEntry("java.lang.Thread", ::java::lang::Thread),
	$classEntry("java.lang.Thread$1", ::java::lang::Thread$1),
	$classEntry("java.lang.Thread$Caches", ::java::lang::Thread$Caches),
	$classEntry("java.lang.Thread$State", ::java::lang::Thread$State),
	$classEntry("java.lang.Thread$UncaughtExceptionHandler", ::java::lang::Thread$UncaughtExceptionHandler),
	$classEntry("java.lang.Thread$WeakClassKey", ::java::lang::Thread$WeakClassKey),
	$classEntry("java.lang.ThreadDeath", ::java::lang::ThreadDeath),
	$classEntry("java.lang.ThreadGroup", ::java::lang::ThreadGroup),
	$classEntry("java.lang.ThreadLocal", ::java::lang::ThreadLocal),
	$classEntry("java.lang.ThreadLocal$SuppliedThreadLocal", ::java::lang::ThreadLocal$SuppliedThreadLocal),
	$classEntry("java.lang.ThreadLocal$ThreadLocalMap", ::java::lang::ThreadLocal$ThreadLocalMap),
	$classEntry("java.lang.ThreadLocal$ThreadLocalMap$Entry", ::java::lang::ThreadLocal$ThreadLocalMap$Entry),
	$classEntry("java.lang.Throwable", ::java::lang::Throwable),
	$classEntry("java.lang.Throwable$PrintStreamOrWriter", ::java::lang::Throwable$PrintStreamOrWriter),
	$classEntry("java.lang.Throwable$SentinelHolder", ::java::lang::Throwable$SentinelHolder),
	$classEntry("java.lang.Throwable$WrappedPrintStream", ::java::lang::Throwable$WrappedPrintStream),
	$classEntry("java.lang.Throwable$WrappedPrintWriter", ::java::lang::Throwable$WrappedPrintWriter),
	$classEntry("java.lang.TypeNotPresentException", ::java::lang::TypeNotPresentException),
	$classEntry("java.lang.UnknownError", ::java::lang::UnknownError),
	$classEntry("java.lang.UnsatisfiedLinkError", ::java::lang::UnsatisfiedLinkError),
	$classEntry("java.lang.UnsupportedClassVersionError", ::java::lang::UnsupportedClassVersionError),
	$classEntry("java.lang.UnsupportedOperationException", ::java::lang::UnsupportedOperationException),
	$classEntry("java.lang.VerifyError", ::java::lang::VerifyError),
	$classEntry("java.lang.VersionProps", ::java::lang::VersionProps),
	$classEntry("java.lang.VirtualMachineError", ::java::lang::VirtualMachineError),
	$classEntry("java.lang.Void", ::java::lang::Void),
	$classEntry("java.lang.WeakPairMap", ::java::lang::WeakPairMap),
	$classEntry("java.lang.WeakPairMap$Pair", ::java::lang::WeakPairMap$Pair),
	$classEntry("java.lang.WeakPairMap$Pair$Lookup", ::java::lang::WeakPairMap$Pair$Lookup),
	$classEntry("java.lang.WeakPairMap$Pair$Weak", ::java::lang::WeakPairMap$Pair$Weak),
	$classEntry("java.lang.WeakPairMap$Pair$Weak$1", ::java::lang::WeakPairMap$Pair$Weak$1),
	$classEntry("java.lang.WeakPairMap$WeakRefPeer", ::java::lang::WeakPairMap$WeakRefPeer),
	$classEntry("java.lang.annotation.Annotation", ::java::lang::annotation::Annotation),
	$classEntry("java.lang.annotation.AnnotationFormatError", ::java::lang::annotation::AnnotationFormatError),
	$classEntry("java.lang.annotation.AnnotationTypeMismatchException", ::java::lang::annotation::AnnotationTypeMismatchException),
	$classEntry("java.lang.annotation.Documented", ::java::lang::annotation::Documented),
	$classEntry("java.lang.annotation.ElementType", ::java::lang::annotation::ElementType),
	$classEntry("java.lang.annotation.IncompleteAnnotationException", ::java::lang::annotation::IncompleteAnnotationException),
	$classEntry("java.lang.annotation.Inherited", ::java::lang::annotation::Inherited),
	$classEntry("java.lang.annotation.Native", ::java::lang::annotation::Native),
	$classEntry("java.lang.annotation.Repeatable", ::java::lang::annotation::Repeatable),
	$classEntry("java.lang.annotation.Retention", ::java::lang::annotation::Retention),
	$classEntry("java.lang.annotation.RetentionPolicy", ::java::lang::annotation::RetentionPolicy),
	$classEntry("java.lang.annotation.Target", ::java::lang::annotation::Target),
	$classEntry("java.lang.constant.AsTypeMethodHandleDesc", ::java::lang::constant::AsTypeMethodHandleDesc),
	$classEntry("java.lang.constant.ClassDesc", ::java::lang::constant::ClassDesc),
	$classEntry("java.lang.constant.Constable", ::java::lang::constant::Constable),
	$classEntry("java.lang.constant.ConstantDesc", ::java::lang::constant::ConstantDesc),
	$classEntry("java.lang.constant.ConstantDescs", ::java::lang::constant::ConstantDescs),
	$classEntry("java.lang.constant.ConstantUtils", ::java::lang::constant::ConstantUtils),
	$classEntry("java.lang.constant.DirectMethodHandleDesc", ::java::lang::constant::DirectMethodHandleDesc),
	$classEntry("java.lang.constant.DirectMethodHandleDesc$1", ::java::lang::constant::DirectMethodHandleDesc$1),
	$classEntry("java.lang.constant.DirectMethodHandleDesc$Kind", ::java::lang::constant::DirectMethodHandleDesc$Kind),
	$classEntry("java.lang.constant.DirectMethodHandleDescImpl", ::java::lang::constant::DirectMethodHandleDescImpl),
	$classEntry("java.lang.constant.DirectMethodHandleDescImpl$1", ::java::lang::constant::DirectMethodHandleDescImpl$1),
	$classEntry("java.lang.constant.DynamicCallSiteDesc", ::java::lang::constant::DynamicCallSiteDesc),
	$classEntry("java.lang.constant.DynamicConstantDesc", ::java::lang::constant::DynamicConstantDesc),
	$classEntry("java.lang.constant.DynamicConstantDesc$AnonymousDynamicConstantDesc", ::java::lang::constant::DynamicConstantDesc$AnonymousDynamicConstantDesc),
	$classEntry("java.lang.constant.DynamicConstantDesc$CanonicalMapHolder", ::java::lang::constant::DynamicConstantDesc$CanonicalMapHolder),
	$classEntry("java.lang.constant.MethodHandleDesc", ::java::lang::constant::MethodHandleDesc),
	$classEntry("java.lang.constant.MethodHandleDesc$1", ::java::lang::constant::MethodHandleDesc$1),
	$classEntry("java.lang.constant.MethodTypeDesc", ::java::lang::constant::MethodTypeDesc),
	$classEntry("java.lang.constant.MethodTypeDescImpl", ::java::lang::constant::MethodTypeDescImpl),
	$classEntry("java.lang.constant.MethodTypeDescImpl$1", ::java::lang::constant::MethodTypeDescImpl$1),
	$classEntry("java.lang.constant.PrimitiveClassDescImpl", ::java::lang::constant::PrimitiveClassDescImpl),
	$classEntry("java.lang.constant.ReferenceClassDescImpl", ::java::lang::constant::ReferenceClassDescImpl),
	$classEntry("java.lang.invoke.AbstractConstantGroup", ::java::lang::invoke::AbstractConstantGroup),
	$classEntry("java.lang.invoke.AbstractConstantGroup$AsIterator", ::java::lang::invoke::AbstractConstantGroup$AsIterator),
	$classEntry("java.lang.invoke.AbstractConstantGroup$AsList", ::java::lang::invoke::AbstractConstantGroup$AsList),
	$classEntry("java.lang.invoke.AbstractConstantGroup$BSCIWithCache", ::java::lang::invoke::AbstractConstantGroup$BSCIWithCache),
	$classEntry("java.lang.invoke.AbstractConstantGroup$SubGroup", ::java::lang::invoke::AbstractConstantGroup$SubGroup),
	$classEntry("java.lang.invoke.AbstractConstantGroup$WithCache", ::java::lang::invoke::AbstractConstantGroup$WithCache),
	$classEntry("java.lang.invoke.AbstractValidatingLambdaMetafactory", ::java::lang::invoke::AbstractValidatingLambdaMetafactory),
	$classEntry("java.lang.invoke.BootstrapCallInfo", ::java::lang::invoke::BootstrapCallInfo),
	$classEntry("java.lang.invoke.BootstrapMethodInvoker", ::java::lang::invoke::BootstrapMethodInvoker),
	$classEntry("java.lang.invoke.BootstrapMethodInvoker$PullAdapter", ::java::lang::invoke::BootstrapMethodInvoker$PullAdapter),
	$classEntry("java.lang.invoke.BootstrapMethodInvoker$PushAdapter", ::java::lang::invoke::BootstrapMethodInvoker$PushAdapter),
	$classEntry("java.lang.invoke.BootstrapMethodInvoker$VM_BSCI", ::java::lang::invoke::BootstrapMethodInvoker$VM_BSCI),
	$classEntry("java.lang.invoke.BoundMethodHandle", ::java::lang::invoke::BoundMethodHandle),
	$classEntry("java.lang.invoke.BoundMethodHandle$1", ::java::lang::invoke::BoundMethodHandle$1),
	$classEntry("java.lang.invoke.BoundMethodHandle$Specializer", ::java::lang::invoke::BoundMethodHandle$Specializer),
	$classEntry("java.lang.invoke.BoundMethodHandle$Specializer$Factory", ::java::lang::invoke::BoundMethodHandle$Specializer$Factory),
	$classEntry("java.lang.invoke.BoundMethodHandle$SpeciesData", ::java::lang::invoke::BoundMethodHandle$SpeciesData),
	$classEntry("java.lang.invoke.BoundMethodHandle$Species_L", ::java::lang::invoke::BoundMethodHandle$Species_L),
	$classEntry("java.lang.invoke.CallSite", ::java::lang::invoke::CallSite),
	$classEntry("java.lang.invoke.ClassSpecializer", ::java::lang::invoke::ClassSpecializer),
	$classEntry("java.lang.invoke.ClassSpecializer$1", ::java::lang::invoke::ClassSpecializer$1),
	$classEntry("java.lang.invoke.ClassSpecializer$Factory", ::java::lang::invoke::ClassSpecializer$Factory),
	$classEntry("java.lang.invoke.ClassSpecializer$Factory$1", ::java::lang::invoke::ClassSpecializer$Factory$1),
	$classEntry("java.lang.invoke.ClassSpecializer$Factory$1Var", ::java::lang::invoke::ClassSpecializer$Factory$1Var),
	$classEntry("java.lang.invoke.ClassSpecializer$SpeciesData", ::java::lang::invoke::ClassSpecializer$SpeciesData),
	$classEntry("java.lang.invoke.ConstantBootstraps", ::java::lang::invoke::ConstantBootstraps),
	$classEntry("java.lang.invoke.ConstantCallSite", ::java::lang::invoke::ConstantCallSite),
	$classEntry("java.lang.invoke.ConstantGroup", ::java::lang::invoke::ConstantGroup),
	$classEntry("java.lang.invoke.ConstantGroup$1", ::java::lang::invoke::ConstantGroup$1),
	$classEntry("java.lang.invoke.ConstantGroup$1Impl", ::java::lang::invoke::ConstantGroup$1Impl),
	$classEntry("java.lang.invoke.DelegatingMethodHandle", ::java::lang::invoke::DelegatingMethodHandle),
	$classEntry("java.lang.invoke.DelegatingMethodHandle$Holder", ::java::lang::invoke::DelegatingMethodHandle$Holder),
	$classEntry("java.lang.invoke.DirectMethodHandle", ::java::lang::invoke::DirectMethodHandle),
	$classEntry("java.lang.invoke.DirectMethodHandle$1", ::java::lang::invoke::DirectMethodHandle$1),
	$classEntry("java.lang.invoke.DirectMethodHandle$2", ::java::lang::invoke::DirectMethodHandle$2),
	$classEntry("java.lang.invoke.DirectMethodHandle$Accessor", ::java::lang::invoke::DirectMethodHandle$Accessor),
	$classEntry("java.lang.invoke.DirectMethodHandle$Constructor", ::java::lang::invoke::DirectMethodHandle$Constructor),
	$classEntry("java.lang.invoke.DirectMethodHandle$EnsureInitialized", ::java::lang::invoke::DirectMethodHandle$EnsureInitialized),
	$classEntry("java.lang.invoke.DirectMethodHandle$Holder", ::java::lang::invoke::DirectMethodHandle$Holder),
	$classEntry("java.lang.invoke.DirectMethodHandle$Interface", ::java::lang::invoke::DirectMethodHandle$Interface),
	$classEntry("java.lang.invoke.DirectMethodHandle$Special", ::java::lang::invoke::DirectMethodHandle$Special),
	$classEntry("java.lang.invoke.DirectMethodHandle$StaticAccessor", ::java::lang::invoke::DirectMethodHandle$StaticAccessor),
	$classEntry("java.lang.invoke.GenerateJLIClassesHelper", ::java::lang::invoke::GenerateJLIClassesHelper),
	$classEntry("java.lang.invoke.GenerateJLIClassesHelper$HolderClassBuilder", ::java::lang::invoke::GenerateJLIClassesHelper$HolderClassBuilder),
	$classEntry("java.lang.invoke.IndirectVarHandle", ::java::lang::invoke::IndirectVarHandle),
	$classEntry("java.lang.invoke.InfoFromMemberName", ::java::lang::invoke::InfoFromMemberName),
	$classEntry("java.lang.invoke.InfoFromMemberName$1", ::java::lang::invoke::InfoFromMemberName$1),
	$classEntry("java.lang.invoke.InjectedProfile", ::java::lang::invoke::InjectedProfile),
	$classEntry("java.lang.invoke.InnerClassLambdaMetafactory", ::java::lang::invoke::InnerClassLambdaMetafactory),
	$classEntry("java.lang.invoke.InnerClassLambdaMetafactory$1", ::java::lang::invoke::InnerClassLambdaMetafactory$1),
	$classEntry("java.lang.invoke.InnerClassLambdaMetafactory$2", ::java::lang::invoke::InnerClassLambdaMetafactory$2),
	$classEntry("java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator", ::java::lang::invoke::InnerClassLambdaMetafactory$ForwardingMethodGenerator),
	$classEntry("java.lang.invoke.InvokeDynamic", ::java::lang::invoke::InvokeDynamic),
	$classEntry("java.lang.invoke.InvokerBytecodeGenerator", ::java::lang::invoke::InvokerBytecodeGenerator),
	$classEntry("java.lang.invoke.InvokerBytecodeGenerator$1", ::java::lang::invoke::InvokerBytecodeGenerator$1),
	$classEntry("java.lang.invoke.InvokerBytecodeGenerator$2", ::java::lang::invoke::InvokerBytecodeGenerator$2),
	$classEntry("java.lang.invoke.InvokerBytecodeGenerator$BytecodeGenerationException", ::java::lang::invoke::InvokerBytecodeGenerator$BytecodeGenerationException),
	$classEntry("java.lang.invoke.InvokerBytecodeGenerator$ClassData", ::java::lang::invoke::InvokerBytecodeGenerator$ClassData),
	$classEntry("java.lang.invoke.Invokers", ::java::lang::invoke::Invokers),
	$classEntry("java.lang.invoke.Invokers$Holder", ::java::lang::invoke::Invokers$Holder),
	$classEntry("java.lang.invoke.Invokers$Lazy", ::java::lang::invoke::Invokers$Lazy),
	$classEntry("java.lang.invoke.LambdaConversionException", ::java::lang::invoke::LambdaConversionException),
	$classEntry("java.lang.invoke.LambdaForm", ::java::lang::invoke::LambdaForm),
	$classEntry("java.lang.invoke.LambdaForm$1", ::java::lang::invoke::LambdaForm$1),
	$classEntry("java.lang.invoke.LambdaForm$BasicType", ::java::lang::invoke::LambdaForm$BasicType),
	$classEntry("java.lang.invoke.LambdaForm$Compiled", ::java::lang::invoke::LambdaForm$Compiled),
	$classEntry("java.lang.invoke.LambdaForm$Holder", ::java::lang::invoke::LambdaForm$Holder),
	$classEntry("java.lang.invoke.LambdaForm$Kind", ::java::lang::invoke::LambdaForm$Kind),
	$classEntry("java.lang.invoke.LambdaForm$Name", ::java::lang::invoke::LambdaForm$Name),
	$classEntry("java.lang.invoke.LambdaForm$NamedFunction", ::java::lang::invoke::LambdaForm$NamedFunction),
	$classEntry("java.lang.invoke.LambdaFormBuffer", ::java::lang::invoke::LambdaFormBuffer),
	$classEntry("java.lang.invoke.LambdaFormEditor", ::java::lang::invoke::LambdaFormEditor),
	$classEntry("java.lang.invoke.LambdaFormEditor$1", ::java::lang::invoke::LambdaFormEditor$1),
	$classEntry("java.lang.invoke.LambdaFormEditor$Transform", ::java::lang::invoke::LambdaFormEditor$Transform),
	$classEntry("java.lang.invoke.LambdaFormEditor$TransformKey", ::java::lang::invoke::LambdaFormEditor$TransformKey),
	$classEntry("java.lang.invoke.LambdaMetafactory", ::java::lang::invoke::LambdaMetafactory),
	$classEntry("java.lang.invoke.LambdaProxyClassArchive", ::java::lang::invoke::LambdaProxyClassArchive),
	$classEntry("java.lang.invoke.MemberName", ::java::lang::invoke::MemberName),
	$classEntry("java.lang.invoke.MemberName$Factory", ::java::lang::invoke::MemberName$Factory),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleBase", ::java::lang::invoke::MemoryAccessVarHandleBase),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleByteHelper", ::java::lang::invoke::MemoryAccessVarHandleByteHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleCharHelper", ::java::lang::invoke::MemoryAccessVarHandleCharHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleDoubleHelper", ::java::lang::invoke::MemoryAccessVarHandleDoubleHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleFloatHelper", ::java::lang::invoke::MemoryAccessVarHandleFloatHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleIntHelper", ::java::lang::invoke::MemoryAccessVarHandleIntHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleLongHelper", ::java::lang::invoke::MemoryAccessVarHandleLongHelper),
	$classEntry("java.lang.invoke.MemoryAccessVarHandleShortHelper", ::java::lang::invoke::MemoryAccessVarHandleShortHelper),
	$classEntry("java.lang.invoke.MethodHandle", ::java::lang::invoke::MethodHandle),
	$classEntry("java.lang.invoke.MethodHandle$1", ::java::lang::invoke::MethodHandle$1),
	$classEntry("java.lang.invoke.MethodHandle$PolymorphicSignature", ::java::lang::invoke::MethodHandle$PolymorphicSignature),
	$classEntry("java.lang.invoke.MethodHandleImpl", ::java::lang::invoke::MethodHandleImpl),
	$classEntry("java.lang.invoke.MethodHandleImpl$1", ::java::lang::invoke::MethodHandleImpl$1),
	$classEntry("java.lang.invoke.MethodHandleImpl$2", ::java::lang::invoke::MethodHandleImpl$2),
	$classEntry("java.lang.invoke.MethodHandleImpl$ArrayAccess", ::java::lang::invoke::MethodHandleImpl$ArrayAccess),
	$classEntry("java.lang.invoke.MethodHandleImpl$ArrayAccessor", ::java::lang::invoke::MethodHandleImpl$ArrayAccessor),
	$classEntry("java.lang.invoke.MethodHandleImpl$ArrayAccessor$1", ::java::lang::invoke::MethodHandleImpl$ArrayAccessor$1),
	$classEntry("java.lang.invoke.MethodHandleImpl$AsVarargsCollector", ::java::lang::invoke::MethodHandleImpl$AsVarargsCollector),
	$classEntry("java.lang.invoke.MethodHandleImpl$BindCaller", ::java::lang::invoke::MethodHandleImpl$BindCaller),
	$classEntry("java.lang.invoke.MethodHandleImpl$BindCaller$1", ::java::lang::invoke::MethodHandleImpl$BindCaller$1),
	$classEntry("java.lang.invoke.MethodHandleImpl$CasesHolder", ::java::lang::invoke::MethodHandleImpl$CasesHolder),
	$classEntry("java.lang.invoke.MethodHandleImpl$CountingWrapper", ::java::lang::invoke::MethodHandleImpl$CountingWrapper),
	$classEntry("java.lang.invoke.MethodHandleImpl$CountingWrapper$1", ::java::lang::invoke::MethodHandleImpl$CountingWrapper$1),
	$classEntry("java.lang.invoke.MethodHandleImpl$Intrinsic", ::java::lang::invoke::MethodHandleImpl$Intrinsic),
	$classEntry("java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle", ::java::lang::invoke::MethodHandleImpl$IntrinsicMethodHandle),
	$classEntry("java.lang.invoke.MethodHandleImpl$LoopClauses", ::java::lang::invoke::MethodHandleImpl$LoopClauses),
	$classEntry("java.lang.invoke.MethodHandleImpl$Makers", ::java::lang::invoke::MethodHandleImpl$Makers),
	$classEntry("java.lang.invoke.MethodHandleImpl$Makers$1", ::java::lang::invoke::MethodHandleImpl$Makers$1),
	$classEntry("java.lang.invoke.MethodHandleImpl$Makers$2", ::java::lang::invoke::MethodHandleImpl$Makers$2),
	$classEntry("java.lang.invoke.MethodHandleImpl$Makers$3", ::java::lang::invoke::MethodHandleImpl$Makers$3),
	$classEntry("java.lang.invoke.MethodHandleImpl$TableSwitchCacheKey", ::java::lang::invoke::MethodHandleImpl$TableSwitchCacheKey),
	$classEntry("java.lang.invoke.MethodHandleImpl$WrappedMember", ::java::lang::invoke::MethodHandleImpl$WrappedMember),
	$classEntry("java.lang.invoke.MethodHandleInfo", ::java::lang::invoke::MethodHandleInfo),
	$classEntry("java.lang.invoke.MethodHandleNatives", ::java::lang::invoke::MethodHandleNatives),
	$classEntry("java.lang.invoke.MethodHandleNatives$CallSiteContext", ::java::lang::invoke::MethodHandleNatives$CallSiteContext),
	$classEntry("java.lang.invoke.MethodHandleNatives$Constants", ::java::lang::invoke::MethodHandleNatives$Constants),
	$classEntry("java.lang.invoke.MethodHandleProxies", ::java::lang::invoke::MethodHandleProxies),
	$classEntry("java.lang.invoke.MethodHandleProxies$1", ::java::lang::invoke::MethodHandleProxies$1),
	$classEntry("java.lang.invoke.MethodHandleProxies$2", ::java::lang::invoke::MethodHandleProxies$2),
	$classEntry("java.lang.invoke.MethodHandleStatics", ::java::lang::invoke::MethodHandleStatics),
	$classEntry("java.lang.invoke.MethodHandles", ::java::lang::invoke::MethodHandles),
	$classEntry("java.lang.invoke.MethodHandles$1", ::java::lang::invoke::MethodHandles$1),
	$classEntry("java.lang.invoke.MethodHandles$Lookup", ::java::lang::invoke::MethodHandles$Lookup),
	$classEntry("java.lang.invoke.MethodHandles$Lookup$ClassDefiner", ::java::lang::invoke::MethodHandles$Lookup$ClassDefiner),
	$classEntry("java.lang.invoke.MethodHandles$Lookup$ClassFile", ::java::lang::invoke::MethodHandles$Lookup$ClassFile),
	$classEntry("java.lang.invoke.MethodHandles$Lookup$ClassOption", ::java::lang::invoke::MethodHandles$Lookup$ClassOption),
	$classEntry("java.lang.invoke.MethodType", ::java::lang::invoke::MethodType),
	$classEntry("java.lang.invoke.MethodType$ConcurrentWeakInternSet", ::java::lang::invoke::MethodType$ConcurrentWeakInternSet),
	$classEntry("java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry", ::java::lang::invoke::MethodType$ConcurrentWeakInternSet$WeakEntry),
	$classEntry("java.lang.invoke.MethodType$OffsetHolder", ::java::lang::invoke::MethodType$OffsetHolder),
	$classEntry("java.lang.invoke.MethodTypeForm", ::java::lang::invoke::MethodTypeForm),
	$classEntry("java.lang.invoke.MutableCallSite", ::java::lang::invoke::MutableCallSite),
	$classEntry("java.lang.invoke.NativeMethodHandle", ::java::lang::invoke::NativeMethodHandle),
	$classEntry("java.lang.invoke.NativeMethodHandle$Lazy", ::java::lang::invoke::NativeMethodHandle$Lazy),
	$classEntry("java.lang.invoke.ProxyClassesDumper", ::java::lang::invoke::ProxyClassesDumper),
	$classEntry("java.lang.invoke.ProxyClassesDumper$1", ::java::lang::invoke::ProxyClassesDumper$1),
	$classEntry("java.lang.invoke.ResolvedMethodName", ::java::lang::invoke::ResolvedMethodName),
	$classEntry("java.lang.invoke.SerializedLambda", ::java::lang::invoke::SerializedLambda),
	$classEntry("java.lang.invoke.SerializedLambda$1", ::java::lang::invoke::SerializedLambda$1),
	$classEntry("java.lang.invoke.SimpleMethodHandle", ::java::lang::invoke::SimpleMethodHandle),
	$classEntry("java.lang.invoke.StringConcatException", ::java::lang::invoke::StringConcatException),
	$classEntry("java.lang.invoke.StringConcatFactory", ::java::lang::invoke::StringConcatFactory),
	$classEntry("java.lang.invoke.StringConcatFactory$1", ::java::lang::invoke::StringConcatFactory$1),
	$classEntry("java.lang.invoke.StringConcatFactory$2", ::java::lang::invoke::StringConcatFactory$2),
	$classEntry("java.lang.invoke.StringConcatFactory$3", ::java::lang::invoke::StringConcatFactory$3),
	$classEntry("java.lang.invoke.SwitchPoint", ::java::lang::invoke::SwitchPoint),
	$classEntry("java.lang.invoke.TypeConvertingMethodAdapter", ::java::lang::invoke::TypeConvertingMethodAdapter),
	$classEntry("java.lang.invoke.TypeDescriptor", ::java::lang::invoke::TypeDescriptor),
	$classEntry("java.lang.invoke.TypeDescriptor$OfField", ::java::lang::invoke::TypeDescriptor$OfField),
	$classEntry("java.lang.invoke.TypeDescriptor$OfMethod", ::java::lang::invoke::TypeDescriptor$OfMethod),
	$classEntry("java.lang.invoke.VarForm", ::java::lang::invoke::VarForm),
	$classEntry("java.lang.invoke.VarHandle", ::java::lang::invoke::VarHandle),
	$classEntry("java.lang.invoke.VarHandle$1", ::java::lang::invoke::VarHandle$1),
	$classEntry("java.lang.invoke.VarHandle$2", ::java::lang::invoke::VarHandle$2),
	$classEntry("java.lang.invoke.VarHandle$AccessDescriptor", ::java::lang::invoke::VarHandle$AccessDescriptor),
	$classEntry("java.lang.invoke.VarHandle$AccessMode", ::java::lang::invoke::VarHandle$AccessMode),
	$classEntry("java.lang.invoke.VarHandle$AccessType", ::java::lang::invoke::VarHandle$AccessType),
	$classEntry("java.lang.invoke.VarHandle$TypesAndInvokers", ::java::lang::invoke::VarHandle$TypesAndInvokers),
	$classEntry("java.lang.invoke.VarHandle$VarHandleDesc", ::java::lang::invoke::VarHandle$VarHandleDesc),
	$classEntry("java.lang.invoke.VarHandle$VarHandleDesc$Kind", ::java::lang::invoke::VarHandle$VarHandleDesc$Kind),
	$classEntry("java.lang.invoke.VarHandleBooleans", ::java::lang::invoke::VarHandleBooleans),
	$classEntry("java.lang.invoke.VarHandleBooleans$Array", ::java::lang::invoke::VarHandleBooleans$Array),
	$classEntry("java.lang.invoke.VarHandleBooleans$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleBooleans$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleBooleans$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleBooleans$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleBooleans$FieldStaticReadOnly", ::java::lang::invoke::VarHandleBooleans$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleBooleans$FieldStaticReadWrite", ::java::lang::invoke::VarHandleBooleans$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsChars", ::java::lang::invoke::VarHandleByteArrayAsChars),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsChars$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsChars$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsChars$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsChars$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsChars$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsChars$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsDoubles", ::java::lang::invoke::VarHandleByteArrayAsDoubles),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsDoubles$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsDoubles$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsDoubles$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsDoubles$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsDoubles$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsFloats", ::java::lang::invoke::VarHandleByteArrayAsFloats),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsFloats$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsFloats$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsFloats$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsFloats$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsFloats$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsFloats$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsInts", ::java::lang::invoke::VarHandleByteArrayAsInts),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsInts$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsInts$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsInts$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsInts$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsInts$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsInts$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsLongs", ::java::lang::invoke::VarHandleByteArrayAsLongs),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsLongs$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsLongs$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsLongs$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsLongs$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsLongs$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsLongs$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsShorts", ::java::lang::invoke::VarHandleByteArrayAsShorts),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsShorts$ArrayHandle", ::java::lang::invoke::VarHandleByteArrayAsShorts$ArrayHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsShorts$ByteArrayViewVarHandle", ::java::lang::invoke::VarHandleByteArrayAsShorts$ByteArrayViewVarHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayAsShorts$ByteBufferHandle", ::java::lang::invoke::VarHandleByteArrayAsShorts$ByteBufferHandle),
	$classEntry("java.lang.invoke.VarHandleByteArrayBase", ::java::lang::invoke::VarHandleByteArrayBase),
	$classEntry("java.lang.invoke.VarHandleBytes", ::java::lang::invoke::VarHandleBytes),
	$classEntry("java.lang.invoke.VarHandleBytes$Array", ::java::lang::invoke::VarHandleBytes$Array),
	$classEntry("java.lang.invoke.VarHandleBytes$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleBytes$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleBytes$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleBytes$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleBytes$FieldStaticReadOnly", ::java::lang::invoke::VarHandleBytes$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleBytes$FieldStaticReadWrite", ::java::lang::invoke::VarHandleBytes$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleChars", ::java::lang::invoke::VarHandleChars),
	$classEntry("java.lang.invoke.VarHandleChars$Array", ::java::lang::invoke::VarHandleChars$Array),
	$classEntry("java.lang.invoke.VarHandleChars$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleChars$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleChars$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleChars$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleChars$FieldStaticReadOnly", ::java::lang::invoke::VarHandleChars$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleChars$FieldStaticReadWrite", ::java::lang::invoke::VarHandleChars$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleDoubles", ::java::lang::invoke::VarHandleDoubles),
	$classEntry("java.lang.invoke.VarHandleDoubles$Array", ::java::lang::invoke::VarHandleDoubles$Array),
	$classEntry("java.lang.invoke.VarHandleDoubles$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleDoubles$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleDoubles$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleDoubles$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleDoubles$FieldStaticReadOnly", ::java::lang::invoke::VarHandleDoubles$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleDoubles$FieldStaticReadWrite", ::java::lang::invoke::VarHandleDoubles$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleFloats", ::java::lang::invoke::VarHandleFloats),
	$classEntry("java.lang.invoke.VarHandleFloats$Array", ::java::lang::invoke::VarHandleFloats$Array),
	$classEntry("java.lang.invoke.VarHandleFloats$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleFloats$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleFloats$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleFloats$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleFloats$FieldStaticReadOnly", ::java::lang::invoke::VarHandleFloats$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleFloats$FieldStaticReadWrite", ::java::lang::invoke::VarHandleFloats$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleGuards", ::java::lang::invoke::VarHandleGuards),
	$classEntry("java.lang.invoke.VarHandleInts", ::java::lang::invoke::VarHandleInts),
	$classEntry("java.lang.invoke.VarHandleInts$Array", ::java::lang::invoke::VarHandleInts$Array),
	$classEntry("java.lang.invoke.VarHandleInts$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleInts$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleInts$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleInts$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleInts$FieldStaticReadOnly", ::java::lang::invoke::VarHandleInts$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleInts$FieldStaticReadWrite", ::java::lang::invoke::VarHandleInts$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleLongs", ::java::lang::invoke::VarHandleLongs),
	$classEntry("java.lang.invoke.VarHandleLongs$Array", ::java::lang::invoke::VarHandleLongs$Array),
	$classEntry("java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleLongs$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleLongs$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleLongs$FieldStaticReadOnly", ::java::lang::invoke::VarHandleLongs$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleLongs$FieldStaticReadWrite", ::java::lang::invoke::VarHandleLongs$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleReferences", ::java::lang::invoke::VarHandleReferences),
	$classEntry("java.lang.invoke.VarHandleReferences$Array", ::java::lang::invoke::VarHandleReferences$Array),
	$classEntry("java.lang.invoke.VarHandleReferences$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleReferences$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleReferences$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleReferences$FieldStaticReadOnly", ::java::lang::invoke::VarHandleReferences$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleReferences$FieldStaticReadWrite", ::java::lang::invoke::VarHandleReferences$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandleShorts", ::java::lang::invoke::VarHandleShorts),
	$classEntry("java.lang.invoke.VarHandleShorts$Array", ::java::lang::invoke::VarHandleShorts$Array),
	$classEntry("java.lang.invoke.VarHandleShorts$FieldInstanceReadOnly", ::java::lang::invoke::VarHandleShorts$FieldInstanceReadOnly),
	$classEntry("java.lang.invoke.VarHandleShorts$FieldInstanceReadWrite", ::java::lang::invoke::VarHandleShorts$FieldInstanceReadWrite),
	$classEntry("java.lang.invoke.VarHandleShorts$FieldStaticReadOnly", ::java::lang::invoke::VarHandleShorts$FieldStaticReadOnly),
	$classEntry("java.lang.invoke.VarHandleShorts$FieldStaticReadWrite", ::java::lang::invoke::VarHandleShorts$FieldStaticReadWrite),
	$classEntry("java.lang.invoke.VarHandles", ::java::lang::invoke::VarHandles),
	$classEntry("java.lang.invoke.VarHandles$1", ::java::lang::invoke::VarHandles$1),
	$classEntry("java.lang.invoke.VarHandles$2", ::java::lang::invoke::VarHandles$2),
	$classEntry("java.lang.invoke.VolatileCallSite", ::java::lang::invoke::VolatileCallSite),
	$classEntry("java.lang.invoke.WrongMethodTypeException", ::java::lang::invoke::WrongMethodTypeException),
	$classEntry("java.lang.module.Configuration", ::java::lang::module::Configuration),
	$classEntry("java.lang.module.FindException", ::java::lang::module::FindException),
	$classEntry("java.lang.module.InvalidModuleDescriptorException", ::java::lang::module::InvalidModuleDescriptorException),
	$classEntry("java.lang.module.ModuleDescriptor", ::java::lang::module::ModuleDescriptor),
	$classEntry("java.lang.module.ModuleDescriptor$1", ::java::lang::module::ModuleDescriptor$1),
	$classEntry("java.lang.module.ModuleDescriptor$Builder", ::java::lang::module::ModuleDescriptor$Builder),
	$classEntry("java.lang.module.ModuleDescriptor$Exports", ::java::lang::module::ModuleDescriptor$Exports),
	$classEntry("java.lang.module.ModuleDescriptor$Exports$Modifier", ::java::lang::module::ModuleDescriptor$Exports$Modifier),
	$classEntry("java.lang.module.ModuleDescriptor$Modifier", ::java::lang::module::ModuleDescriptor$Modifier),
	$classEntry("java.lang.module.ModuleDescriptor$Opens", ::java::lang::module::ModuleDescriptor$Opens),
	$classEntry("java.lang.module.ModuleDescriptor$Opens$Modifier", ::java::lang::module::ModuleDescriptor$Opens$Modifier),
	$classEntry("java.lang.module.ModuleDescriptor$Provides", ::java::lang::module::ModuleDescriptor$Provides),
	$classEntry("java.lang.module.ModuleDescriptor$Requires", ::java::lang::module::ModuleDescriptor$Requires),
	$classEntry("java.lang.module.ModuleDescriptor$Requires$Modifier", ::java::lang::module::ModuleDescriptor$Requires$Modifier),
	$classEntry("java.lang.module.ModuleDescriptor$Version", ::java::lang::module::ModuleDescriptor$Version),
	$classEntry("java.lang.module.ModuleFinder", ::java::lang::module::ModuleFinder),
	$classEntry("java.lang.module.ModuleFinder$1", ::java::lang::module::ModuleFinder$1),
	$classEntry("java.lang.module.ModuleFinder$2", ::java::lang::module::ModuleFinder$2),
	$classEntry("java.lang.module.ModuleReader", ::java::lang::module::ModuleReader),
	$classEntry("java.lang.module.ModuleReference", ::java::lang::module::ModuleReference),
	$classEntry("java.lang.module.ResolutionException", ::java::lang::module::ResolutionException),
	$classEntry("java.lang.module.ResolvedModule", ::java::lang::module::ResolvedModule),
	$classEntry("java.lang.module.Resolver", ::java::lang::module::Resolver),
	$classEntry("java.lang.module.RuntimeModuleReference", ::java::lang::module::RuntimeModuleReference),
	$classEntry("java.lang.ref.Cleaner", ::java::lang::ref::Cleaner),
	$classEntry("java.lang.ref.Cleaner$1", ::java::lang::ref::Cleaner$1),
	$classEntry("java.lang.ref.Cleaner$Cleanable", ::java::lang::ref::Cleaner$Cleanable),
	$classEntry("java.lang.ref.FinalReference", ::java::lang::ref::FinalReference),
	$classEntry("java.lang.ref.Finalizer", ::java::lang::ref::Finalizer),
	$classEntry("java.lang.ref.Finalizer$1", ::java::lang::ref::Finalizer$1),
	$classEntry("java.lang.ref.Finalizer$2", ::java::lang::ref::Finalizer$2),
	$classEntry("java.lang.ref.Finalizer$FinalizerThread", ::java::lang::ref::Finalizer$FinalizerThread),
	$classEntry("java.lang.ref.FinalizerHistogram", ::java::lang::ref::FinalizerHistogram),
	$classEntry("java.lang.ref.FinalizerHistogram$Entry", ::java::lang::ref::FinalizerHistogram$Entry),
	$classEntry("java.lang.ref.PhantomReference", ::java::lang::ref::PhantomReference),
	$classEntry("java.lang.ref.Reference", ::java::lang::ref::Reference),
	$classEntry("java.lang.ref.Reference$1", ::java::lang::ref::Reference$1),
	$classEntry("java.lang.ref.Reference$ReferenceHandler", ::java::lang::ref::Reference$ReferenceHandler),
	$classEntry("java.lang.ref.ReferenceQueue", ::java::lang::ref::ReferenceQueue),
	$classEntry("java.lang.ref.ReferenceQueue$Lock", ::java::lang::ref::ReferenceQueue$Lock),
	$classEntry("java.lang.ref.ReferenceQueue$Null", ::java::lang::ref::ReferenceQueue$Null),
	$classEntry("java.lang.ref.SoftReference", ::java::lang::ref::SoftReference),
	$classEntry("java.lang.ref.WeakReference", ::java::lang::ref::WeakReference),
	$classEntry("java.lang.reflect.AccessibleObject", ::java::lang::reflect::AccessibleObject),
	$classEntry("java.lang.reflect.AccessibleObject$Cache", ::java::lang::reflect::AccessibleObject$Cache),
	$classEntry("java.lang.reflect.AnnotatedArrayType", ::java::lang::reflect::AnnotatedArrayType),
	$classEntry("java.lang.reflect.AnnotatedElement", ::java::lang::reflect::AnnotatedElement),
	$classEntry("java.lang.reflect.AnnotatedParameterizedType", ::java::lang::reflect::AnnotatedParameterizedType),
	$classEntry("java.lang.reflect.AnnotatedType", ::java::lang::reflect::AnnotatedType),
	$classEntry("java.lang.reflect.AnnotatedTypeVariable", ::java::lang::reflect::AnnotatedTypeVariable),
	$classEntry("java.lang.reflect.AnnotatedWildcardType", ::java::lang::reflect::AnnotatedWildcardType),
	$classEntry("java.lang.reflect.Array", ::java::lang::reflect::Array),
	$classEntry("java.lang.reflect.Constructor", ::java::lang::reflect::Constructor),
	$classEntry("java.lang.reflect.Executable", ::java::lang::reflect::Executable),
	$classEntry("java.lang.reflect.Field", ::java::lang::reflect::Field),
	$classEntry("java.lang.reflect.GenericArrayType", ::java::lang::reflect::GenericArrayType),
	$classEntry("java.lang.reflect.GenericDeclaration", ::java::lang::reflect::GenericDeclaration),
	$classEntry("java.lang.reflect.GenericSignatureFormatError", ::java::lang::reflect::GenericSignatureFormatError),
	$classEntry("java.lang.reflect.InaccessibleObjectException", ::java::lang::reflect::InaccessibleObjectException),
	$classEntry("java.lang.reflect.InvocationHandler", ::java::lang::reflect::InvocationHandler),
	$classEntry("java.lang.reflect.InvocationTargetException", ::java::lang::reflect::InvocationTargetException),
	$classEntry("java.lang.reflect.MalformedParameterizedTypeException", ::java::lang::reflect::MalformedParameterizedTypeException),
	$classEntry("java.lang.reflect.MalformedParametersException", ::java::lang::reflect::MalformedParametersException),
	$classEntry("java.lang.reflect.Member", ::java::lang::reflect::Member),
	$classEntry("java.lang.reflect.Method", ::java::lang::reflect::Method),
	$classEntry("java.lang.reflect.Modifier", ::java::lang::reflect::Modifier),
	$classEntry("java.lang.reflect.Parameter", ::java::lang::reflect::Parameter),
	$classEntry("java.lang.reflect.ParameterizedType", ::java::lang::reflect::ParameterizedType),
	$classEntry("java.lang.reflect.Proxy", ::java::lang::reflect::Proxy),
	$classEntry("java.lang.reflect.Proxy$1", ::java::lang::reflect::Proxy$1),
	$classEntry("java.lang.reflect.Proxy$2", ::java::lang::reflect::Proxy$2),
	$classEntry("java.lang.reflect.Proxy$InvocationException", ::java::lang::reflect::Proxy$InvocationException),
	$classEntry("java.lang.reflect.Proxy$ProxyBuilder", ::java::lang::reflect::Proxy$ProxyBuilder),
	$classEntry("java.lang.reflect.Proxy$ProxyBuilder$1", ::java::lang::reflect::Proxy$ProxyBuilder$1),
	$classEntry("java.lang.reflect.ProxyGenerator", ::java::lang::reflect::ProxyGenerator),
	$classEntry("java.lang.reflect.ProxyGenerator$1", ::java::lang::reflect::ProxyGenerator$1),
	$classEntry("java.lang.reflect.ProxyGenerator$PrimitiveTypeInfo", ::java::lang::reflect::ProxyGenerator$PrimitiveTypeInfo),
	$classEntry("java.lang.reflect.ProxyGenerator$ProxyMethod", ::java::lang::reflect::ProxyGenerator$ProxyMethod),
	$classEntry("java.lang.reflect.RecordComponent", ::java::lang::reflect::RecordComponent),
	$classEntry("java.lang.reflect.ReflectAccess", ::java::lang::reflect::ReflectAccess),
	$classEntry("java.lang.reflect.ReflectPermission", ::java::lang::reflect::ReflectPermission),
	$classEntry("java.lang.reflect.Type", ::java::lang::reflect::Type),
	$classEntry("java.lang.reflect.TypeVariable", ::java::lang::reflect::TypeVariable),
	$classEntry("java.lang.reflect.UndeclaredThrowableException", ::java::lang::reflect::UndeclaredThrowableException),
	$classEntry("java.lang.reflect.WildcardType", ::java::lang::reflect::WildcardType),
	$classEntry("java.lang.runtime.ObjectMethods", ::java::lang::runtime::ObjectMethods),
	$classEntry("java.lang.runtime.ObjectMethods$1", ::java::lang::runtime::ObjectMethods$1),
	$classEntry("java.lang.runtime.SwitchBootstraps", ::java::lang::runtime::SwitchBootstraps),
	$classEntry("java.math.BigDecimal", ::java::math::BigDecimal),
	$classEntry("java.math.BigDecimal$1", ::java::math::BigDecimal$1),
	$classEntry("java.math.BigDecimal$LongOverflow", ::java::math::BigDecimal$LongOverflow),
	$classEntry("java.math.BigDecimal$StringBuilderHelper", ::java::math::BigDecimal$StringBuilderHelper),
	$classEntry("java.math.BigDecimal$UnsafeHolder", ::java::math::BigDecimal$UnsafeHolder),
	$classEntry("java.math.BigInteger", ::java::math::BigInteger),
	$classEntry("java.math.BigInteger$UnsafeHolder", ::java::math::BigInteger$UnsafeHolder),
	$classEntry("java.math.BitSieve", ::java::math::BitSieve),
	$classEntry("java.math.MathContext", ::java::math::MathContext),
	$classEntry("java.math.MutableBigInteger", ::java::math::MutableBigInteger),
	$classEntry("java.math.RoundingMode", ::java::math::RoundingMode),
	$classEntry("java.math.SignedMutableBigInteger", ::java::math::SignedMutableBigInteger),
	$classEntry("java.net.AbstractPlainDatagramSocketImpl", ::java::net::AbstractPlainDatagramSocketImpl),
	$classEntry("java.net.AbstractPlainSocketImpl", ::java::net::AbstractPlainSocketImpl),
	$classEntry("java.net.Authenticator", ::java::net::Authenticator),
	$classEntry("java.net.Authenticator$RequestorType", ::java::net::Authenticator$RequestorType),
	$classEntry("java.net.BindException", ::java::net::BindException),
	$classEntry("java.net.CacheRequest", ::java::net::CacheRequest),
	$classEntry("java.net.CacheResponse", ::java::net::CacheResponse),
	$classEntry("java.net.ConnectException", ::java::net::ConnectException),
	$classEntry("java.net.ContentHandler", ::java::net::ContentHandler),
	$classEntry("java.net.ContentHandlerFactory", ::java::net::ContentHandlerFactory),
	$classEntry("java.net.CookieHandler", ::java::net::CookieHandler),
	$classEntry("java.net.CookieManager", ::java::net::CookieManager),
	$classEntry("java.net.CookieManager$CookieComparator", ::java::net::CookieManager$CookieComparator),
	$classEntry("java.net.CookiePolicy", ::java::net::CookiePolicy),
	$classEntry("java.net.CookiePolicy$1", ::java::net::CookiePolicy$1),
	$classEntry("java.net.CookiePolicy$2", ::java::net::CookiePolicy$2),
	$classEntry("java.net.CookiePolicy$3", ::java::net::CookiePolicy$3),
	$classEntry("java.net.CookieStore", ::java::net::CookieStore),
	$classEntry("java.net.DatagramPacket", ::java::net::DatagramPacket),
	$classEntry("java.net.DatagramSocket", ::java::net::DatagramSocket),
	$classEntry("java.net.DatagramSocket$1", ::java::net::DatagramSocket$1),
	$classEntry("java.net.DatagramSocketImpl", ::java::net::DatagramSocketImpl),
	$classEntry("java.net.DatagramSocketImplFactory", ::java::net::DatagramSocketImplFactory),
	$classEntry("java.net.DefaultDatagramSocketImplFactory", ::java::net::DefaultDatagramSocketImplFactory),
	$classEntry("java.net.DefaultInterface", ::java::net::DefaultInterface),
	$classEntry("java.net.DelegatingSocketImpl", ::java::net::DelegatingSocketImpl),
	$classEntry("java.net.FactoryURLClassLoader", ::java::net::FactoryURLClassLoader),
	$classEntry("java.net.FileNameMap", ::java::net::FileNameMap),
	$classEntry("java.net.HostPortrange", ::java::net::HostPortrange),
	$classEntry("java.net.HttpConnectSocketImpl", ::java::net::HttpConnectSocketImpl),
	$classEntry("java.net.HttpConnectSocketImpl$1", ::java::net::HttpConnectSocketImpl$1),
	$classEntry("java.net.HttpConnectSocketImpl$2", ::java::net::HttpConnectSocketImpl$2),
	$classEntry("java.net.HttpCookie", ::java::net::HttpCookie),
	$classEntry("java.net.HttpCookie$1", ::java::net::HttpCookie$1),
	$classEntry("java.net.HttpCookie$10", ::java::net::HttpCookie$10),
	$classEntry("java.net.HttpCookie$11", ::java::net::HttpCookie$11),
	$classEntry("java.net.HttpCookie$12", ::java::net::HttpCookie$12),
	$classEntry("java.net.HttpCookie$2", ::java::net::HttpCookie$2),
	$classEntry("java.net.HttpCookie$3", ::java::net::HttpCookie$3),
	$classEntry("java.net.HttpCookie$4", ::java::net::HttpCookie$4),
	$classEntry("java.net.HttpCookie$5", ::java::net::HttpCookie$5),
	$classEntry("java.net.HttpCookie$6", ::java::net::HttpCookie$6),
	$classEntry("java.net.HttpCookie$7", ::java::net::HttpCookie$7),
	$classEntry("java.net.HttpCookie$8", ::java::net::HttpCookie$8),
	$classEntry("java.net.HttpCookie$9", ::java::net::HttpCookie$9),
	$classEntry("java.net.HttpCookie$CookieAttributeAssignor", ::java::net::HttpCookie$CookieAttributeAssignor),
	$classEntry("java.net.HttpRetryException", ::java::net::HttpRetryException),
	$classEntry("java.net.HttpURLConnection", ::java::net::HttpURLConnection),
	$classEntry("java.net.IDN", ::java::net::IDN),
	$classEntry("java.net.IDN$1", ::java::net::IDN$1),
	$classEntry("java.net.InMemoryCookieStore", ::java::net::InMemoryCookieStore),
	$classEntry("java.net.Inet4Address", ::java::net::Inet4Address),
	$classEntry("java.net.Inet4AddressImpl", ::java::net::Inet4AddressImpl),
	$classEntry("java.net.Inet6Address", ::java::net::Inet6Address),
	$classEntry("java.net.Inet6Address$Inet6AddressHolder", ::java::net::Inet6Address$Inet6AddressHolder),
	$classEntry("java.net.Inet6AddressImpl", ::java::net::Inet6AddressImpl),
	$classEntry("java.net.InetAddress", ::java::net::InetAddress),
	$classEntry("java.net.InetAddress$1", ::java::net::InetAddress$1),
	$classEntry("java.net.InetAddress$Addresses", ::java::net::InetAddress$Addresses),
	$classEntry("java.net.InetAddress$CachedAddresses", ::java::net::InetAddress$CachedAddresses),
	$classEntry("java.net.InetAddress$CachedLocalHost", ::java::net::InetAddress$CachedLocalHost),
	$classEntry("java.net.InetAddress$HostsFileNameService", ::java::net::InetAddress$HostsFileNameService),
	$classEntry("java.net.InetAddress$InetAddressHolder", ::java::net::InetAddress$InetAddressHolder),
	$classEntry("java.net.InetAddress$NameService", ::java::net::InetAddress$NameService),
	$classEntry("java.net.InetAddress$NameServiceAddresses", ::java::net::InetAddress$NameServiceAddresses),
	$classEntry("java.net.InetAddress$PlatformNameService", ::java::net::InetAddress$PlatformNameService),
	$classEntry("java.net.InetAddressContainer", ::java::net::InetAddressContainer),
	$classEntry("java.net.InetAddressImpl", ::java::net::InetAddressImpl),
	$classEntry("java.net.InetAddressImplFactory", ::java::net::InetAddressImplFactory),
	$classEntry("java.net.InetSocketAddress", ::java::net::InetSocketAddress),
	$classEntry("java.net.InetSocketAddress$InetSocketAddressHolder", ::java::net::InetSocketAddress$InetSocketAddressHolder),
	$classEntry("java.net.InterfaceAddress", ::java::net::InterfaceAddress),
	$classEntry("java.net.JarURLConnection", ::java::net::JarURLConnection),
	$classEntry("java.net.MalformedURLException", ::java::net::MalformedURLException),
	$classEntry("java.net.MulticastSocket", ::java::net::MulticastSocket),
	$classEntry("java.net.NetMulticastSocket", ::java::net::NetMulticastSocket),
	$classEntry("java.net.NetMulticastSocket$1", ::java::net::NetMulticastSocket$1),
	$classEntry("java.net.NetPermission", ::java::net::NetPermission),
	$classEntry("java.net.NetworkInterface", ::java::net::NetworkInterface),
	$classEntry("java.net.NetworkInterface$1", ::java::net::NetworkInterface$1),
	$classEntry("java.net.NoRouteToHostException", ::java::net::NoRouteToHostException),
	$classEntry("java.net.PasswordAuthentication", ::java::net::PasswordAuthentication),
	$classEntry("java.net.PlainDatagramSocketImpl", ::java::net::PlainDatagramSocketImpl),
	$classEntry("java.net.PlainSocketImpl", ::java::net::PlainSocketImpl),
	$classEntry("java.net.PortUnreachableException", ::java::net::PortUnreachableException),
	$classEntry("java.net.ProtocolException", ::java::net::ProtocolException),
	$classEntry("java.net.ProtocolFamily", ::java::net::ProtocolFamily),
	$classEntry("java.net.Proxy", ::java::net::Proxy),
	$classEntry("java.net.Proxy$Type", ::java::net::Proxy$Type),
	$classEntry("java.net.ProxySelector", ::java::net::ProxySelector),
	$classEntry("java.net.ProxySelector$StaticProxySelector", ::java::net::ProxySelector$StaticProxySelector),
	$classEntry("java.net.ResponseCache", ::java::net::ResponseCache),
	$classEntry("java.net.SecureCacheResponse", ::java::net::SecureCacheResponse),
	$classEntry("java.net.ServerSocket", ::java::net::ServerSocket),
	$classEntry("java.net.Socket", ::java::net::Socket),
	$classEntry("java.net.Socket$SocketInputStream", ::java::net::Socket$SocketInputStream),
	$classEntry("java.net.Socket$SocketOutputStream", ::java::net::Socket$SocketOutputStream),
	$classEntry("java.net.SocketAddress", ::java::net::SocketAddress),
	$classEntry("java.net.SocketCleanable", ::java::net::SocketCleanable),
	$classEntry("java.net.SocketException", ::java::net::SocketException),
	$classEntry("java.net.SocketImpl", ::java::net::SocketImpl),
	$classEntry("java.net.SocketImplFactory", ::java::net::SocketImplFactory),
	$classEntry("java.net.SocketInputStream", ::java::net::SocketInputStream),
	$classEntry("java.net.SocketOption", ::java::net::SocketOption),
	$classEntry("java.net.SocketOptions", ::java::net::SocketOptions),
	$classEntry("java.net.SocketOutputStream", ::java::net::SocketOutputStream),
	$classEntry("java.net.SocketPermission", ::java::net::SocketPermission),
	$classEntry("java.net.SocketPermission$1", ::java::net::SocketPermission$1),
	$classEntry("java.net.SocketPermission$EphemeralRange", ::java::net::SocketPermission$EphemeralRange),
	$classEntry("java.net.SocketPermissionCollection", ::java::net::SocketPermissionCollection),
	$classEntry("java.net.SocketPermissionCollection$1", ::java::net::SocketPermissionCollection$1),
	$classEntry("java.net.SocketTimeoutException", ::java::net::SocketTimeoutException),
	$classEntry("java.net.SocksConsts", ::java::net::SocksConsts),
	$classEntry("java.net.SocksSocketImpl", ::java::net::SocksSocketImpl),
	$classEntry("java.net.SocksSocketImpl$1", ::java::net::SocksSocketImpl$1),
	$classEntry("java.net.SocksSocketImpl$2", ::java::net::SocksSocketImpl$2),
	$classEntry("java.net.SocksSocketImpl$3", ::java::net::SocksSocketImpl$3),
	$classEntry("java.net.StandardProtocolFamily", ::java::net::StandardProtocolFamily),
	$classEntry("java.net.StandardSocketOptions", ::java::net::StandardSocketOptions),
	$classEntry("java.net.StandardSocketOptions$StdSocketOption", ::java::net::StandardSocketOptions$StdSocketOption),
	$classEntry("java.net.URI", ::java::net::URI),
	$classEntry("java.net.URI$1", ::java::net::URI$1),
	$classEntry("java.net.URI$Parser", ::java::net::URI$Parser),
	$classEntry("java.net.URISyntaxException", ::java::net::URISyntaxException),
	$classEntry("java.net.URL", ::java::net::URL),
	$classEntry("java.net.URL$1", ::java::net::URL$1),
	$classEntry("java.net.URL$2", ::java::net::URL$2),
	$classEntry("java.net.URL$3", ::java::net::URL$3),
	$classEntry("java.net.URL$DefaultFactory", ::java::net::URL$DefaultFactory),
	$classEntry("java.net.URLClassLoader", ::java::net::URLClassLoader),
	$classEntry("java.net.URLClassLoader$1", ::java::net::URLClassLoader$1),
	$classEntry("java.net.URLClassLoader$2", ::java::net::URLClassLoader$2),
	$classEntry("java.net.URLClassLoader$3", ::java::net::URLClassLoader$3),
	$classEntry("java.net.URLClassLoader$3$1", ::java::net::URLClassLoader$3$1),
	$classEntry("java.net.URLClassLoader$4", ::java::net::URLClassLoader$4),
	$classEntry("java.net.URLClassLoader$5", ::java::net::URLClassLoader$5),
	$classEntry("java.net.URLClassLoader$6", ::java::net::URLClassLoader$6),
	$classEntry("java.net.URLConnection", ::java::net::URLConnection),
	$classEntry("java.net.URLConnection$1", ::java::net::URLConnection$1),
	$classEntry("java.net.URLConnection$2", ::java::net::URLConnection$2),
	$classEntry("java.net.URLDecoder", ::java::net::URLDecoder),
	$classEntry("java.net.URLEncoder", ::java::net::URLEncoder),
	$classEntry("java.net.URLPermission", ::java::net::URLPermission),
	$classEntry("java.net.URLPermission$Authority", ::java::net::URLPermission$Authority),
	$classEntry("java.net.URLStreamHandler", ::java::net::URLStreamHandler),
	$classEntry("java.net.URLStreamHandlerFactory", ::java::net::URLStreamHandlerFactory),
	$classEntry("java.net.UnixDomainSocketAddress", ::java::net::UnixDomainSocketAddress),
	$classEntry("java.net.UnixDomainSocketAddress$Ser", ::java::net::UnixDomainSocketAddress$Ser),
	$classEntry("java.net.UnknownContentHandler", ::java::net::UnknownContentHandler),
	$classEntry("java.net.UnknownHostException", ::java::net::UnknownHostException),
	$classEntry("java.net.UnknownServiceException", ::java::net::UnknownServiceException),
	$classEntry("java.net.UrlDeserializedState", ::java::net::UrlDeserializedState),
	$classEntry("java.net.spi.URLStreamHandlerProvider", ::java::net::spi::URLStreamHandlerProvider),
	$classEntry("java.nio.Bits", ::java::nio::Bits),
	$classEntry("java.nio.Bits$1", ::java::nio::Bits$1),
	$classEntry("java.nio.Buffer", ::java::nio::Buffer),
	$classEntry("java.nio.Buffer$1", ::java::nio::Buffer$1),
	$classEntry("java.nio.BufferMismatch", ::java::nio::BufferMismatch),
	$classEntry("java.nio.BufferOverflowException", ::java::nio::BufferOverflowException),
	$classEntry("java.nio.BufferUnderflowException", ::java::nio::BufferUnderflowException),
	$classEntry("java.nio.ByteBuffer", ::java::nio::ByteBuffer),
	$classEntry("java.nio.ByteBufferAsCharBufferB", ::java::nio::ByteBufferAsCharBufferB),
	$classEntry("java.nio.ByteBufferAsCharBufferL", ::java::nio::ByteBufferAsCharBufferL),
	$classEntry("java.nio.ByteBufferAsCharBufferRB", ::java::nio::ByteBufferAsCharBufferRB),
	$classEntry("java.nio.ByteBufferAsCharBufferRL", ::java::nio::ByteBufferAsCharBufferRL),
	$classEntry("java.nio.ByteBufferAsDoubleBufferB", ::java::nio::ByteBufferAsDoubleBufferB),
	$classEntry("java.nio.ByteBufferAsDoubleBufferL", ::java::nio::ByteBufferAsDoubleBufferL),
	$classEntry("java.nio.ByteBufferAsDoubleBufferRB", ::java::nio::ByteBufferAsDoubleBufferRB),
	$classEntry("java.nio.ByteBufferAsDoubleBufferRL", ::java::nio::ByteBufferAsDoubleBufferRL),
	$classEntry("java.nio.ByteBufferAsFloatBufferB", ::java::nio::ByteBufferAsFloatBufferB),
	$classEntry("java.nio.ByteBufferAsFloatBufferL", ::java::nio::ByteBufferAsFloatBufferL),
	$classEntry("java.nio.ByteBufferAsFloatBufferRB", ::java::nio::ByteBufferAsFloatBufferRB),
	$classEntry("java.nio.ByteBufferAsFloatBufferRL", ::java::nio::ByteBufferAsFloatBufferRL),
	$classEntry("java.nio.ByteBufferAsIntBufferB", ::java::nio::ByteBufferAsIntBufferB),
	$classEntry("java.nio.ByteBufferAsIntBufferL", ::java::nio::ByteBufferAsIntBufferL),
	$classEntry("java.nio.ByteBufferAsIntBufferRB", ::java::nio::ByteBufferAsIntBufferRB),
	$classEntry("java.nio.ByteBufferAsIntBufferRL", ::java::nio::ByteBufferAsIntBufferRL),
	$classEntry("java.nio.ByteBufferAsLongBufferB", ::java::nio::ByteBufferAsLongBufferB),
	$classEntry("java.nio.ByteBufferAsLongBufferL", ::java::nio::ByteBufferAsLongBufferL),
	$classEntry("java.nio.ByteBufferAsLongBufferRB", ::java::nio::ByteBufferAsLongBufferRB),
	$classEntry("java.nio.ByteBufferAsLongBufferRL", ::java::nio::ByteBufferAsLongBufferRL),
	$classEntry("java.nio.ByteBufferAsShortBufferB", ::java::nio::ByteBufferAsShortBufferB),
	$classEntry("java.nio.ByteBufferAsShortBufferL", ::java::nio::ByteBufferAsShortBufferL),
	$classEntry("java.nio.ByteBufferAsShortBufferRB", ::java::nio::ByteBufferAsShortBufferRB),
	$classEntry("java.nio.ByteBufferAsShortBufferRL", ::java::nio::ByteBufferAsShortBufferRL),
	$classEntry("java.nio.ByteOrder", ::java::nio::ByteOrder),
	$classEntry("java.nio.CharBuffer", ::java::nio::CharBuffer),
	$classEntry("java.nio.CharBufferSpliterator", ::java::nio::CharBufferSpliterator),
	$classEntry("java.nio.DirectByteBuffer", ::java::nio::DirectByteBuffer),
	$classEntry("java.nio.DirectByteBuffer$Deallocator", ::java::nio::DirectByteBuffer$Deallocator),
	$classEntry("java.nio.DirectByteBufferR", ::java::nio::DirectByteBufferR),
	$classEntry("java.nio.DirectCharBufferRS", ::java::nio::DirectCharBufferRS),
	$classEntry("java.nio.DirectCharBufferRU", ::java::nio::DirectCharBufferRU),
	$classEntry("java.nio.DirectCharBufferS", ::java::nio::DirectCharBufferS),
	$classEntry("java.nio.DirectCharBufferU", ::java::nio::DirectCharBufferU),
	$classEntry("java.nio.DirectDoubleBufferRS", ::java::nio::DirectDoubleBufferRS),
	$classEntry("java.nio.DirectDoubleBufferRU", ::java::nio::DirectDoubleBufferRU),
	$classEntry("java.nio.DirectDoubleBufferS", ::java::nio::DirectDoubleBufferS),
	$classEntry("java.nio.DirectDoubleBufferU", ::java::nio::DirectDoubleBufferU),
	$classEntry("java.nio.DirectFloatBufferRS", ::java::nio::DirectFloatBufferRS),
	$classEntry("java.nio.DirectFloatBufferRU", ::java::nio::DirectFloatBufferRU),
	$classEntry("java.nio.DirectFloatBufferS", ::java::nio::DirectFloatBufferS),
	$classEntry("java.nio.DirectFloatBufferU", ::java::nio::DirectFloatBufferU),
	$classEntry("java.nio.DirectIntBufferRS", ::java::nio::DirectIntBufferRS),
	$classEntry("java.nio.DirectIntBufferRU", ::java::nio::DirectIntBufferRU),
	$classEntry("java.nio.DirectIntBufferS", ::java::nio::DirectIntBufferS),
	$classEntry("java.nio.DirectIntBufferU", ::java::nio::DirectIntBufferU),
	$classEntry("java.nio.DirectLongBufferRS", ::java::nio::DirectLongBufferRS),
	$classEntry("java.nio.DirectLongBufferRU", ::java::nio::DirectLongBufferRU),
	$classEntry("java.nio.DirectLongBufferS", ::java::nio::DirectLongBufferS),
	$classEntry("java.nio.DirectLongBufferU", ::java::nio::DirectLongBufferU),
	$classEntry("java.nio.DirectShortBufferRS", ::java::nio::DirectShortBufferRS),
	$classEntry("java.nio.DirectShortBufferRU", ::java::nio::DirectShortBufferRU),
	$classEntry("java.nio.DirectShortBufferS", ::java::nio::DirectShortBufferS),
	$classEntry("java.nio.DirectShortBufferU", ::java::nio::DirectShortBufferU),
	$classEntry("java.nio.DoubleBuffer", ::java::nio::DoubleBuffer),
	$classEntry("java.nio.FloatBuffer", ::java::nio::FloatBuffer),
	$classEntry("java.nio.HeapByteBuffer", ::java::nio::HeapByteBuffer),
	$classEntry("java.nio.HeapByteBufferR", ::java::nio::HeapByteBufferR),
	$classEntry("java.nio.HeapCharBuffer", ::java::nio::HeapCharBuffer),
	$classEntry("java.nio.HeapCharBufferR", ::java::nio::HeapCharBufferR),
	$classEntry("java.nio.HeapDoubleBuffer", ::java::nio::HeapDoubleBuffer),
	$classEntry("java.nio.HeapDoubleBufferR", ::java::nio::HeapDoubleBufferR),
	$classEntry("java.nio.HeapFloatBuffer", ::java::nio::HeapFloatBuffer),
	$classEntry("java.nio.HeapFloatBufferR", ::java::nio::HeapFloatBufferR),
	$classEntry("java.nio.HeapIntBuffer", ::java::nio::HeapIntBuffer),
	$classEntry("java.nio.HeapIntBufferR", ::java::nio::HeapIntBufferR),
	$classEntry("java.nio.HeapLongBuffer", ::java::nio::HeapLongBuffer),
	$classEntry("java.nio.HeapLongBufferR", ::java::nio::HeapLongBufferR),
	$classEntry("java.nio.HeapShortBuffer", ::java::nio::HeapShortBuffer),
	$classEntry("java.nio.HeapShortBufferR", ::java::nio::HeapShortBufferR),
	$classEntry("java.nio.IntBuffer", ::java::nio::IntBuffer),
	$classEntry("java.nio.InvalidMarkException", ::java::nio::InvalidMarkException),
	$classEntry("java.nio.LongBuffer", ::java::nio::LongBuffer),
	$classEntry("java.nio.MappedByteBuffer", ::java::nio::MappedByteBuffer),
	$classEntry("java.nio.MappedByteBuffer$1", ::java::nio::MappedByteBuffer$1),
	$classEntry("java.nio.MappedMemoryUtils", ::java::nio::MappedMemoryUtils),
	$classEntry("java.nio.ReadOnlyBufferException", ::java::nio::ReadOnlyBufferException),
	$classEntry("java.nio.ShortBuffer", ::java::nio::ShortBuffer),
	$classEntry("java.nio.StringCharBuffer", ::java::nio::StringCharBuffer),
	$classEntry("java.nio.channels.AcceptPendingException", ::java::nio::channels::AcceptPendingException),
	$classEntry("java.nio.channels.AlreadyBoundException", ::java::nio::channels::AlreadyBoundException),
	$classEntry("java.nio.channels.AlreadyConnectedException", ::java::nio::channels::AlreadyConnectedException),
	$classEntry("java.nio.channels.AsynchronousByteChannel", ::java::nio::channels::AsynchronousByteChannel),
	$classEntry("java.nio.channels.AsynchronousChannel", ::java::nio::channels::AsynchronousChannel),
	$classEntry("java.nio.channels.AsynchronousChannelGroup", ::java::nio::channels::AsynchronousChannelGroup),
	$classEntry("java.nio.channels.AsynchronousCloseException", ::java::nio::channels::AsynchronousCloseException),
	$classEntry("java.nio.channels.AsynchronousFileChannel", ::java::nio::channels::AsynchronousFileChannel),
	$classEntry("java.nio.channels.AsynchronousServerSocketChannel", ::java::nio::channels::AsynchronousServerSocketChannel),
	$classEntry("java.nio.channels.AsynchronousSocketChannel", ::java::nio::channels::AsynchronousSocketChannel),
	$classEntry("java.nio.channels.ByteChannel", ::java::nio::channels::ByteChannel),
	$classEntry("java.nio.channels.CancelledKeyException", ::java::nio::channels::CancelledKeyException),
	$classEntry("java.nio.channels.Channel", ::java::nio::channels::Channel),
	$classEntry("java.nio.channels.Channels", ::java::nio::channels::Channels),
	$classEntry("java.nio.channels.Channels$1", ::java::nio::channels::Channels$1),
	$classEntry("java.nio.channels.Channels$2", ::java::nio::channels::Channels$2),
	$classEntry("java.nio.channels.Channels$3", ::java::nio::channels::Channels$3),
	$classEntry("java.nio.channels.Channels$ReadableByteChannelImpl", ::java::nio::channels::Channels$ReadableByteChannelImpl),
	$classEntry("java.nio.channels.Channels$WritableByteChannelImpl", ::java::nio::channels::Channels$WritableByteChannelImpl),
	$classEntry("java.nio.channels.ClosedByInterruptException", ::java::nio::channels::ClosedByInterruptException),
	$classEntry("java.nio.channels.ClosedChannelException", ::java::nio::channels::ClosedChannelException),
	$classEntry("java.nio.channels.ClosedSelectorException", ::java::nio::channels::ClosedSelectorException),
	$classEntry("java.nio.channels.CompletionHandler", ::java::nio::channels::CompletionHandler),
	$classEntry("java.nio.channels.ConnectionPendingException", ::java::nio::channels::ConnectionPendingException),
	$classEntry("java.nio.channels.DatagramChannel", ::java::nio::channels::DatagramChannel),
	$classEntry("java.nio.channels.FileChannel", ::java::nio::channels::FileChannel),
	$classEntry("java.nio.channels.FileChannel$MapMode", ::java::nio::channels::FileChannel$MapMode),
	$classEntry("java.nio.channels.FileLock", ::java::nio::channels::FileLock),
	$classEntry("java.nio.channels.FileLockInterruptionException", ::java::nio::channels::FileLockInterruptionException),
	$classEntry("java.nio.channels.GatheringByteChannel", ::java::nio::channels::GatheringByteChannel),
	$classEntry("java.nio.channels.IllegalBlockingModeException", ::java::nio::channels::IllegalBlockingModeException),
	$classEntry("java.nio.channels.IllegalChannelGroupException", ::java::nio::channels::IllegalChannelGroupException),
	$classEntry("java.nio.channels.IllegalSelectorException", ::java::nio::channels::IllegalSelectorException),
	$classEntry("java.nio.channels.InterruptedByTimeoutException", ::java::nio::channels::InterruptedByTimeoutException),
	$classEntry("java.nio.channels.InterruptibleChannel", ::java::nio::channels::InterruptibleChannel),
	$classEntry("java.nio.channels.MembershipKey", ::java::nio::channels::MembershipKey),
	$classEntry("java.nio.channels.MulticastChannel", ::java::nio::channels::MulticastChannel),
	$classEntry("java.nio.channels.NetworkChannel", ::java::nio::channels::NetworkChannel),
	$classEntry("java.nio.channels.NoConnectionPendingException", ::java::nio::channels::NoConnectionPendingException),
	$classEntry("java.nio.channels.NonReadableChannelException", ::java::nio::channels::NonReadableChannelException),
	$classEntry("java.nio.channels.NonWritableChannelException", ::java::nio::channels::NonWritableChannelException),
	$classEntry("java.nio.channels.NotYetBoundException", ::java::nio::channels::NotYetBoundException),
	$classEntry("java.nio.channels.NotYetConnectedException", ::java::nio::channels::NotYetConnectedException),
	$classEntry("java.nio.channels.OverlappingFileLockException", ::java::nio::channels::OverlappingFileLockException),
	$classEntry("java.nio.channels.Pipe", ::java::nio::channels::Pipe),
	$classEntry("java.nio.channels.Pipe$SinkChannel", ::java::nio::channels::Pipe$SinkChannel),
	$classEntry("java.nio.channels.Pipe$SourceChannel", ::java::nio::channels::Pipe$SourceChannel),
	$classEntry("java.nio.channels.ReadPendingException", ::java::nio::channels::ReadPendingException),
	$classEntry("java.nio.channels.ReadableByteChannel", ::java::nio::channels::ReadableByteChannel),
	$classEntry("java.nio.channels.ScatteringByteChannel", ::java::nio::channels::ScatteringByteChannel),
	$classEntry("java.nio.channels.SeekableByteChannel", ::java::nio::channels::SeekableByteChannel),
	$classEntry("java.nio.channels.SelectableChannel", ::java::nio::channels::SelectableChannel),
	$classEntry("java.nio.channels.SelectionKey", ::java::nio::channels::SelectionKey),
	$classEntry("java.nio.channels.Selector", ::java::nio::channels::Selector),
	$classEntry("java.nio.channels.ServerSocketChannel", ::java::nio::channels::ServerSocketChannel),
	$classEntry("java.nio.channels.ShutdownChannelGroupException", ::java::nio::channels::ShutdownChannelGroupException),
	$classEntry("java.nio.channels.SocketChannel", ::java::nio::channels::SocketChannel),
	$classEntry("java.nio.channels.UnresolvedAddressException", ::java::nio::channels::UnresolvedAddressException),
	$classEntry("java.nio.channels.UnsupportedAddressTypeException", ::java::nio::channels::UnsupportedAddressTypeException),
	$classEntry("java.nio.channels.WritableByteChannel", ::java::nio::channels::WritableByteChannel),
	$classEntry("java.nio.channels.WritePendingException", ::java::nio::channels::WritePendingException),
	$classEntry("java.nio.channels.spi.AbstractInterruptibleChannel", ::java::nio::channels::spi::AbstractInterruptibleChannel),
	$classEntry("java.nio.channels.spi.AbstractInterruptibleChannel$1", ::java::nio::channels::spi::AbstractInterruptibleChannel$1),
	$classEntry("java.nio.channels.spi.AbstractSelectableChannel", ::java::nio::channels::spi::AbstractSelectableChannel),
	$classEntry("java.nio.channels.spi.AbstractSelectionKey", ::java::nio::channels::spi::AbstractSelectionKey),
	$classEntry("java.nio.channels.spi.AbstractSelector", ::java::nio::channels::spi::AbstractSelector),
	$classEntry("java.nio.channels.spi.AbstractSelector$1", ::java::nio::channels::spi::AbstractSelector$1),
	$classEntry("java.nio.channels.spi.AsynchronousChannelProvider", ::java::nio::channels::spi::AsynchronousChannelProvider),
	$classEntry("java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder", ::java::nio::channels::spi::AsynchronousChannelProvider$ProviderHolder),
	$classEntry("java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder$1", ::java::nio::channels::spi::AsynchronousChannelProvider$ProviderHolder$1),
	$classEntry("java.nio.channels.spi.SelectorProvider", ::java::nio::channels::spi::SelectorProvider),
	$classEntry("java.nio.channels.spi.SelectorProvider$Holder", ::java::nio::channels::spi::SelectorProvider$Holder),
	$classEntry("java.nio.charset.CharacterCodingException", ::java::nio::charset::CharacterCodingException),
	$classEntry("java.nio.charset.Charset", ::java::nio::charset::Charset),
	$classEntry("java.nio.charset.Charset$1", ::java::nio::charset::Charset$1),
	$classEntry("java.nio.charset.Charset$2", ::java::nio::charset::Charset$2),
	$classEntry("java.nio.charset.Charset$3", ::java::nio::charset::Charset$3),
	$classEntry("java.nio.charset.Charset$ExtendedProviderHolder", ::java::nio::charset::Charset$ExtendedProviderHolder),
	$classEntry("java.nio.charset.Charset$ExtendedProviderHolder$1", ::java::nio::charset::Charset$ExtendedProviderHolder$1),
	$classEntry("java.nio.charset.CharsetDecoder", ::java::nio::charset::CharsetDecoder),
	$classEntry("java.nio.charset.CharsetEncoder", ::java::nio::charset::CharsetEncoder),
	$classEntry("java.nio.charset.CoderMalfunctionError", ::java::nio::charset::CoderMalfunctionError),
	$classEntry("java.nio.charset.CoderResult", ::java::nio::charset::CoderResult),
	$classEntry("java.nio.charset.CoderResult$Cache", ::java::nio::charset::CoderResult$Cache),
	$classEntry("java.nio.charset.CodingErrorAction", ::java::nio::charset::CodingErrorAction),
	$classEntry("java.nio.charset.IllegalCharsetNameException", ::java::nio::charset::IllegalCharsetNameException),
	$classEntry("java.nio.charset.MalformedInputException", ::java::nio::charset::MalformedInputException),
	$classEntry("java.nio.charset.StandardCharsets", ::java::nio::charset::StandardCharsets),
	$classEntry("java.nio.charset.UnmappableCharacterException", ::java::nio::charset::UnmappableCharacterException),
	$classEntry("java.nio.charset.UnsupportedCharsetException", ::java::nio::charset::UnsupportedCharsetException),
	$classEntry("java.nio.charset.spi.CharsetProvider", ::java::nio::charset::spi::CharsetProvider),
	$classEntry("java.nio.file.AccessDeniedException", ::java::nio::file::AccessDeniedException),
	$classEntry("java.nio.file.AccessMode", ::java::nio::file::AccessMode),
	$classEntry("java.nio.file.AtomicMoveNotSupportedException", ::java::nio::file::AtomicMoveNotSupportedException),
	$classEntry("java.nio.file.ClosedDirectoryStreamException", ::java::nio::file::ClosedDirectoryStreamException),
	$classEntry("java.nio.file.ClosedFileSystemException", ::java::nio::file::ClosedFileSystemException),
	$classEntry("java.nio.file.ClosedWatchServiceException", ::java::nio::file::ClosedWatchServiceException),
	$classEntry("java.nio.file.CopyMoveHelper", ::java::nio::file::CopyMoveHelper),
	$classEntry("java.nio.file.CopyMoveHelper$CopyOptions", ::java::nio::file::CopyMoveHelper$CopyOptions),
	$classEntry("java.nio.file.CopyOption", ::java::nio::file::CopyOption),
	$classEntry("java.nio.file.DirectoryIteratorException", ::java::nio::file::DirectoryIteratorException),
	$classEntry("java.nio.file.DirectoryNotEmptyException", ::java::nio::file::DirectoryNotEmptyException),
	$classEntry("java.nio.file.DirectoryStream", ::java::nio::file::DirectoryStream),
	$classEntry("java.nio.file.DirectoryStream$Filter", ::java::nio::file::DirectoryStream$Filter),
	$classEntry("java.nio.file.FileAlreadyExistsException", ::java::nio::file::FileAlreadyExistsException),
	$classEntry("java.nio.file.FileChannelLinesSpliterator", ::java::nio::file::FileChannelLinesSpliterator),
	$classEntry("java.nio.file.FileChannelLinesSpliterator$1", ::java::nio::file::FileChannelLinesSpliterator$1),
	$classEntry("java.nio.file.FileStore", ::java::nio::file::FileStore),
	$classEntry("java.nio.file.FileSystem", ::java::nio::file::FileSystem),
	$classEntry("java.nio.file.FileSystemAlreadyExistsException", ::java::nio::file::FileSystemAlreadyExistsException),
	$classEntry("java.nio.file.FileSystemException", ::java::nio::file::FileSystemException),
	$classEntry("java.nio.file.FileSystemLoopException", ::java::nio::file::FileSystemLoopException),
	$classEntry("java.nio.file.FileSystemNotFoundException", ::java::nio::file::FileSystemNotFoundException),
	$classEntry("java.nio.file.FileSystems", ::java::nio::file::FileSystems),
	$classEntry("java.nio.file.FileSystems$DefaultFileSystemHolder", ::java::nio::file::FileSystems$DefaultFileSystemHolder),
	$classEntry("java.nio.file.FileSystems$DefaultFileSystemHolder$1", ::java::nio::file::FileSystems$DefaultFileSystemHolder$1),
	$classEntry("java.nio.file.FileTreeIterator", ::java::nio::file::FileTreeIterator),
	$classEntry("java.nio.file.FileTreeWalker", ::java::nio::file::FileTreeWalker),
	$classEntry("java.nio.file.FileTreeWalker$1", ::java::nio::file::FileTreeWalker$1),
	$classEntry("java.nio.file.FileTreeWalker$DirectoryNode", ::java::nio::file::FileTreeWalker$DirectoryNode),
	$classEntry("java.nio.file.FileTreeWalker$Event", ::java::nio::file::FileTreeWalker$Event),
	$classEntry("java.nio.file.FileTreeWalker$EventType", ::java::nio::file::FileTreeWalker$EventType),
	$classEntry("java.nio.file.FileVisitOption", ::java::nio::file::FileVisitOption),
	$classEntry("java.nio.file.FileVisitResult", ::java::nio::file::FileVisitResult),
	$classEntry("java.nio.file.FileVisitor", ::java::nio::file::FileVisitor),
	$classEntry("java.nio.file.Files", ::java::nio::file::Files),
	$classEntry("java.nio.file.Files$1", ::java::nio::file::Files$1),
	$classEntry("java.nio.file.Files$2", ::java::nio::file::Files$2),
	$classEntry("java.nio.file.Files$3", ::java::nio::file::Files$3),
	$classEntry("java.nio.file.Files$AcceptAllFilter", ::java::nio::file::Files$AcceptAllFilter),
	$classEntry("java.nio.file.Files$FileTypeDetectors", ::java::nio::file::Files$FileTypeDetectors),
	$classEntry("java.nio.file.Files$FileTypeDetectors$1", ::java::nio::file::Files$FileTypeDetectors$1),
	$classEntry("java.nio.file.Files$FileTypeDetectors$2", ::java::nio::file::Files$FileTypeDetectors$2),
	$classEntry("java.nio.file.InvalidPathException", ::java::nio::file::InvalidPathException),
	$classEntry("java.nio.file.LinkOption", ::java::nio::file::LinkOption),
	$classEntry("java.nio.file.LinkPermission", ::java::nio::file::LinkPermission),
	$classEntry("java.nio.file.NoSuchFileException", ::java::nio::file::NoSuchFileException),
	$classEntry("java.nio.file.NotDirectoryException", ::java::nio::file::NotDirectoryException),
	$classEntry("java.nio.file.NotLinkException", ::java::nio::file::NotLinkException),
	$classEntry("java.nio.file.OpenOption", ::java::nio::file::OpenOption),
	$classEntry("java.nio.file.Path", ::java::nio::file::Path),
	$classEntry("java.nio.file.Path$1", ::java::nio::file::Path$1),
	$classEntry("java.nio.file.PathMatcher", ::java::nio::file::PathMatcher),
	$classEntry("java.nio.file.Paths", ::java::nio::file::Paths),
	$classEntry("java.nio.file.ProviderMismatchException", ::java::nio::file::ProviderMismatchException),
	$classEntry("java.nio.file.ProviderNotFoundException", ::java::nio::file::ProviderNotFoundException),
	$classEntry("java.nio.file.ReadOnlyFileSystemException", ::java::nio::file::ReadOnlyFileSystemException),
	$classEntry("java.nio.file.SecureDirectoryStream", ::java::nio::file::SecureDirectoryStream),
	$classEntry("java.nio.file.SimpleFileVisitor", ::java::nio::file::SimpleFileVisitor),
	$classEntry("java.nio.file.StandardCopyOption", ::java::nio::file::StandardCopyOption),
	$classEntry("java.nio.file.StandardOpenOption", ::java::nio::file::StandardOpenOption),
	$classEntry("java.nio.file.StandardWatchEventKinds", ::java::nio::file::StandardWatchEventKinds),
	$classEntry("java.nio.file.StandardWatchEventKinds$StdWatchEventKind", ::java::nio::file::StandardWatchEventKinds$StdWatchEventKind),
	$classEntry("java.nio.file.TempFileHelper", ::java::nio::file::TempFileHelper),
	$classEntry("java.nio.file.TempFileHelper$PosixPermissions", ::java::nio::file::TempFileHelper$PosixPermissions),
	$classEntry("java.nio.file.WatchEvent", ::java::nio::file::WatchEvent),
	$classEntry("java.nio.file.WatchEvent$Kind", ::java::nio::file::WatchEvent$Kind),
	$classEntry("java.nio.file.WatchEvent$Modifier", ::java::nio::file::WatchEvent$Modifier),
	$classEntry("java.nio.file.WatchKey", ::java::nio::file::WatchKey),
	$classEntry("java.nio.file.WatchService", ::java::nio::file::WatchService),
	$classEntry("java.nio.file.Watchable", ::java::nio::file::Watchable),
	$classEntry("java.nio.file.attribute.AclEntry", ::java::nio::file::attribute::AclEntry),
	$classEntry("java.nio.file.attribute.AclEntry$Builder", ::java::nio::file::attribute::AclEntry$Builder),
	$classEntry("java.nio.file.attribute.AclEntryFlag", ::java::nio::file::attribute::AclEntryFlag),
	$classEntry("java.nio.file.attribute.AclEntryPermission", ::java::nio::file::attribute::AclEntryPermission),
	$classEntry("java.nio.file.attribute.AclEntryType", ::java::nio::file::attribute::AclEntryType),
	$classEntry("java.nio.file.attribute.AclFileAttributeView", ::java::nio::file::attribute::AclFileAttributeView),
	$classEntry("java.nio.file.attribute.AttributeView", ::java::nio::file::attribute::AttributeView),
	$classEntry("java.nio.file.attribute.BasicFileAttributeView", ::java::nio::file::attribute::BasicFileAttributeView),
	$classEntry("java.nio.file.attribute.BasicFileAttributes", ::java::nio::file::attribute::BasicFileAttributes),
	$classEntry("java.nio.file.attribute.DosFileAttributeView", ::java::nio::file::attribute::DosFileAttributeView),
	$classEntry("java.nio.file.attribute.DosFileAttributes", ::java::nio::file::attribute::DosFileAttributes),
	$classEntry("java.nio.file.attribute.FileAttribute", ::java::nio::file::attribute::FileAttribute),
	$classEntry("java.nio.file.attribute.FileAttributeView", ::java::nio::file::attribute::FileAttributeView),
	$classEntry("java.nio.file.attribute.FileOwnerAttributeView", ::java::nio::file::attribute::FileOwnerAttributeView),
	$classEntry("java.nio.file.attribute.FileStoreAttributeView", ::java::nio::file::attribute::FileStoreAttributeView),
	$classEntry("java.nio.file.attribute.FileTime", ::java::nio::file::attribute::FileTime),
	$classEntry("java.nio.file.attribute.FileTime$1", ::java::nio::file::attribute::FileTime$1),
	$classEntry("java.nio.file.attribute.GroupPrincipal", ::java::nio::file::attribute::GroupPrincipal),
	$classEntry("java.nio.file.attribute.PosixFileAttributeView", ::java::nio::file::attribute::PosixFileAttributeView),
	$classEntry("java.nio.file.attribute.PosixFileAttributes", ::java::nio::file::attribute::PosixFileAttributes),
	$classEntry("java.nio.file.attribute.PosixFilePermission", ::java::nio::file::attribute::PosixFilePermission),
	$classEntry("java.nio.file.attribute.PosixFilePermissions", ::java::nio::file::attribute::PosixFilePermissions),
	$classEntry("java.nio.file.attribute.PosixFilePermissions$1", ::java::nio::file::attribute::PosixFilePermissions$1),
	$classEntry("java.nio.file.attribute.UserDefinedFileAttributeView", ::java::nio::file::attribute::UserDefinedFileAttributeView),
	$classEntry("java.nio.file.attribute.UserPrincipal", ::java::nio::file::attribute::UserPrincipal),
	$classEntry("java.nio.file.attribute.UserPrincipalLookupService", ::java::nio::file::attribute::UserPrincipalLookupService),
	$classEntry("java.nio.file.attribute.UserPrincipalNotFoundException", ::java::nio::file::attribute::UserPrincipalNotFoundException),
	$classEntry("java.nio.file.spi.FileSystemProvider", ::java::nio::file::spi::FileSystemProvider),
	$classEntry("java.nio.file.spi.FileSystemProvider$1", ::java::nio::file::spi::FileSystemProvider$1),
	$classEntry("java.nio.file.spi.FileTypeDetector", ::java::nio::file::spi::FileTypeDetector),
	$classEntry("java.security.AccessControlContext", ::java::security::AccessControlContext),
	$classEntry("java.security.AccessControlContext$1", ::java::security::AccessControlContext$1),
	$classEntry("java.security.AccessControlException", ::java::security::AccessControlException),
	$classEntry("java.security.AccessController", ::java::security::AccessController),
	$classEntry("java.security.AccessController$AccHolder", ::java::security::AccessController$AccHolder),
	$classEntry("java.security.AlgorithmConstraints", ::java::security::AlgorithmConstraints),
	$classEntry("java.security.AlgorithmParameterGenerator", ::java::security::AlgorithmParameterGenerator),
	$classEntry("java.security.AlgorithmParameterGeneratorSpi", ::java::security::AlgorithmParameterGeneratorSpi),
	$classEntry("java.security.AlgorithmParameters", ::java::security::AlgorithmParameters),
	$classEntry("java.security.AlgorithmParametersSpi", ::java::security::AlgorithmParametersSpi),
	$classEntry("java.security.AllPermission", ::java::security::AllPermission),
	$classEntry("java.security.AllPermissionCollection", ::java::security::AllPermissionCollection),
	$classEntry("java.security.AllPermissionCollection$1", ::java::security::AllPermissionCollection$1),
	$classEntry("java.security.AuthProvider", ::java::security::AuthProvider),
	$classEntry("java.security.BasicPermission", ::java::security::BasicPermission),
	$classEntry("java.security.BasicPermissionCollection", ::java::security::BasicPermissionCollection),
	$classEntry("java.security.Certificate", ::java::security::Certificate),
	$classEntry("java.security.CodeSigner", ::java::security::CodeSigner),
	$classEntry("java.security.CodeSource", ::java::security::CodeSource),
	$classEntry("java.security.CryptoPrimitive", ::java::security::CryptoPrimitive),
	$classEntry("java.security.DigestException", ::java::security::DigestException),
	$classEntry("java.security.DigestInputStream", ::java::security::DigestInputStream),
	$classEntry("java.security.DigestOutputStream", ::java::security::DigestOutputStream),
	$classEntry("java.security.DomainCombiner", ::java::security::DomainCombiner),
	$classEntry("java.security.DomainLoadStoreParameter", ::java::security::DomainLoadStoreParameter),
	$classEntry("java.security.DrbgParameters", ::java::security::DrbgParameters),
	$classEntry("java.security.DrbgParameters$Capability", ::java::security::DrbgParameters$Capability),
	$classEntry("java.security.DrbgParameters$Instantiation", ::java::security::DrbgParameters$Instantiation),
	$classEntry("java.security.DrbgParameters$NextBytes", ::java::security::DrbgParameters$NextBytes),
	$classEntry("java.security.DrbgParameters$Reseed", ::java::security::DrbgParameters$Reseed),
	$classEntry("java.security.GeneralSecurityException", ::java::security::GeneralSecurityException),
	$classEntry("java.security.Guard", ::java::security::Guard),
	$classEntry("java.security.GuardedObject", ::java::security::GuardedObject),
	$classEntry("java.security.Identity", ::java::security::Identity),
	$classEntry("java.security.IdentityScope", ::java::security::IdentityScope),
	$classEntry("java.security.IdentityScope$1", ::java::security::IdentityScope$1),
	$classEntry("java.security.InvalidAlgorithmParameterException", ::java::security::InvalidAlgorithmParameterException),
	$classEntry("java.security.InvalidKeyException", ::java::security::InvalidKeyException),
	$classEntry("java.security.InvalidParameterException", ::java::security::InvalidParameterException),
	$classEntry("java.security.Key", ::java::security::Key),
	$classEntry("java.security.KeyException", ::java::security::KeyException),
	$classEntry("java.security.KeyFactory", ::java::security::KeyFactory),
	$classEntry("java.security.KeyFactorySpi", ::java::security::KeyFactorySpi),
	$classEntry("java.security.KeyManagementException", ::java::security::KeyManagementException),
	$classEntry("java.security.KeyPair", ::java::security::KeyPair),
	$classEntry("java.security.KeyPairGenerator", ::java::security::KeyPairGenerator),
	$classEntry("java.security.KeyPairGenerator$Delegate", ::java::security::KeyPairGenerator$Delegate),
	$classEntry("java.security.KeyPairGeneratorSpi", ::java::security::KeyPairGeneratorSpi),
	$classEntry("java.security.KeyRep", ::java::security::KeyRep),
	$classEntry("java.security.KeyRep$Type", ::java::security::KeyRep$Type),
	$classEntry("java.security.KeyStore", ::java::security::KeyStore),
	$classEntry("java.security.KeyStore$1", ::java::security::KeyStore$1),
	$classEntry("java.security.KeyStore$Builder", ::java::security::KeyStore$Builder),
	$classEntry("java.security.KeyStore$Builder$1", ::java::security::KeyStore$Builder$1),
	$classEntry("java.security.KeyStore$Builder$2", ::java::security::KeyStore$Builder$2),
	$classEntry("java.security.KeyStore$Builder$2$1", ::java::security::KeyStore$Builder$2$1),
	$classEntry("java.security.KeyStore$Builder$FileBuilder", ::java::security::KeyStore$Builder$FileBuilder),
	$classEntry("java.security.KeyStore$Builder$FileBuilder$1", ::java::security::KeyStore$Builder$FileBuilder$1),
	$classEntry("java.security.KeyStore$CallbackHandlerProtection", ::java::security::KeyStore$CallbackHandlerProtection),
	$classEntry("java.security.KeyStore$Entry", ::java::security::KeyStore$Entry),
	$classEntry("java.security.KeyStore$Entry$Attribute", ::java::security::KeyStore$Entry$Attribute),
	$classEntry("java.security.KeyStore$LoadStoreParameter", ::java::security::KeyStore$LoadStoreParameter),
	$classEntry("java.security.KeyStore$PasswordProtection", ::java::security::KeyStore$PasswordProtection),
	$classEntry("java.security.KeyStore$PrivateKeyEntry", ::java::security::KeyStore$PrivateKeyEntry),
	$classEntry("java.security.KeyStore$ProtectionParameter", ::java::security::KeyStore$ProtectionParameter),
	$classEntry("java.security.KeyStore$SecretKeyEntry", ::java::security::KeyStore$SecretKeyEntry),
	$classEntry("java.security.KeyStore$SimpleLoadStoreParameter", ::java::security::KeyStore$SimpleLoadStoreParameter),
	$classEntry("java.security.KeyStore$TrustedCertificateEntry", ::java::security::KeyStore$TrustedCertificateEntry),
	$classEntry("java.security.KeyStoreException", ::java::security::KeyStoreException),
	$classEntry("java.security.KeyStoreSpi", ::java::security::KeyStoreSpi),
	$classEntry("java.security.MessageDigest", ::java::security::MessageDigest),
	$classEntry("java.security.MessageDigest$Delegate", ::java::security::MessageDigest$Delegate),
	$classEntry("java.security.MessageDigest$Delegate$CloneableDelegate", ::java::security::MessageDigest$Delegate$CloneableDelegate),
	$classEntry("java.security.MessageDigestSpi", ::java::security::MessageDigestSpi),
	$classEntry("java.security.NoSuchAlgorithmException", ::java::security::NoSuchAlgorithmException),
	$classEntry("java.security.NoSuchProviderException", ::java::security::NoSuchProviderException),
	$classEntry("java.security.PKCS12Attribute", ::java::security::PKCS12Attribute),
	$classEntry("java.security.Permission", ::java::security::Permission),
	$classEntry("java.security.PermissionCollection", ::java::security::PermissionCollection),
	$classEntry("java.security.Permissions", ::java::security::Permissions),
	$classEntry("java.security.PermissionsEnumerator", ::java::security::PermissionsEnumerator),
	$classEntry("java.security.PermissionsHash", ::java::security::PermissionsHash),
	$classEntry("java.security.Policy", ::java::security::Policy),
	$classEntry("java.security.Policy$1", ::java::security::Policy$1),
	$classEntry("java.security.Policy$2", ::java::security::Policy$2),
	$classEntry("java.security.Policy$3", ::java::security::Policy$3),
	$classEntry("java.security.Policy$Parameters", ::java::security::Policy$Parameters),
	$classEntry("java.security.Policy$PolicyDelegate", ::java::security::Policy$PolicyDelegate),
	$classEntry("java.security.Policy$PolicyInfo", ::java::security::Policy$PolicyInfo),
	$classEntry("java.security.Policy$UnsupportedEmptyCollection", ::java::security::Policy$UnsupportedEmptyCollection),
	$classEntry("java.security.PolicySpi", ::java::security::PolicySpi),
	$classEntry("java.security.Principal", ::java::security::Principal),
	$classEntry("java.security.PrivateKey", ::java::security::PrivateKey),
	$classEntry("java.security.PrivilegedAction", ::java::security::PrivilegedAction),
	$classEntry("java.security.PrivilegedActionException", ::java::security::PrivilegedActionException),
	$classEntry("java.security.PrivilegedExceptionAction", ::java::security::PrivilegedExceptionAction),
	$classEntry("java.security.ProtectionDomain", ::java::security::ProtectionDomain),
	$classEntry("java.security.ProtectionDomain$1", ::java::security::ProtectionDomain$1),
	$classEntry("java.security.ProtectionDomain$DebugHolder", ::java::security::ProtectionDomain$DebugHolder),
	$classEntry("java.security.ProtectionDomain$JavaSecurityAccessImpl", ::java::security::ProtectionDomain$JavaSecurityAccessImpl),
	$classEntry("java.security.ProtectionDomain$JavaSecurityAccessImpl$1", ::java::security::ProtectionDomain$JavaSecurityAccessImpl$1),
	$classEntry("java.security.ProtectionDomain$Key", ::java::security::ProtectionDomain$Key),
	$classEntry("java.security.Provider", ::java::security::Provider),
	$classEntry("java.security.Provider$EngineDescription", ::java::security::Provider$EngineDescription),
	$classEntry("java.security.Provider$Service", ::java::security::Provider$Service),
	$classEntry("java.security.Provider$ServiceKey", ::java::security::Provider$ServiceKey),
	$classEntry("java.security.Provider$UString", ::java::security::Provider$UString),
	$classEntry("java.security.ProviderException", ::java::security::ProviderException),
	$classEntry("java.security.PublicKey", ::java::security::PublicKey),
	$classEntry("java.security.SecureClassLoader", ::java::security::SecureClassLoader),
	$classEntry("java.security.SecureClassLoader$1", ::java::security::SecureClassLoader$1),
	$classEntry("java.security.SecureClassLoader$CodeSourceKey", ::java::security::SecureClassLoader$CodeSourceKey),
	$classEntry("java.security.SecureClassLoader$DebugHolder", ::java::security::SecureClassLoader$DebugHolder),
	$classEntry("java.security.SecureRandom", ::java::security::SecureRandom),
	$classEntry("java.security.SecureRandom$1", ::java::security::SecureRandom$1),
	$classEntry("java.security.SecureRandom$StrongPatternHolder", ::java::security::SecureRandom$StrongPatternHolder),
	$classEntry("java.security.SecureRandomParameters", ::java::security::SecureRandomParameters),
	$classEntry("java.security.SecureRandomSpi", ::java::security::SecureRandomSpi),
	$classEntry("java.security.Security", ::java::security::Security),
	$classEntry("java.security.Security$1", ::java::security::Security$1),
	$classEntry("java.security.Security$ProviderProperty", ::java::security::Security$ProviderProperty),
	$classEntry("java.security.SecurityPermission", ::java::security::SecurityPermission),
	$classEntry("java.security.Signature", ::java::security::Signature),
	$classEntry("java.security.Signature$1", ::java::security::Signature$1),
	$classEntry("java.security.Signature$CipherAdapter", ::java::security::Signature$CipherAdapter),
	$classEntry("java.security.Signature$Delegate", ::java::security::Signature$Delegate),
	$classEntry("java.security.Signature$Delegate$CloneableDelegate", ::java::security::Signature$Delegate$CloneableDelegate),
	$classEntry("java.security.SignatureException", ::java::security::SignatureException),
	$classEntry("java.security.SignatureSpi", ::java::security::SignatureSpi),
	$classEntry("java.security.SignedObject", ::java::security::SignedObject),
	$classEntry("java.security.Signer", ::java::security::Signer),
	$classEntry("java.security.Signer$1", ::java::security::Signer$1),
	$classEntry("java.security.Timestamp", ::java::security::Timestamp),
	$classEntry("java.security.URIParameter", ::java::security::URIParameter),
	$classEntry("java.security.UnrecoverableEntryException", ::java::security::UnrecoverableEntryException),
	$classEntry("java.security.UnrecoverableKeyException", ::java::security::UnrecoverableKeyException),
	$classEntry("java.security.UnresolvedPermission", ::java::security::UnresolvedPermission),
	$classEntry("java.security.UnresolvedPermissionCollection", ::java::security::UnresolvedPermissionCollection),
	$classEntry("java.security.UnresolvedPermissionCollection$1", ::java::security::UnresolvedPermissionCollection$1),
	$classEntry("java.security.cert.CRL", ::java::security::cert::CRL),
	$classEntry("java.security.cert.CRLException", ::java::security::cert::CRLException),
	$classEntry("java.security.cert.CRLReason", ::java::security::cert::CRLReason),
	$classEntry("java.security.cert.CRLSelector", ::java::security::cert::CRLSelector),
	$classEntry("java.security.cert.CertPath", ::java::security::cert::CertPath),
	$classEntry("java.security.cert.CertPath$CertPathRep", ::java::security::cert::CertPath$CertPathRep),
	$classEntry("java.security.cert.CertPathBuilder", ::java::security::cert::CertPathBuilder),
	$classEntry("java.security.cert.CertPathBuilder$1", ::java::security::cert::CertPathBuilder$1),
	$classEntry("java.security.cert.CertPathBuilderException", ::java::security::cert::CertPathBuilderException),
	$classEntry("java.security.cert.CertPathBuilderResult", ::java::security::cert::CertPathBuilderResult),
	$classEntry("java.security.cert.CertPathBuilderSpi", ::java::security::cert::CertPathBuilderSpi),
	$classEntry("java.security.cert.CertPathChecker", ::java::security::cert::CertPathChecker),
	$classEntry("java.security.cert.CertPathHelperImpl", ::java::security::cert::CertPathHelperImpl),
	$classEntry("java.security.cert.CertPathParameters", ::java::security::cert::CertPathParameters),
	$classEntry("java.security.cert.CertPathValidator", ::java::security::cert::CertPathValidator),
	$classEntry("java.security.cert.CertPathValidator$1", ::java::security::cert::CertPathValidator$1),
	$classEntry("java.security.cert.CertPathValidatorException", ::java::security::cert::CertPathValidatorException),
	$classEntry("java.security.cert.CertPathValidatorException$BasicReason", ::java::security::cert::CertPathValidatorException$BasicReason),
	$classEntry("java.security.cert.CertPathValidatorException$Reason", ::java::security::cert::CertPathValidatorException$Reason),
	$classEntry("java.security.cert.CertPathValidatorResult", ::java::security::cert::CertPathValidatorResult),
	$classEntry("java.security.cert.CertPathValidatorSpi", ::java::security::cert::CertPathValidatorSpi),
	$classEntry("java.security.cert.CertSelector", ::java::security::cert::CertSelector),
	$classEntry("java.security.cert.CertStore", ::java::security::cert::CertStore),
	$classEntry("java.security.cert.CertStore$1", ::java::security::cert::CertStore$1),
	$classEntry("java.security.cert.CertStoreException", ::java::security::cert::CertStoreException),
	$classEntry("java.security.cert.CertStoreParameters", ::java::security::cert::CertStoreParameters),
	$classEntry("java.security.cert.CertStoreSpi", ::java::security::cert::CertStoreSpi),
	$classEntry("java.security.cert.Certificate", ::java::security::cert::Certificate),
	$classEntry("java.security.cert.Certificate$CertificateRep", ::java::security::cert::Certificate$CertificateRep),
	$classEntry("java.security.cert.CertificateEncodingException", ::java::security::cert::CertificateEncodingException),
	$classEntry("java.security.cert.CertificateException", ::java::security::cert::CertificateException),
	$classEntry("java.security.cert.CertificateExpiredException", ::java::security::cert::CertificateExpiredException),
	$classEntry("java.security.cert.CertificateFactory", ::java::security::cert::CertificateFactory),
	$classEntry("java.security.cert.CertificateFactorySpi", ::java::security::cert::CertificateFactorySpi),
	$classEntry("java.security.cert.CertificateNotYetValidException", ::java::security::cert::CertificateNotYetValidException),
	$classEntry("java.security.cert.CertificateParsingException", ::java::security::cert::CertificateParsingException),
	$classEntry("java.security.cert.CertificateRevokedException", ::java::security::cert::CertificateRevokedException),
	$classEntry("java.security.cert.CollectionCertStoreParameters", ::java::security::cert::CollectionCertStoreParameters),
	$classEntry("java.security.cert.Extension", ::java::security::cert::Extension),
	$classEntry("java.security.cert.LDAPCertStoreParameters", ::java::security::cert::LDAPCertStoreParameters),
	$classEntry("java.security.cert.PKIXBuilderParameters", ::java::security::cert::PKIXBuilderParameters),
	$classEntry("java.security.cert.PKIXCertPathBuilderResult", ::java::security::cert::PKIXCertPathBuilderResult),
	$classEntry("java.security.cert.PKIXCertPathChecker", ::java::security::cert::PKIXCertPathChecker),
	$classEntry("java.security.cert.PKIXCertPathValidatorResult", ::java::security::cert::PKIXCertPathValidatorResult),
	$classEntry("java.security.cert.PKIXParameters", ::java::security::cert::PKIXParameters),
	$classEntry("java.security.cert.PKIXReason", ::java::security::cert::PKIXReason),
	$classEntry("java.security.cert.PKIXRevocationChecker", ::java::security::cert::PKIXRevocationChecker),
	$classEntry("java.security.cert.PKIXRevocationChecker$Option", ::java::security::cert::PKIXRevocationChecker$Option),
	$classEntry("java.security.cert.PolicyNode", ::java::security::cert::PolicyNode),
	$classEntry("java.security.cert.PolicyQualifierInfo", ::java::security::cert::PolicyQualifierInfo),
	$classEntry("java.security.cert.TrustAnchor", ::java::security::cert::TrustAnchor),
	$classEntry("java.security.cert.URICertStoreParameters", ::java::security::cert::URICertStoreParameters),
	$classEntry("java.security.cert.X509CRL", ::java::security::cert::X509CRL),
	$classEntry("java.security.cert.X509CRLEntry", ::java::security::cert::X509CRLEntry),
	$classEntry("java.security.cert.X509CRLSelector", ::java::security::cert::X509CRLSelector),
	$classEntry("java.security.cert.X509CertSelector", ::java::security::cert::X509CertSelector),
	$classEntry("java.security.cert.X509CertSelector$1", ::java::security::cert::X509CertSelector$1),
	$classEntry("java.security.cert.X509Certificate", ::java::security::cert::X509Certificate),
	$classEntry("java.security.cert.X509Extension", ::java::security::cert::X509Extension),
	$classEntry("java.security.interfaces.DSAKey", ::java::security::interfaces::DSAKey),
	$classEntry("java.security.interfaces.DSAKeyPairGenerator", ::java::security::interfaces::DSAKeyPairGenerator),
	$classEntry("java.security.interfaces.DSAParams", ::java::security::interfaces::DSAParams),
	$classEntry("java.security.interfaces.DSAPrivateKey", ::java::security::interfaces::DSAPrivateKey),
	$classEntry("java.security.interfaces.DSAPublicKey", ::java::security::interfaces::DSAPublicKey),
	$classEntry("java.security.interfaces.ECKey", ::java::security::interfaces::ECKey),
	$classEntry("java.security.interfaces.ECPrivateKey", ::java::security::interfaces::ECPrivateKey),
	$classEntry("java.security.interfaces.ECPublicKey", ::java::security::interfaces::ECPublicKey),
	$classEntry("java.security.interfaces.EdECKey", ::java::security::interfaces::EdECKey),
	$classEntry("java.security.interfaces.EdECPrivateKey", ::java::security::interfaces::EdECPrivateKey),
	$classEntry("java.security.interfaces.EdECPublicKey", ::java::security::interfaces::EdECPublicKey),
	$classEntry("java.security.interfaces.RSAKey", ::java::security::interfaces::RSAKey),
	$classEntry("java.security.interfaces.RSAMultiPrimePrivateCrtKey", ::java::security::interfaces::RSAMultiPrimePrivateCrtKey),
	$classEntry("java.security.interfaces.RSAPrivateCrtKey", ::java::security::interfaces::RSAPrivateCrtKey),
	$classEntry("java.security.interfaces.RSAPrivateKey", ::java::security::interfaces::RSAPrivateKey),
	$classEntry("java.security.interfaces.RSAPublicKey", ::java::security::interfaces::RSAPublicKey),
	$classEntry("java.security.interfaces.XECKey", ::java::security::interfaces::XECKey),
	$classEntry("java.security.interfaces.XECPrivateKey", ::java::security::interfaces::XECPrivateKey),
	$classEntry("java.security.interfaces.XECPublicKey", ::java::security::interfaces::XECPublicKey),
	$classEntry("java.security.spec.AlgorithmParameterSpec", ::java::security::spec::AlgorithmParameterSpec),
	$classEntry("java.security.spec.DSAGenParameterSpec", ::java::security::spec::DSAGenParameterSpec),
	$classEntry("java.security.spec.DSAParameterSpec", ::java::security::spec::DSAParameterSpec),
	$classEntry("java.security.spec.DSAPrivateKeySpec", ::java::security::spec::DSAPrivateKeySpec),
	$classEntry("java.security.spec.DSAPublicKeySpec", ::java::security::spec::DSAPublicKeySpec),
	$classEntry("java.security.spec.ECField", ::java::security::spec::ECField),
	$classEntry("java.security.spec.ECFieldF2m", ::java::security::spec::ECFieldF2m),
	$classEntry("java.security.spec.ECFieldFp", ::java::security::spec::ECFieldFp),
	$classEntry("java.security.spec.ECGenParameterSpec", ::java::security::spec::ECGenParameterSpec),
	$classEntry("java.security.spec.ECParameterSpec", ::java::security::spec::ECParameterSpec),
	$classEntry("java.security.spec.ECPoint", ::java::security::spec::ECPoint),
	$classEntry("java.security.spec.ECPrivateKeySpec", ::java::security::spec::ECPrivateKeySpec),
	$classEntry("java.security.spec.ECPublicKeySpec", ::java::security::spec::ECPublicKeySpec),
	$classEntry("java.security.spec.EdDSAParameterSpec", ::java::security::spec::EdDSAParameterSpec),
	$classEntry("java.security.spec.EdECPoint", ::java::security::spec::EdECPoint),
	$classEntry("java.security.spec.EdECPrivateKeySpec", ::java::security::spec::EdECPrivateKeySpec),
	$classEntry("java.security.spec.EdECPublicKeySpec", ::java::security::spec::EdECPublicKeySpec),
	$classEntry("java.security.spec.EllipticCurve", ::java::security::spec::EllipticCurve),
	$classEntry("java.security.spec.EncodedKeySpec", ::java::security::spec::EncodedKeySpec),
	$classEntry("java.security.spec.EncodedKeySpec$1", ::java::security::spec::EncodedKeySpec$1),
	$classEntry("java.security.spec.InvalidKeySpecException", ::java::security::spec::InvalidKeySpecException),
	$classEntry("java.security.spec.InvalidParameterSpecException", ::java::security::spec::InvalidParameterSpecException),
	$classEntry("java.security.spec.KeySpec", ::java::security::spec::KeySpec),
	$classEntry("java.security.spec.MGF1ParameterSpec", ::java::security::spec::MGF1ParameterSpec),
	$classEntry("java.security.spec.NamedParameterSpec", ::java::security::spec::NamedParameterSpec),
	$classEntry("java.security.spec.PKCS8EncodedKeySpec", ::java::security::spec::PKCS8EncodedKeySpec),
	$classEntry("java.security.spec.PSSParameterSpec", ::java::security::spec::PSSParameterSpec),
	$classEntry("java.security.spec.RSAKeyGenParameterSpec", ::java::security::spec::RSAKeyGenParameterSpec),
	$classEntry("java.security.spec.RSAMultiPrimePrivateCrtKeySpec", ::java::security::spec::RSAMultiPrimePrivateCrtKeySpec),
	$classEntry("java.security.spec.RSAOtherPrimeInfo", ::java::security::spec::RSAOtherPrimeInfo),
	$classEntry("java.security.spec.RSAPrivateCrtKeySpec", ::java::security::spec::RSAPrivateCrtKeySpec),
	$classEntry("java.security.spec.RSAPrivateKeySpec", ::java::security::spec::RSAPrivateKeySpec),
	$classEntry("java.security.spec.RSAPublicKeySpec", ::java::security::spec::RSAPublicKeySpec),
	$classEntry("java.security.spec.X509EncodedKeySpec", ::java::security::spec::X509EncodedKeySpec),
	$classEntry("java.security.spec.XECPrivateKeySpec", ::java::security::spec::XECPrivateKeySpec),
	$classEntry("java.security.spec.XECPublicKeySpec", ::java::security::spec::XECPublicKeySpec),
	$classEntry("java.text.Annotation", ::java::text::Annotation),
	$classEntry("java.text.AttributeEntry", ::java::text::AttributeEntry),
	$classEntry("java.text.AttributedCharacterIterator", ::java::text::AttributedCharacterIterator),
	$classEntry("java.text.AttributedCharacterIterator$Attribute", ::java::text::AttributedCharacterIterator$Attribute),
	$classEntry("java.text.AttributedString", ::java::text::AttributedString),
	$classEntry("java.text.AttributedString$AttributeMap", ::java::text::AttributedString$AttributeMap),
	$classEntry("java.text.AttributedString$AttributedStringIterator", ::java::text::AttributedString$AttributedStringIterator),
	$classEntry("java.text.Bidi", ::java::text::Bidi),
	$classEntry("java.text.BreakIterator", ::java::text::BreakIterator),
	$classEntry("java.text.BreakIterator$BreakIteratorCache", ::java::text::BreakIterator$BreakIteratorCache),
	$classEntry("java.text.CalendarBuilder", ::java::text::CalendarBuilder),
	$classEntry("java.text.CharacterIterator", ::java::text::CharacterIterator),
	$classEntry("java.text.CharacterIteratorFieldDelegate", ::java::text::CharacterIteratorFieldDelegate),
	$classEntry("java.text.ChoiceFormat", ::java::text::ChoiceFormat),
	$classEntry("java.text.CollationElementIterator", ::java::text::CollationElementIterator),
	$classEntry("java.text.CollationKey", ::java::text::CollationKey),
	$classEntry("java.text.Collator", ::java::text::Collator),
	$classEntry("java.text.CompactNumberFormat", ::java::text::CompactNumberFormat),
	$classEntry("java.text.CompactNumberFormat$Patterns", ::java::text::CompactNumberFormat$Patterns),
	$classEntry("java.text.DateFormat", ::java::text::DateFormat),
	$classEntry("java.text.DateFormat$Field", ::java::text::DateFormat$Field),
	$classEntry("java.text.DateFormatSymbols", ::java::text::DateFormatSymbols),
	$classEntry("java.text.DecimalFormat", ::java::text::DecimalFormat),
	$classEntry("java.text.DecimalFormat$DigitArrays", ::java::text::DecimalFormat$DigitArrays),
	$classEntry("java.text.DecimalFormat$FastPathData", ::java::text::DecimalFormat$FastPathData),
	$classEntry("java.text.DecimalFormatSymbols", ::java::text::DecimalFormatSymbols),
	$classEntry("java.text.DigitList", ::java::text::DigitList),
	$classEntry("java.text.DigitList$1", ::java::text::DigitList$1),
	$classEntry("java.text.DontCareFieldPosition", ::java::text::DontCareFieldPosition),
	$classEntry("java.text.DontCareFieldPosition$1", ::java::text::DontCareFieldPosition$1),
	$classEntry("java.text.EntryPair", ::java::text::EntryPair),
	$classEntry("java.text.FieldPosition", ::java::text::FieldPosition),
	$classEntry("java.text.FieldPosition$Delegate", ::java::text::FieldPosition$Delegate),
	$classEntry("java.text.Format", ::java::text::Format),
	$classEntry("java.text.Format$Field", ::java::text::Format$Field),
	$classEntry("java.text.Format$FieldDelegate", ::java::text::Format$FieldDelegate),
	$classEntry("java.text.MergeCollation", ::java::text::MergeCollation),
	$classEntry("java.text.MessageFormat", ::java::text::MessageFormat),
	$classEntry("java.text.MessageFormat$Field", ::java::text::MessageFormat$Field),
	$classEntry("java.text.Normalizer", ::java::text::Normalizer),
	$classEntry("java.text.Normalizer$Form", ::java::text::Normalizer$Form),
	$classEntry("java.text.NumberFormat", ::java::text::NumberFormat),
	$classEntry("java.text.NumberFormat$Field", ::java::text::NumberFormat$Field),
	$classEntry("java.text.NumberFormat$Style", ::java::text::NumberFormat$Style),
	$classEntry("java.text.ParseException", ::java::text::ParseException),
	$classEntry("java.text.ParsePosition", ::java::text::ParsePosition),
	$classEntry("java.text.PatternEntry", ::java::text::PatternEntry),
	$classEntry("java.text.PatternEntry$Parser", ::java::text::PatternEntry$Parser),
	$classEntry("java.text.RBCollationTables", ::java::text::RBCollationTables),
	$classEntry("java.text.RBCollationTables$BuildAPI", ::java::text::RBCollationTables$BuildAPI),
	$classEntry("java.text.RBTableBuilder", ::java::text::RBTableBuilder),
	$classEntry("java.text.RuleBasedCollationKey", ::java::text::RuleBasedCollationKey),
	$classEntry("java.text.RuleBasedCollator", ::java::text::RuleBasedCollator),
	$classEntry("java.text.SimpleDateFormat", ::java::text::SimpleDateFormat),
	$classEntry("java.text.StringCharacterIterator", ::java::text::StringCharacterIterator),
	$classEntry("java.text.spi.BreakIteratorProvider", ::java::text::spi::BreakIteratorProvider),
	$classEntry("java.text.spi.CollatorProvider", ::java::text::spi::CollatorProvider),
	$classEntry("java.text.spi.DateFormatProvider", ::java::text::spi::DateFormatProvider),
	$classEntry("java.text.spi.DateFormatSymbolsProvider", ::java::text::spi::DateFormatSymbolsProvider),
	$classEntry("java.text.spi.DecimalFormatSymbolsProvider", ::java::text::spi::DecimalFormatSymbolsProvider),
	$classEntry("java.text.spi.NumberFormatProvider", ::java::text::spi::NumberFormatProvider),
	$classEntry("java.time.Clock", ::java::time::Clock),
	$classEntry("java.time.Clock$FixedClock", ::java::time::Clock$FixedClock),
	$classEntry("java.time.Clock$OffsetClock", ::java::time::Clock$OffsetClock),
	$classEntry("java.time.Clock$SourceClock", ::java::time::Clock$SourceClock),
	$classEntry("java.time.Clock$SystemClock", ::java::time::Clock$SystemClock),
	$classEntry("java.time.Clock$SystemInstantSource", ::java::time::Clock$SystemInstantSource),
	$classEntry("java.time.Clock$TickClock", ::java::time::Clock$TickClock),
	$classEntry("java.time.DateTimeException", ::java::time::DateTimeException),
	$classEntry("java.time.DayOfWeek", ::java::time::DayOfWeek),
	$classEntry("java.time.Duration", ::java::time::Duration),
	$classEntry("java.time.Duration$1", ::java::time::Duration$1),
	$classEntry("java.time.Duration$DurationUnits", ::java::time::Duration$DurationUnits),
	$classEntry("java.time.Duration$Lazy", ::java::time::Duration$Lazy),
	$classEntry("java.time.Instant", ::java::time::Instant),
	$classEntry("java.time.Instant$1", ::java::time::Instant$1),
	$classEntry("java.time.InstantSource", ::java::time::InstantSource),
	$classEntry("java.time.LocalDate", ::java::time::LocalDate),
	$classEntry("java.time.LocalDate$1", ::java::time::LocalDate$1),
	$classEntry("java.time.LocalDateTime", ::java::time::LocalDateTime),
	$classEntry("java.time.LocalDateTime$1", ::java::time::LocalDateTime$1),
	$classEntry("java.time.LocalTime", ::java::time::LocalTime),
	$classEntry("java.time.LocalTime$1", ::java::time::LocalTime$1),
	$classEntry("java.time.Month", ::java::time::Month),
	$classEntry("java.time.Month$1", ::java::time::Month$1),
	$classEntry("java.time.MonthDay", ::java::time::MonthDay),
	$classEntry("java.time.MonthDay$1", ::java::time::MonthDay$1),
	$classEntry("java.time.OffsetDateTime", ::java::time::OffsetDateTime),
	$classEntry("java.time.OffsetDateTime$1", ::java::time::OffsetDateTime$1),
	$classEntry("java.time.OffsetTime", ::java::time::OffsetTime),
	$classEntry("java.time.OffsetTime$1", ::java::time::OffsetTime$1),
	$classEntry("java.time.Period", ::java::time::Period),
	$classEntry("java.time.Ser", ::java::time::Ser),
	$classEntry("java.time.Year", ::java::time::Year),
	$classEntry("java.time.Year$1", ::java::time::Year$1),
	$classEntry("java.time.YearMonth", ::java::time::YearMonth),
	$classEntry("java.time.YearMonth$1", ::java::time::YearMonth$1),
	$classEntry("java.time.ZoneId", ::java::time::ZoneId),
	$classEntry("java.time.ZoneId$1", ::java::time::ZoneId$1),
	$classEntry("java.time.ZoneOffset", ::java::time::ZoneOffset),
	$classEntry("java.time.ZoneRegion", ::java::time::ZoneRegion),
	$classEntry("java.time.ZonedDateTime", ::java::time::ZonedDateTime),
	$classEntry("java.time.ZonedDateTime$1", ::java::time::ZonedDateTime$1),
	$classEntry("java.time.chrono.AbstractChronology", ::java::time::chrono::AbstractChronology),
	$classEntry("java.time.chrono.ChronoLocalDate", ::java::time::chrono::ChronoLocalDate),
	$classEntry("java.time.chrono.ChronoLocalDateImpl", ::java::time::chrono::ChronoLocalDateImpl),
	$classEntry("java.time.chrono.ChronoLocalDateImpl$1", ::java::time::chrono::ChronoLocalDateImpl$1),
	$classEntry("java.time.chrono.ChronoLocalDateTime", ::java::time::chrono::ChronoLocalDateTime),
	$classEntry("java.time.chrono.ChronoLocalDateTimeImpl", ::java::time::chrono::ChronoLocalDateTimeImpl),
	$classEntry("java.time.chrono.ChronoLocalDateTimeImpl$1", ::java::time::chrono::ChronoLocalDateTimeImpl$1),
	$classEntry("java.time.chrono.ChronoPeriod", ::java::time::chrono::ChronoPeriod),
	$classEntry("java.time.chrono.ChronoPeriodImpl", ::java::time::chrono::ChronoPeriodImpl),
	$classEntry("java.time.chrono.ChronoZonedDateTime", ::java::time::chrono::ChronoZonedDateTime),
	$classEntry("java.time.chrono.ChronoZonedDateTime$1", ::java::time::chrono::ChronoZonedDateTime$1),
	$classEntry("java.time.chrono.ChronoZonedDateTimeImpl", ::java::time::chrono::ChronoZonedDateTimeImpl),
	$classEntry("java.time.chrono.ChronoZonedDateTimeImpl$1", ::java::time::chrono::ChronoZonedDateTimeImpl$1),
	$classEntry("java.time.chrono.Chronology", ::java::time::chrono::Chronology),
	$classEntry("java.time.chrono.Chronology$1", ::java::time::chrono::Chronology$1),
	$classEntry("java.time.chrono.Era", ::java::time::chrono::Era),
	$classEntry("java.time.chrono.HijrahChronology", ::java::time::chrono::HijrahChronology),
	$classEntry("java.time.chrono.HijrahChronology$1", ::java::time::chrono::HijrahChronology$1),
	$classEntry("java.time.chrono.HijrahDate", ::java::time::chrono::HijrahDate),
	$classEntry("java.time.chrono.HijrahDate$1", ::java::time::chrono::HijrahDate$1),
	$classEntry("java.time.chrono.HijrahEra", ::java::time::chrono::HijrahEra),
	$classEntry("java.time.chrono.IsoChronology", ::java::time::chrono::IsoChronology),
	$classEntry("java.time.chrono.IsoEra", ::java::time::chrono::IsoEra),
	$classEntry("java.time.chrono.JapaneseChronology", ::java::time::chrono::JapaneseChronology),
	$classEntry("java.time.chrono.JapaneseChronology$1", ::java::time::chrono::JapaneseChronology$1),
	$classEntry("java.time.chrono.JapaneseDate", ::java::time::chrono::JapaneseDate),
	$classEntry("java.time.chrono.JapaneseDate$1", ::java::time::chrono::JapaneseDate$1),
	$classEntry("java.time.chrono.JapaneseEra", ::java::time::chrono::JapaneseEra),
	$classEntry("java.time.chrono.MinguoChronology", ::java::time::chrono::MinguoChronology),
	$classEntry("java.time.chrono.MinguoChronology$1", ::java::time::chrono::MinguoChronology$1),
	$classEntry("java.time.chrono.MinguoDate", ::java::time::chrono::MinguoDate),
	$classEntry("java.time.chrono.MinguoDate$1", ::java::time::chrono::MinguoDate$1),
	$classEntry("java.time.chrono.MinguoEra", ::java::time::chrono::MinguoEra),
	$classEntry("java.time.chrono.Ser", ::java::time::chrono::Ser),
	$classEntry("java.time.chrono.ThaiBuddhistChronology", ::java::time::chrono::ThaiBuddhistChronology),
	$classEntry("java.time.chrono.ThaiBuddhistChronology$1", ::java::time::chrono::ThaiBuddhistChronology$1),
	$classEntry("java.time.chrono.ThaiBuddhistDate", ::java::time::chrono::ThaiBuddhistDate),
	$classEntry("java.time.chrono.ThaiBuddhistDate$1", ::java::time::chrono::ThaiBuddhistDate$1),
	$classEntry("java.time.chrono.ThaiBuddhistEra", ::java::time::chrono::ThaiBuddhistEra),
	$classEntry("java.time.format.DateTimeFormatter", ::java::time::format::DateTimeFormatter),
	$classEntry("java.time.format.DateTimeFormatter$ClassicFormat", ::java::time::format::DateTimeFormatter$ClassicFormat),
	$classEntry("java.time.format.DateTimeFormatterBuilder", ::java::time::format::DateTimeFormatterBuilder),
	$classEntry("java.time.format.DateTimeFormatterBuilder$1", ::java::time::format::DateTimeFormatterBuilder$1),
	$classEntry("java.time.format.DateTimeFormatterBuilder$2", ::java::time::format::DateTimeFormatterBuilder$2),
	$classEntry("java.time.format.DateTimeFormatterBuilder$CharLiteralPrinterParser", ::java::time::format::DateTimeFormatterBuilder$CharLiteralPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$ChronoPrinterParser", ::java::time::format::DateTimeFormatterBuilder$ChronoPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$CompositePrinterParser", ::java::time::format::DateTimeFormatterBuilder$CompositePrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser", ::java::time::format::DateTimeFormatterBuilder$DateTimePrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$DayPeriod", ::java::time::format::DateTimeFormatterBuilder$DayPeriod),
	$classEntry("java.time.format.DateTimeFormatterBuilder$DayPeriodPrinterParser", ::java::time::format::DateTimeFormatterBuilder$DayPeriodPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$DefaultValueParser", ::java::time::format::DateTimeFormatterBuilder$DefaultValueParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$FractionPrinterParser", ::java::time::format::DateTimeFormatterBuilder$FractionPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$InstantPrinterParser", ::java::time::format::DateTimeFormatterBuilder$InstantPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser", ::java::time::format::DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$LocalizedPrinterParser", ::java::time::format::DateTimeFormatterBuilder$LocalizedPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$NumberPrinterParser", ::java::time::format::DateTimeFormatterBuilder$NumberPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$OffsetIdPrinterParser", ::java::time::format::DateTimeFormatterBuilder$OffsetIdPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$PadPrinterParserDecorator", ::java::time::format::DateTimeFormatterBuilder$PadPrinterParserDecorator),
	$classEntry("java.time.format.DateTimeFormatterBuilder$PrefixTree", ::java::time::format::DateTimeFormatterBuilder$PrefixTree),
	$classEntry("java.time.format.DateTimeFormatterBuilder$PrefixTree$CI", ::java::time::format::DateTimeFormatterBuilder$PrefixTree$CI),
	$classEntry("java.time.format.DateTimeFormatterBuilder$PrefixTree$LENIENT", ::java::time::format::DateTimeFormatterBuilder$PrefixTree$LENIENT),
	$classEntry("java.time.format.DateTimeFormatterBuilder$ReducedPrinterParser", ::java::time::format::DateTimeFormatterBuilder$ReducedPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$SettingsParser", ::java::time::format::DateTimeFormatterBuilder$SettingsParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$StringLiteralPrinterParser", ::java::time::format::DateTimeFormatterBuilder$StringLiteralPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$TextPrinterParser", ::java::time::format::DateTimeFormatterBuilder$TextPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$WeekBasedFieldPrinterParser", ::java::time::format::DateTimeFormatterBuilder$WeekBasedFieldPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$ZoneIdPrinterParser", ::java::time::format::DateTimeFormatterBuilder$ZoneIdPrinterParser),
	$classEntry("java.time.format.DateTimeFormatterBuilder$ZoneTextPrinterParser", ::java::time::format::DateTimeFormatterBuilder$ZoneTextPrinterParser),
	$classEntry("java.time.format.DateTimeParseContext", ::java::time::format::DateTimeParseContext),
	$classEntry("java.time.format.DateTimeParseException", ::java::time::format::DateTimeParseException),
	$classEntry("java.time.format.DateTimePrintContext", ::java::time::format::DateTimePrintContext),
	$classEntry("java.time.format.DateTimePrintContext$1", ::java::time::format::DateTimePrintContext$1),
	$classEntry("java.time.format.DateTimeTextProvider", ::java::time::format::DateTimeTextProvider),
	$classEntry("java.time.format.DateTimeTextProvider$1", ::java::time::format::DateTimeTextProvider$1),
	$classEntry("java.time.format.DateTimeTextProvider$2", ::java::time::format::DateTimeTextProvider$2),
	$classEntry("java.time.format.DateTimeTextProvider$LocaleStore", ::java::time::format::DateTimeTextProvider$LocaleStore),
	$classEntry("java.time.format.DecimalStyle", ::java::time::format::DecimalStyle),
	$classEntry("java.time.format.FormatStyle", ::java::time::format::FormatStyle),
	$classEntry("java.time.format.Parsed", ::java::time::format::Parsed),
	$classEntry("java.time.format.ResolverStyle", ::java::time::format::ResolverStyle),
	$classEntry("java.time.format.SignStyle", ::java::time::format::SignStyle),
	$classEntry("java.time.format.TextStyle", ::java::time::format::TextStyle),
	$classEntry("java.time.format.ZoneName", ::java::time::format::ZoneName),
	$classEntry("java.time.temporal.ChronoField", ::java::time::temporal::ChronoField),
	$classEntry("java.time.temporal.ChronoUnit", ::java::time::temporal::ChronoUnit),
	$classEntry("java.time.temporal.IsoFields", ::java::time::temporal::IsoFields),
	$classEntry("java.time.temporal.IsoFields$1", ::java::time::temporal::IsoFields$1),
	$classEntry("java.time.temporal.IsoFields$Field", ::java::time::temporal::IsoFields$Field),
	$classEntry("java.time.temporal.IsoFields$Field$1", ::java::time::temporal::IsoFields$Field$1),
	$classEntry("java.time.temporal.IsoFields$Field$2", ::java::time::temporal::IsoFields$Field$2),
	$classEntry("java.time.temporal.IsoFields$Field$3", ::java::time::temporal::IsoFields$Field$3),
	$classEntry("java.time.temporal.IsoFields$Field$4", ::java::time::temporal::IsoFields$Field$4),
	$classEntry("java.time.temporal.IsoFields$Unit", ::java::time::temporal::IsoFields$Unit),
	$classEntry("java.time.temporal.JulianFields", ::java::time::temporal::JulianFields),
	$classEntry("java.time.temporal.JulianFields$Field", ::java::time::temporal::JulianFields$Field),
	$classEntry("java.time.temporal.Temporal", ::java::time::temporal::Temporal),
	$classEntry("java.time.temporal.TemporalAccessor", ::java::time::temporal::TemporalAccessor),
	$classEntry("java.time.temporal.TemporalAdjuster", ::java::time::temporal::TemporalAdjuster),
	$classEntry("java.time.temporal.TemporalAdjusters", ::java::time::temporal::TemporalAdjusters),
	$classEntry("java.time.temporal.TemporalAmount", ::java::time::temporal::TemporalAmount),
	$classEntry("java.time.temporal.TemporalField", ::java::time::temporal::TemporalField),
	$classEntry("java.time.temporal.TemporalQueries", ::java::time::temporal::TemporalQueries),
	$classEntry("java.time.temporal.TemporalQueries$1", ::java::time::temporal::TemporalQueries$1),
	$classEntry("java.time.temporal.TemporalQueries$2", ::java::time::temporal::TemporalQueries$2),
	$classEntry("java.time.temporal.TemporalQueries$3", ::java::time::temporal::TemporalQueries$3),
	$classEntry("java.time.temporal.TemporalQueries$4", ::java::time::temporal::TemporalQueries$4),
	$classEntry("java.time.temporal.TemporalQueries$5", ::java::time::temporal::TemporalQueries$5),
	$classEntry("java.time.temporal.TemporalQueries$6", ::java::time::temporal::TemporalQueries$6),
	$classEntry("java.time.temporal.TemporalQueries$7", ::java::time::temporal::TemporalQueries$7),
	$classEntry("java.time.temporal.TemporalQuery", ::java::time::temporal::TemporalQuery),
	$classEntry("java.time.temporal.TemporalUnit", ::java::time::temporal::TemporalUnit),
	$classEntry("java.time.temporal.UnsupportedTemporalTypeException", ::java::time::temporal::UnsupportedTemporalTypeException),
	$classEntry("java.time.temporal.ValueRange", ::java::time::temporal::ValueRange),
	$classEntry("java.time.temporal.WeekFields", ::java::time::temporal::WeekFields),
	$classEntry("java.time.temporal.WeekFields$ComputedDayOfField", ::java::time::temporal::WeekFields$ComputedDayOfField),
	$classEntry("java.time.zone.Ser", ::java::time::zone::Ser),
	$classEntry("java.time.zone.TzdbZoneRulesProvider", ::java::time::zone::TzdbZoneRulesProvider),
	$classEntry("java.time.zone.ZoneOffsetTransition", ::java::time::zone::ZoneOffsetTransition),
	$classEntry("java.time.zone.ZoneOffsetTransitionRule", ::java::time::zone::ZoneOffsetTransitionRule),
	$classEntry("java.time.zone.ZoneOffsetTransitionRule$1", ::java::time::zone::ZoneOffsetTransitionRule$1),
	$classEntry("java.time.zone.ZoneOffsetTransitionRule$TimeDefinition", ::java::time::zone::ZoneOffsetTransitionRule$TimeDefinition),
	$classEntry("java.time.zone.ZoneRules", ::java::time::zone::ZoneRules),
	$classEntry("java.time.zone.ZoneRulesException", ::java::time::zone::ZoneRulesException),
	$classEntry("java.time.zone.ZoneRulesProvider", ::java::time::zone::ZoneRulesProvider),
	$classEntry("java.time.zone.ZoneRulesProvider$1", ::java::time::zone::ZoneRulesProvider$1),
	$classEntry("java.util.AbstractCollection", ::java::util::AbstractCollection),
	$classEntry("java.util.AbstractList", ::java::util::AbstractList),
	$classEntry("java.util.AbstractList$Itr", ::java::util::AbstractList$Itr),
	$classEntry("java.util.AbstractList$ListItr", ::java::util::AbstractList$ListItr),
	$classEntry("java.util.AbstractList$RandomAccessSpliterator", ::java::util::AbstractList$RandomAccessSpliterator),
	$classEntry("java.util.AbstractList$RandomAccessSubList", ::java::util::AbstractList$RandomAccessSubList),
	$classEntry("java.util.AbstractList$SubList", ::java::util::AbstractList$SubList),
	$classEntry("java.util.AbstractList$SubList$1", ::java::util::AbstractList$SubList$1),
	$classEntry("java.util.AbstractMap", ::java::util::AbstractMap),
	$classEntry("java.util.AbstractMap$1", ::java::util::AbstractMap$1),
	$classEntry("java.util.AbstractMap$1$1", ::java::util::AbstractMap$1$1),
	$classEntry("java.util.AbstractMap$2", ::java::util::AbstractMap$2),
	$classEntry("java.util.AbstractMap$2$1", ::java::util::AbstractMap$2$1),
	$classEntry("java.util.AbstractMap$SimpleEntry", ::java::util::AbstractMap$SimpleEntry),
	$classEntry("java.util.AbstractMap$SimpleImmutableEntry", ::java::util::AbstractMap$SimpleImmutableEntry),
	$classEntry("java.util.AbstractQueue", ::java::util::AbstractQueue),
	$classEntry("java.util.AbstractSequentialList", ::java::util::AbstractSequentialList),
	$classEntry("java.util.AbstractSet", ::java::util::AbstractSet),
	$classEntry("java.util.ArrayDeque", ::java::util::ArrayDeque),
	$classEntry("java.util.ArrayDeque$DeqIterator", ::java::util::ArrayDeque$DeqIterator),
	$classEntry("java.util.ArrayDeque$DeqSpliterator", ::java::util::ArrayDeque$DeqSpliterator),
	$classEntry("java.util.ArrayDeque$DescendingIterator", ::java::util::ArrayDeque$DescendingIterator),
	$classEntry("java.util.ArrayList", ::java::util::ArrayList),
	$classEntry("java.util.ArrayList$ArrayListSpliterator", ::java::util::ArrayList$ArrayListSpliterator),
	$classEntry("java.util.ArrayList$Itr", ::java::util::ArrayList$Itr),
	$classEntry("java.util.ArrayList$ListItr", ::java::util::ArrayList$ListItr),
	$classEntry("java.util.ArrayList$SubList", ::java::util::ArrayList$SubList),
	$classEntry("java.util.ArrayList$SubList$1", ::java::util::ArrayList$SubList$1),
	$classEntry("java.util.ArrayList$SubList$2", ::java::util::ArrayList$SubList$2),
	$classEntry("java.util.ArrayPrefixHelpers", ::java::util::ArrayPrefixHelpers),
	$classEntry("java.util.ArrayPrefixHelpers$CumulateTask", ::java::util::ArrayPrefixHelpers$CumulateTask),
	$classEntry("java.util.ArrayPrefixHelpers$DoubleCumulateTask", ::java::util::ArrayPrefixHelpers$DoubleCumulateTask),
	$classEntry("java.util.ArrayPrefixHelpers$IntCumulateTask", ::java::util::ArrayPrefixHelpers$IntCumulateTask),
	$classEntry("java.util.ArrayPrefixHelpers$LongCumulateTask", ::java::util::ArrayPrefixHelpers$LongCumulateTask),
	$classEntry("java.util.Arrays", ::java::util::Arrays),
	$classEntry("java.util.Arrays$ArrayItr", ::java::util::Arrays$ArrayItr),
	$classEntry("java.util.Arrays$ArrayList", ::java::util::Arrays$ArrayList),
	$classEntry("java.util.Arrays$LegacyMergeSort", ::java::util::Arrays$LegacyMergeSort),
	$classEntry("java.util.Arrays$NaturalOrder", ::java::util::Arrays$NaturalOrder),
	$classEntry("java.util.ArraysParallelSortHelpers", ::java::util::ArraysParallelSortHelpers),
	$classEntry("java.util.ArraysParallelSortHelpers$EmptyCompleter", ::java::util::ArraysParallelSortHelpers$EmptyCompleter),
	$classEntry("java.util.ArraysParallelSortHelpers$FJObject", ::java::util::ArraysParallelSortHelpers$FJObject),
	$classEntry("java.util.ArraysParallelSortHelpers$FJObject$Merger", ::java::util::ArraysParallelSortHelpers$FJObject$Merger),
	$classEntry("java.util.ArraysParallelSortHelpers$FJObject$Sorter", ::java::util::ArraysParallelSortHelpers$FJObject$Sorter),
	$classEntry("java.util.ArraysParallelSortHelpers$Relay", ::java::util::ArraysParallelSortHelpers$Relay),
	$classEntry("java.util.Base64", ::java::util::Base64),
	$classEntry("java.util.Base64$DecInputStream", ::java::util::Base64$DecInputStream),
	$classEntry("java.util.Base64$Decoder", ::java::util::Base64$Decoder),
	$classEntry("java.util.Base64$EncOutputStream", ::java::util::Base64$EncOutputStream),
	$classEntry("java.util.Base64$Encoder", ::java::util::Base64$Encoder),
	$classEntry("java.util.BitSet", ::java::util::BitSet),
	$classEntry("java.util.BitSet$1BitSetSpliterator", ::java::util::BitSet$1BitSetSpliterator),
	$classEntry("java.util.Calendar", ::java::util::Calendar),
	$classEntry("java.util.Calendar$1", ::java::util::Calendar$1),
	$classEntry("java.util.Calendar$AvailableCalendarTypes", ::java::util::Calendar$AvailableCalendarTypes),
	$classEntry("java.util.Calendar$Builder", ::java::util::Calendar$Builder),
	$classEntry("java.util.Calendar$CalendarAccessControlContext", ::java::util::Calendar$CalendarAccessControlContext),
	$classEntry("java.util.CollSer", ::java::util::CollSer),
	$classEntry("java.util.Collection", ::java::util::Collection),
	$classEntry("java.util.Collections", ::java::util::Collections),
	$classEntry("java.util.Collections$1", ::java::util::Collections$1),
	$classEntry("java.util.Collections$2", ::java::util::Collections$2),
	$classEntry("java.util.Collections$3", ::java::util::Collections$3),
	$classEntry("java.util.Collections$AsLIFOQueue", ::java::util::Collections$AsLIFOQueue),
	$classEntry("java.util.Collections$CheckedCollection", ::java::util::Collections$CheckedCollection),
	$classEntry("java.util.Collections$CheckedCollection$1", ::java::util::Collections$CheckedCollection$1),
	$classEntry("java.util.Collections$CheckedList", ::java::util::Collections$CheckedList),
	$classEntry("java.util.Collections$CheckedList$1", ::java::util::Collections$CheckedList$1),
	$classEntry("java.util.Collections$CheckedMap", ::java::util::Collections$CheckedMap),
	$classEntry("java.util.Collections$CheckedMap$CheckedEntrySet", ::java::util::Collections$CheckedMap$CheckedEntrySet),
	$classEntry("java.util.Collections$CheckedMap$CheckedEntrySet$1", ::java::util::Collections$CheckedMap$CheckedEntrySet$1),
	$classEntry("java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry", ::java::util::Collections$CheckedMap$CheckedEntrySet$CheckedEntry),
	$classEntry("java.util.Collections$CheckedNavigableMap", ::java::util::Collections$CheckedNavigableMap),
	$classEntry("java.util.Collections$CheckedNavigableSet", ::java::util::Collections$CheckedNavigableSet),
	$classEntry("java.util.Collections$CheckedQueue", ::java::util::Collections$CheckedQueue),
	$classEntry("java.util.Collections$CheckedRandomAccessList", ::java::util::Collections$CheckedRandomAccessList),
	$classEntry("java.util.Collections$CheckedSet", ::java::util::Collections$CheckedSet),
	$classEntry("java.util.Collections$CheckedSortedMap", ::java::util::Collections$CheckedSortedMap),
	$classEntry("java.util.Collections$CheckedSortedSet", ::java::util::Collections$CheckedSortedSet),
	$classEntry("java.util.Collections$CopiesList", ::java::util::Collections$CopiesList),
	$classEntry("java.util.Collections$EmptyEnumeration", ::java::util::Collections$EmptyEnumeration),
	$classEntry("java.util.Collections$EmptyIterator", ::java::util::Collections$EmptyIterator),
	$classEntry("java.util.Collections$EmptyList", ::java::util::Collections$EmptyList),
	$classEntry("java.util.Collections$EmptyListIterator", ::java::util::Collections$EmptyListIterator),
	$classEntry("java.util.Collections$EmptyMap", ::java::util::Collections$EmptyMap),
	$classEntry("java.util.Collections$EmptySet", ::java::util::Collections$EmptySet),
	$classEntry("java.util.Collections$ReverseComparator", ::java::util::Collections$ReverseComparator),
	$classEntry("java.util.Collections$ReverseComparator2", ::java::util::Collections$ReverseComparator2),
	$classEntry("java.util.Collections$SetFromMap", ::java::util::Collections$SetFromMap),
	$classEntry("java.util.Collections$SingletonList", ::java::util::Collections$SingletonList),
	$classEntry("java.util.Collections$SingletonMap", ::java::util::Collections$SingletonMap),
	$classEntry("java.util.Collections$SingletonSet", ::java::util::Collections$SingletonSet),
	$classEntry("java.util.Collections$SynchronizedCollection", ::java::util::Collections$SynchronizedCollection),
	$classEntry("java.util.Collections$SynchronizedList", ::java::util::Collections$SynchronizedList),
	$classEntry("java.util.Collections$SynchronizedMap", ::java::util::Collections$SynchronizedMap),
	$classEntry("java.util.Collections$SynchronizedNavigableMap", ::java::util::Collections$SynchronizedNavigableMap),
	$classEntry("java.util.Collections$SynchronizedNavigableSet", ::java::util::Collections$SynchronizedNavigableSet),
	$classEntry("java.util.Collections$SynchronizedRandomAccessList", ::java::util::Collections$SynchronizedRandomAccessList),
	$classEntry("java.util.Collections$SynchronizedSet", ::java::util::Collections$SynchronizedSet),
	$classEntry("java.util.Collections$SynchronizedSortedMap", ::java::util::Collections$SynchronizedSortedMap),
	$classEntry("java.util.Collections$SynchronizedSortedSet", ::java::util::Collections$SynchronizedSortedSet),
	$classEntry("java.util.Collections$UnmodifiableCollection", ::java::util::Collections$UnmodifiableCollection),
	$classEntry("java.util.Collections$UnmodifiableCollection$1", ::java::util::Collections$UnmodifiableCollection$1),
	$classEntry("java.util.Collections$UnmodifiableList", ::java::util::Collections$UnmodifiableList),
	$classEntry("java.util.Collections$UnmodifiableList$1", ::java::util::Collections$UnmodifiableList$1),
	$classEntry("java.util.Collections$UnmodifiableMap", ::java::util::Collections$UnmodifiableMap),
	$classEntry("java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet", ::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet),
	$classEntry("java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1", ::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet$1),
	$classEntry("java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry", ::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry),
	$classEntry("java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator", ::java::util::Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator),
	$classEntry("java.util.Collections$UnmodifiableNavigableMap", ::java::util::Collections$UnmodifiableNavigableMap),
	$classEntry("java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap", ::java::util::Collections$UnmodifiableNavigableMap$EmptyNavigableMap),
	$classEntry("java.util.Collections$UnmodifiableNavigableSet", ::java::util::Collections$UnmodifiableNavigableSet),
	$classEntry("java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet", ::java::util::Collections$UnmodifiableNavigableSet$EmptyNavigableSet),
	$classEntry("java.util.Collections$UnmodifiableRandomAccessList", ::java::util::Collections$UnmodifiableRandomAccessList),
	$classEntry("java.util.Collections$UnmodifiableSet", ::java::util::Collections$UnmodifiableSet),
	$classEntry("java.util.Collections$UnmodifiableSortedMap", ::java::util::Collections$UnmodifiableSortedMap),
	$classEntry("java.util.Collections$UnmodifiableSortedSet", ::java::util::Collections$UnmodifiableSortedSet),
	$classEntry("java.util.ComparableTimSort", ::java::util::ComparableTimSort),
	$classEntry("java.util.Comparator", ::java::util::Comparator),
	$classEntry("java.util.Comparators", ::java::util::Comparators),
	$classEntry("java.util.Comparators$NaturalOrderComparator", ::java::util::Comparators$NaturalOrderComparator),
	$classEntry("java.util.Comparators$NullComparator", ::java::util::Comparators$NullComparator),
	$classEntry("java.util.ConcurrentModificationException", ::java::util::ConcurrentModificationException),
	$classEntry("java.util.Currency", ::java::util::Currency),
	$classEntry("java.util.Currency$1", ::java::util::Currency$1),
	$classEntry("java.util.Currency$CurrencyNameGetter", ::java::util::Currency$CurrencyNameGetter),
	$classEntry("java.util.Currency$CurrencyProperty", ::java::util::Currency$CurrencyProperty),
	$classEntry("java.util.Currency$OtherCurrencyEntry", ::java::util::Currency$OtherCurrencyEntry),
	$classEntry("java.util.Currency$SpecialCaseEntry", ::java::util::Currency$SpecialCaseEntry),
	$classEntry("java.util.Date", ::java::util::Date),
	$classEntry("java.util.Deque", ::java::util::Deque),
	$classEntry("java.util.Dictionary", ::java::util::Dictionary),
	$classEntry("java.util.DoubleSummaryStatistics", ::java::util::DoubleSummaryStatistics),
	$classEntry("java.util.DualPivotQuicksort", ::java::util::DualPivotQuicksort),
	$classEntry("java.util.DualPivotQuicksort$Merger", ::java::util::DualPivotQuicksort$Merger),
	$classEntry("java.util.DualPivotQuicksort$RunMerger", ::java::util::DualPivotQuicksort$RunMerger),
	$classEntry("java.util.DualPivotQuicksort$Sorter", ::java::util::DualPivotQuicksort$Sorter),
	$classEntry("java.util.DuplicateFormatFlagsException", ::java::util::DuplicateFormatFlagsException),
	$classEntry("java.util.EmptyStackException", ::java::util::EmptyStackException),
	$classEntry("java.util.EnumMap", ::java::util::EnumMap),
	$classEntry("java.util.EnumMap$1", ::java::util::EnumMap$1),
	$classEntry("java.util.EnumMap$EntryIterator", ::java::util::EnumMap$EntryIterator),
	$classEntry("java.util.EnumMap$EntryIterator$Entry", ::java::util::EnumMap$EntryIterator$Entry),
	$classEntry("java.util.EnumMap$EntrySet", ::java::util::EnumMap$EntrySet),
	$classEntry("java.util.EnumMap$EnumMapIterator", ::java::util::EnumMap$EnumMapIterator),
	$classEntry("java.util.EnumMap$KeyIterator", ::java::util::EnumMap$KeyIterator),
	$classEntry("java.util.EnumMap$KeySet", ::java::util::EnumMap$KeySet),
	$classEntry("java.util.EnumMap$ValueIterator", ::java::util::EnumMap$ValueIterator),
	$classEntry("java.util.EnumMap$Values", ::java::util::EnumMap$Values),
	$classEntry("java.util.EnumSet", ::java::util::EnumSet),
	$classEntry("java.util.EnumSet$SerializationProxy", ::java::util::EnumSet$SerializationProxy),
	$classEntry("java.util.Enumeration", ::java::util::Enumeration),
	$classEntry("java.util.Enumeration$1", ::java::util::Enumeration$1),
	$classEntry("java.util.EventListener", ::java::util::EventListener),
	$classEntry("java.util.EventListenerProxy", ::java::util::EventListenerProxy),
	$classEntry("java.util.EventObject", ::java::util::EventObject),
	$classEntry("java.util.FormatFlagsConversionMismatchException", ::java::util::FormatFlagsConversionMismatchException),
	$classEntry("java.util.Formattable", ::java::util::Formattable),
	$classEntry("java.util.FormattableFlags", ::java::util::FormattableFlags),
	$classEntry("java.util.Formatter", ::java::util::Formatter),
	$classEntry("java.util.Formatter$BigDecimalLayoutForm", ::java::util::Formatter$BigDecimalLayoutForm),
	$classEntry("java.util.Formatter$Conversion", ::java::util::Formatter$Conversion),
	$classEntry("java.util.Formatter$DateTime", ::java::util::Formatter$DateTime),
	$classEntry("java.util.Formatter$FixedString", ::java::util::Formatter$FixedString),
	$classEntry("java.util.Formatter$Flags", ::java::util::Formatter$Flags),
	$classEntry("java.util.Formatter$FormatSpecifier", ::java::util::Formatter$FormatSpecifier),
	$classEntry("java.util.Formatter$FormatSpecifier$BigDecimalLayout", ::java::util::Formatter$FormatSpecifier$BigDecimalLayout),
	$classEntry("java.util.Formatter$FormatString", ::java::util::Formatter$FormatString),
	$classEntry("java.util.FormatterClosedException", ::java::util::FormatterClosedException),
	$classEntry("java.util.GregorianCalendar", ::java::util::GregorianCalendar),
	$classEntry("java.util.HashMap", ::java::util::HashMap),
	$classEntry("java.util.HashMap$EntryIterator", ::java::util::HashMap$EntryIterator),
	$classEntry("java.util.HashMap$EntrySet", ::java::util::HashMap$EntrySet),
	$classEntry("java.util.HashMap$EntrySpliterator", ::java::util::HashMap$EntrySpliterator),
	$classEntry("java.util.HashMap$HashIterator", ::java::util::HashMap$HashIterator),
	$classEntry("java.util.HashMap$HashMapSpliterator", ::java::util::HashMap$HashMapSpliterator),
	$classEntry("java.util.HashMap$KeyIterator", ::java::util::HashMap$KeyIterator),
	$classEntry("java.util.HashMap$KeySet", ::java::util::HashMap$KeySet),
	$classEntry("java.util.HashMap$KeySpliterator", ::java::util::HashMap$KeySpliterator),
	$classEntry("java.util.HashMap$Node", ::java::util::HashMap$Node),
	$classEntry("java.util.HashMap$TreeNode", ::java::util::HashMap$TreeNode),
	$classEntry("java.util.HashMap$ValueIterator", ::java::util::HashMap$ValueIterator),
	$classEntry("java.util.HashMap$ValueSpliterator", ::java::util::HashMap$ValueSpliterator),
	$classEntry("java.util.HashMap$Values", ::java::util::HashMap$Values),
	$classEntry("java.util.HashSet", ::java::util::HashSet),
	$classEntry("java.util.Hashtable", ::java::util::Hashtable),
	$classEntry("java.util.Hashtable$Entry", ::java::util::Hashtable$Entry),
	$classEntry("java.util.Hashtable$EntrySet", ::java::util::Hashtable$EntrySet),
	$classEntry("java.util.Hashtable$Enumerator", ::java::util::Hashtable$Enumerator),
	$classEntry("java.util.Hashtable$KeySet", ::java::util::Hashtable$KeySet),
	$classEntry("java.util.Hashtable$ValueCollection", ::java::util::Hashtable$ValueCollection),
	$classEntry("java.util.HexFormat", ::java::util::HexFormat),
	$classEntry("java.util.IdentityHashMap", ::java::util::IdentityHashMap),
	$classEntry("java.util.IdentityHashMap$EntryIterator", ::java::util::IdentityHashMap$EntryIterator),
	$classEntry("java.util.IdentityHashMap$EntryIterator$Entry", ::java::util::IdentityHashMap$EntryIterator$Entry),
	$classEntry("java.util.IdentityHashMap$EntrySet", ::java::util::IdentityHashMap$EntrySet),
	$classEntry("java.util.IdentityHashMap$EntrySpliterator", ::java::util::IdentityHashMap$EntrySpliterator),
	$classEntry("java.util.IdentityHashMap$IdentityHashMapIterator", ::java::util::IdentityHashMap$IdentityHashMapIterator),
	$classEntry("java.util.IdentityHashMap$IdentityHashMapSpliterator", ::java::util::IdentityHashMap$IdentityHashMapSpliterator),
	$classEntry("java.util.IdentityHashMap$KeyIterator", ::java::util::IdentityHashMap$KeyIterator),
	$classEntry("java.util.IdentityHashMap$KeySet", ::java::util::IdentityHashMap$KeySet),
	$classEntry("java.util.IdentityHashMap$KeySpliterator", ::java::util::IdentityHashMap$KeySpliterator),
	$classEntry("java.util.IdentityHashMap$ValueIterator", ::java::util::IdentityHashMap$ValueIterator),
	$classEntry("java.util.IdentityHashMap$ValueSpliterator", ::java::util::IdentityHashMap$ValueSpliterator),
	$classEntry("java.util.IdentityHashMap$Values", ::java::util::IdentityHashMap$Values),
	$classEntry("java.util.IllegalFormatArgumentIndexException", ::java::util::IllegalFormatArgumentIndexException),
	$classEntry("java.util.IllegalFormatCodePointException", ::java::util::IllegalFormatCodePointException),
	$classEntry("java.util.IllegalFormatConversionException", ::java::util::IllegalFormatConversionException),
	$classEntry("java.util.IllegalFormatException", ::java::util::IllegalFormatException),
	$classEntry("java.util.IllegalFormatFlagsException", ::java::util::IllegalFormatFlagsException),
	$classEntry("java.util.IllegalFormatPrecisionException", ::java::util::IllegalFormatPrecisionException),
	$classEntry("java.util.IllegalFormatWidthException", ::java::util::IllegalFormatWidthException),
	$classEntry("java.util.IllformedLocaleException", ::java::util::IllformedLocaleException),
	$classEntry("java.util.ImmutableCollections", ::java::util::ImmutableCollections),
	$classEntry("java.util.ImmutableCollections$AbstractImmutableCollection", ::java::util::ImmutableCollections$AbstractImmutableCollection),
	$classEntry("java.util.ImmutableCollections$AbstractImmutableList", ::java::util::ImmutableCollections$AbstractImmutableList),
	$classEntry("java.util.ImmutableCollections$AbstractImmutableMap", ::java::util::ImmutableCollections$AbstractImmutableMap),
	$classEntry("java.util.ImmutableCollections$AbstractImmutableSet", ::java::util::ImmutableCollections$AbstractImmutableSet),
	$classEntry("java.util.ImmutableCollections$Access", ::java::util::ImmutableCollections$Access),
	$classEntry("java.util.ImmutableCollections$Access$1", ::java::util::ImmutableCollections$Access$1),
	$classEntry("java.util.ImmutableCollections$List12", ::java::util::ImmutableCollections$List12),
	$classEntry("java.util.ImmutableCollections$ListItr", ::java::util::ImmutableCollections$ListItr),
	$classEntry("java.util.ImmutableCollections$ListN", ::java::util::ImmutableCollections$ListN),
	$classEntry("java.util.ImmutableCollections$Map1", ::java::util::ImmutableCollections$Map1),
	$classEntry("java.util.ImmutableCollections$MapN", ::java::util::ImmutableCollections$MapN),
	$classEntry("java.util.ImmutableCollections$MapN$1", ::java::util::ImmutableCollections$MapN$1),
	$classEntry("java.util.ImmutableCollections$MapN$MapNIterator", ::java::util::ImmutableCollections$MapN$MapNIterator),
	$classEntry("java.util.ImmutableCollections$Set12", ::java::util::ImmutableCollections$Set12),
	$classEntry("java.util.ImmutableCollections$Set12$1", ::java::util::ImmutableCollections$Set12$1),
	$classEntry("java.util.ImmutableCollections$SetN", ::java::util::ImmutableCollections$SetN),
	$classEntry("java.util.ImmutableCollections$SetN$SetNIterator", ::java::util::ImmutableCollections$SetN$SetNIterator),
	$classEntry("java.util.ImmutableCollections$SubList", ::java::util::ImmutableCollections$SubList),
	$classEntry("java.util.InputMismatchException", ::java::util::InputMismatchException),
	$classEntry("java.util.IntSummaryStatistics", ::java::util::IntSummaryStatistics),
	$classEntry("java.util.InvalidPropertiesFormatException", ::java::util::InvalidPropertiesFormatException),
	$classEntry("java.util.Iterator", ::java::util::Iterator),
	$classEntry("java.util.JapaneseImperialCalendar", ::java::util::JapaneseImperialCalendar),
	$classEntry("java.util.JumboEnumSet", ::java::util::JumboEnumSet),
	$classEntry("java.util.JumboEnumSet$EnumSetIterator", ::java::util::JumboEnumSet$EnumSetIterator),
	$classEntry("java.util.KeyValueHolder", ::java::util::KeyValueHolder),
	$classEntry("java.util.LinkedHashMap", ::java::util::LinkedHashMap),
	$classEntry("java.util.LinkedHashMap$Entry", ::java::util::LinkedHashMap$Entry),
	$classEntry("java.util.LinkedHashMap$LinkedEntryIterator", ::java::util::LinkedHashMap$LinkedEntryIterator),
	$classEntry("java.util.LinkedHashMap$LinkedEntrySet", ::java::util::LinkedHashMap$LinkedEntrySet),
	$classEntry("java.util.LinkedHashMap$LinkedHashIterator", ::java::util::LinkedHashMap$LinkedHashIterator),
	$classEntry("java.util.LinkedHashMap$LinkedKeyIterator", ::java::util::LinkedHashMap$LinkedKeyIterator),
	$classEntry("java.util.LinkedHashMap$LinkedKeySet", ::java::util::LinkedHashMap$LinkedKeySet),
	$classEntry("java.util.LinkedHashMap$LinkedValueIterator", ::java::util::LinkedHashMap$LinkedValueIterator),
	$classEntry("java.util.LinkedHashMap$LinkedValues", ::java::util::LinkedHashMap$LinkedValues),
	$classEntry("java.util.LinkedHashSet", ::java::util::LinkedHashSet),
	$classEntry("java.util.LinkedList", ::java::util::LinkedList),
	$classEntry("java.util.LinkedList$DescendingIterator", ::java::util::LinkedList$DescendingIterator),
	$classEntry("java.util.LinkedList$LLSpliterator", ::java::util::LinkedList$LLSpliterator),
	$classEntry("java.util.LinkedList$ListItr", ::java::util::LinkedList$ListItr),
	$classEntry("java.util.LinkedList$Node", ::java::util::LinkedList$Node),
	$classEntry("java.util.List", ::java::util::List),
	$classEntry("java.util.ListIterator", ::java::util::ListIterator),
	$classEntry("java.util.ListResourceBundle", ::java::util::ListResourceBundle),
	$classEntry("java.util.Locale", ::java::util::Locale),
	$classEntry("java.util.Locale$1", ::java::util::Locale$1),
	$classEntry("java.util.Locale$Builder", ::java::util::Locale$Builder),
	$classEntry("java.util.Locale$Cache", ::java::util::Locale$Cache),
	$classEntry("java.util.Locale$Category", ::java::util::Locale$Category),
	$classEntry("java.util.Locale$FilteringMode", ::java::util::Locale$FilteringMode),
	$classEntry("java.util.Locale$IsoCountryCode", ::java::util::Locale$IsoCountryCode),
	$classEntry("java.util.Locale$IsoCountryCode$1", ::java::util::Locale$IsoCountryCode$1),
	$classEntry("java.util.Locale$IsoCountryCode$2", ::java::util::Locale$IsoCountryCode$2),
	$classEntry("java.util.Locale$IsoCountryCode$3", ::java::util::Locale$IsoCountryCode$3),
	$classEntry("java.util.Locale$LanguageRange", ::java::util::Locale$LanguageRange),
	$classEntry("java.util.Locale$LocaleKey", ::java::util::Locale$LocaleKey),
	$classEntry("java.util.Locale$LocaleNameGetter", ::java::util::Locale$LocaleNameGetter),
	$classEntry("java.util.LocaleISOData", ::java::util::LocaleISOData),
	$classEntry("java.util.LongSummaryStatistics", ::java::util::LongSummaryStatistics),
	$classEntry("java.util.Map", ::java::util::Map),
	$classEntry("java.util.Map$Entry", ::java::util::Map$Entry),
	$classEntry("java.util.MissingFormatArgumentException", ::java::util::MissingFormatArgumentException),
	$classEntry("java.util.MissingFormatWidthException", ::java::util::MissingFormatWidthException),
	$classEntry("java.util.MissingResourceException", ::java::util::MissingResourceException),
	$classEntry("java.util.NavigableMap", ::java::util::NavigableMap),
	$classEntry("java.util.NavigableSet", ::java::util::NavigableSet),
	$classEntry("java.util.NoSuchElementException", ::java::util::NoSuchElementException),
	$classEntry("java.util.Objects", ::java::util::Objects),
	$classEntry("java.util.Observable", ::java::util::Observable),
	$classEntry("java.util.Observer", ::java::util::Observer),
	$classEntry("java.util.Optional", ::java::util::Optional),
	$classEntry("java.util.OptionalDouble", ::java::util::OptionalDouble),
	$classEntry("java.util.OptionalInt", ::java::util::OptionalInt),
	$classEntry("java.util.OptionalLong", ::java::util::OptionalLong),
	$classEntry("java.util.PrimitiveIterator", ::java::util::PrimitiveIterator),
	$classEntry("java.util.PrimitiveIterator$OfDouble", ::java::util::PrimitiveIterator$OfDouble),
	$classEntry("java.util.PrimitiveIterator$OfInt", ::java::util::PrimitiveIterator$OfInt),
	$classEntry("java.util.PrimitiveIterator$OfLong", ::java::util::PrimitiveIterator$OfLong),
	$classEntry("java.util.PriorityQueue", ::java::util::PriorityQueue),
	$classEntry("java.util.PriorityQueue$Itr", ::java::util::PriorityQueue$Itr),
	$classEntry("java.util.PriorityQueue$PriorityQueueSpliterator", ::java::util::PriorityQueue$PriorityQueueSpliterator),
	$classEntry("java.util.Properties", ::java::util::Properties),
	$classEntry("java.util.Properties$EntrySet", ::java::util::Properties$EntrySet),
	$classEntry("java.util.Properties$LineReader", ::java::util::Properties$LineReader),
	$classEntry("java.util.PropertyPermission", ::java::util::PropertyPermission),
	$classEntry("java.util.PropertyPermissionCollection", ::java::util::PropertyPermissionCollection),
	$classEntry("java.util.PropertyPermissionCollection$1", ::java::util::PropertyPermissionCollection$1),
	$classEntry("java.util.PropertyResourceBundle", ::java::util::PropertyResourceBundle),
	$classEntry("java.util.Queue", ::java::util::Queue),
	$classEntry("java.util.Random", ::java::util::Random),
	$classEntry("java.util.RandomAccess", ::java::util::RandomAccess),
	$classEntry("java.util.RegularEnumSet", ::java::util::RegularEnumSet),
	$classEntry("java.util.RegularEnumSet$EnumSetIterator", ::java::util::RegularEnumSet$EnumSetIterator),
	$classEntry("java.util.ResourceBundle", ::java::util::ResourceBundle),
	$classEntry("java.util.ResourceBundle$1", ::java::util::ResourceBundle$1),
	$classEntry("java.util.ResourceBundle$2", ::java::util::ResourceBundle$2),
	$classEntry("java.util.ResourceBundle$3", ::java::util::ResourceBundle$3),
	$classEntry("java.util.ResourceBundle$4", ::java::util::ResourceBundle$4),
	$classEntry("java.util.ResourceBundle$BundleReference", ::java::util::ResourceBundle$BundleReference),
	$classEntry("java.util.ResourceBundle$CacheKey", ::java::util::ResourceBundle$CacheKey),
	$classEntry("java.util.ResourceBundle$CacheKeyReference", ::java::util::ResourceBundle$CacheKeyReference),
	$classEntry("java.util.ResourceBundle$Control", ::java::util::ResourceBundle$Control),
	$classEntry("java.util.ResourceBundle$Control$1", ::java::util::ResourceBundle$Control$1),
	$classEntry("java.util.ResourceBundle$Control$2", ::java::util::ResourceBundle$Control$2),
	$classEntry("java.util.ResourceBundle$Control$CandidateListCache", ::java::util::ResourceBundle$Control$CandidateListCache),
	$classEntry("java.util.ResourceBundle$KeyElementReference", ::java::util::ResourceBundle$KeyElementReference),
	$classEntry("java.util.ResourceBundle$NoFallbackControl", ::java::util::ResourceBundle$NoFallbackControl),
	$classEntry("java.util.ResourceBundle$ResourceBundleControlProviderHolder", ::java::util::ResourceBundle$ResourceBundleControlProviderHolder),
	$classEntry("java.util.ResourceBundle$ResourceBundleProviderHelper", ::java::util::ResourceBundle$ResourceBundleProviderHelper),
	$classEntry("java.util.ResourceBundle$SingleFormatControl", ::java::util::ResourceBundle$SingleFormatControl),
	$classEntry("java.util.Scanner", ::java::util::Scanner),
	$classEntry("java.util.Scanner$FindSpliterator", ::java::util::Scanner$FindSpliterator),
	$classEntry("java.util.Scanner$PatternLRUCache", ::java::util::Scanner$PatternLRUCache),
	$classEntry("java.util.Scanner$TokenSpliterator", ::java::util::Scanner$TokenSpliterator),
	$classEntry("java.util.ServiceConfigurationError", ::java::util::ServiceConfigurationError),
	$classEntry("java.util.ServiceLoader", ::java::util::ServiceLoader),
	$classEntry("java.util.ServiceLoader$1", ::java::util::ServiceLoader$1),
	$classEntry("java.util.ServiceLoader$2", ::java::util::ServiceLoader$2),
	$classEntry("java.util.ServiceLoader$3", ::java::util::ServiceLoader$3),
	$classEntry("java.util.ServiceLoader$LayerLookupIterator", ::java::util::ServiceLoader$LayerLookupIterator),
	$classEntry("java.util.ServiceLoader$LazyClassPathLookupIterator", ::java::util::ServiceLoader$LazyClassPathLookupIterator),
	$classEntry("java.util.ServiceLoader$LazyClassPathLookupIterator$1", ::java::util::ServiceLoader$LazyClassPathLookupIterator$1),
	$classEntry("java.util.ServiceLoader$LazyClassPathLookupIterator$2", ::java::util::ServiceLoader$LazyClassPathLookupIterator$2),
	$classEntry("java.util.ServiceLoader$ModuleServicesLookupIterator", ::java::util::ServiceLoader$ModuleServicesLookupIterator),
	$classEntry("java.util.ServiceLoader$Provider", ::java::util::ServiceLoader$Provider),
	$classEntry("java.util.ServiceLoader$ProviderImpl", ::java::util::ServiceLoader$ProviderImpl),
	$classEntry("java.util.ServiceLoader$ProviderImpl$1", ::java::util::ServiceLoader$ProviderImpl$1),
	$classEntry("java.util.ServiceLoader$ProviderImpl$2", ::java::util::ServiceLoader$ProviderImpl$2),
	$classEntry("java.util.ServiceLoader$ProviderSpliterator", ::java::util::ServiceLoader$ProviderSpliterator),
	$classEntry("java.util.Set", ::java::util::Set),
	$classEntry("java.util.SimpleTimeZone", ::java::util::SimpleTimeZone),
	$classEntry("java.util.SimpleTimeZone$Cache", ::java::util::SimpleTimeZone$Cache),
	$classEntry("java.util.SortedMap", ::java::util::SortedMap),
	$classEntry("java.util.SortedSet", ::java::util::SortedSet),
	$classEntry("java.util.SortedSet$1", ::java::util::SortedSet$1),
	$classEntry("java.util.Spliterator", ::java::util::Spliterator),
	$classEntry("java.util.Spliterator$OfDouble", ::java::util::Spliterator$OfDouble),
	$classEntry("java.util.Spliterator$OfInt", ::java::util::Spliterator$OfInt),
	$classEntry("java.util.Spliterator$OfLong", ::java::util::Spliterator$OfLong),
	$classEntry("java.util.Spliterator$OfPrimitive", ::java::util::Spliterator$OfPrimitive),
	$classEntry("java.util.Spliterators", ::java::util::Spliterators),
	$classEntry("java.util.Spliterators$1Adapter", ::java::util::Spliterators$1Adapter),
	$classEntry("java.util.Spliterators$2Adapter", ::java::util::Spliterators$2Adapter),
	$classEntry("java.util.Spliterators$3Adapter", ::java::util::Spliterators$3Adapter),
	$classEntry("java.util.Spliterators$4Adapter", ::java::util::Spliterators$4Adapter),
	$classEntry("java.util.Spliterators$AbstractDoubleSpliterator", ::java::util::Spliterators$AbstractDoubleSpliterator),
	$classEntry("java.util.Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer", ::java::util::Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer),
	$classEntry("java.util.Spliterators$AbstractIntSpliterator", ::java::util::Spliterators$AbstractIntSpliterator),
	$classEntry("java.util.Spliterators$AbstractIntSpliterator$HoldingIntConsumer", ::java::util::Spliterators$AbstractIntSpliterator$HoldingIntConsumer),
	$classEntry("java.util.Spliterators$AbstractLongSpliterator", ::java::util::Spliterators$AbstractLongSpliterator),
	$classEntry("java.util.Spliterators$AbstractLongSpliterator$HoldingLongConsumer", ::java::util::Spliterators$AbstractLongSpliterator$HoldingLongConsumer),
	$classEntry("java.util.Spliterators$AbstractSpliterator", ::java::util::Spliterators$AbstractSpliterator),
	$classEntry("java.util.Spliterators$AbstractSpliterator$HoldingConsumer", ::java::util::Spliterators$AbstractSpliterator$HoldingConsumer),
	$classEntry("java.util.Spliterators$ArraySpliterator", ::java::util::Spliterators$ArraySpliterator),
	$classEntry("java.util.Spliterators$DoubleArraySpliterator", ::java::util::Spliterators$DoubleArraySpliterator),
	$classEntry("java.util.Spliterators$DoubleIteratorSpliterator", ::java::util::Spliterators$DoubleIteratorSpliterator),
	$classEntry("java.util.Spliterators$EmptySpliterator", ::java::util::Spliterators$EmptySpliterator),
	$classEntry("java.util.Spliterators$EmptySpliterator$OfDouble", ::java::util::Spliterators$EmptySpliterator$OfDouble),
	$classEntry("java.util.Spliterators$EmptySpliterator$OfInt", ::java::util::Spliterators$EmptySpliterator$OfInt),
	$classEntry("java.util.Spliterators$EmptySpliterator$OfLong", ::java::util::Spliterators$EmptySpliterator$OfLong),
	$classEntry("java.util.Spliterators$EmptySpliterator$OfRef", ::java::util::Spliterators$EmptySpliterator$OfRef),
	$classEntry("java.util.Spliterators$IntArraySpliterator", ::java::util::Spliterators$IntArraySpliterator),
	$classEntry("java.util.Spliterators$IntIteratorSpliterator", ::java::util::Spliterators$IntIteratorSpliterator),
	$classEntry("java.util.Spliterators$IteratorSpliterator", ::java::util::Spliterators$IteratorSpliterator),
	$classEntry("java.util.Spliterators$LongArraySpliterator", ::java::util::Spliterators$LongArraySpliterator),
	$classEntry("java.util.Spliterators$LongIteratorSpliterator", ::java::util::Spliterators$LongIteratorSpliterator),
	$classEntry("java.util.SplittableRandom", ::java::util::SplittableRandom),
	$classEntry("java.util.SplittableRandom$AbstractSplittableGeneratorProxy", ::java::util::SplittableRandom$AbstractSplittableGeneratorProxy),
	$classEntry("java.util.Stack", ::java::util::Stack),
	$classEntry("java.util.StringJoiner", ::java::util::StringJoiner),
	$classEntry("java.util.StringTokenizer", ::java::util::StringTokenizer),
	$classEntry("java.util.TaskQueue", ::java::util::TaskQueue),
	$classEntry("java.util.TimSort", ::java::util::TimSort),
	$classEntry("java.util.TimeZone", ::java::util::TimeZone),
	$classEntry("java.util.Timer", ::java::util::Timer),
	$classEntry("java.util.Timer$ThreadReaper", ::java::util::Timer$ThreadReaper),
	$classEntry("java.util.TimerTask", ::java::util::TimerTask),
	$classEntry("java.util.TimerThread", ::java::util::TimerThread),
	$classEntry("java.util.TooManyListenersException", ::java::util::TooManyListenersException),
	$classEntry("java.util.TreeMap", ::java::util::TreeMap),
	$classEntry("java.util.TreeMap$AscendingSubMap", ::java::util::TreeMap$AscendingSubMap),
	$classEntry("java.util.TreeMap$AscendingSubMap$AscendingEntrySetView", ::java::util::TreeMap$AscendingSubMap$AscendingEntrySetView),
	$classEntry("java.util.TreeMap$DescendingKeyIterator", ::java::util::TreeMap$DescendingKeyIterator),
	$classEntry("java.util.TreeMap$DescendingKeySpliterator", ::java::util::TreeMap$DescendingKeySpliterator),
	$classEntry("java.util.TreeMap$DescendingSubMap", ::java::util::TreeMap$DescendingSubMap),
	$classEntry("java.util.TreeMap$DescendingSubMap$DescendingEntrySetView", ::java::util::TreeMap$DescendingSubMap$DescendingEntrySetView),
	$classEntry("java.util.TreeMap$Entry", ::java::util::TreeMap$Entry),
	$classEntry("java.util.TreeMap$EntryIterator", ::java::util::TreeMap$EntryIterator),
	$classEntry("java.util.TreeMap$EntrySet", ::java::util::TreeMap$EntrySet),
	$classEntry("java.util.TreeMap$EntrySpliterator", ::java::util::TreeMap$EntrySpliterator),
	$classEntry("java.util.TreeMap$KeyIterator", ::java::util::TreeMap$KeyIterator),
	$classEntry("java.util.TreeMap$KeySet", ::java::util::TreeMap$KeySet),
	$classEntry("java.util.TreeMap$KeySpliterator", ::java::util::TreeMap$KeySpliterator),
	$classEntry("java.util.TreeMap$NavigableSubMap", ::java::util::TreeMap$NavigableSubMap),
	$classEntry("java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator", ::java::util::TreeMap$NavigableSubMap$DescendingSubMapEntryIterator),
	$classEntry("java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator", ::java::util::TreeMap$NavigableSubMap$DescendingSubMapKeyIterator),
	$classEntry("java.util.TreeMap$NavigableSubMap$EntrySetView", ::java::util::TreeMap$NavigableSubMap$EntrySetView),
	$classEntry("java.util.TreeMap$NavigableSubMap$SubMapEntryIterator", ::java::util::TreeMap$NavigableSubMap$SubMapEntryIterator),
	$classEntry("java.util.TreeMap$NavigableSubMap$SubMapIterator", ::java::util::TreeMap$NavigableSubMap$SubMapIterator),
	$classEntry("java.util.TreeMap$NavigableSubMap$SubMapKeyIterator", ::java::util::TreeMap$NavigableSubMap$SubMapKeyIterator),
	$classEntry("java.util.TreeMap$PrivateEntryIterator", ::java::util::TreeMap$PrivateEntryIterator),
	$classEntry("java.util.TreeMap$SubMap", ::java::util::TreeMap$SubMap),
	$classEntry("java.util.TreeMap$TreeMapSpliterator", ::java::util::TreeMap$TreeMapSpliterator),
	$classEntry("java.util.TreeMap$ValueIterator", ::java::util::TreeMap$ValueIterator),
	$classEntry("java.util.TreeMap$ValueSpliterator", ::java::util::TreeMap$ValueSpliterator),
	$classEntry("java.util.TreeMap$Values", ::java::util::TreeMap$Values),
	$classEntry("java.util.TreeSet", ::java::util::TreeSet),
	$classEntry("java.util.Tripwire", ::java::util::Tripwire),
	$classEntry("java.util.UUID", ::java::util::UUID),
	$classEntry("java.util.UUID$Holder", ::java::util::UUID$Holder),
	$classEntry("java.util.UnknownFormatConversionException", ::java::util::UnknownFormatConversionException),
	$classEntry("java.util.UnknownFormatFlagsException", ::java::util::UnknownFormatFlagsException),
	$classEntry("java.util.Vector", ::java::util::Vector),
	$classEntry("java.util.Vector$1", ::java::util::Vector$1),
	$classEntry("java.util.Vector$Itr", ::java::util::Vector$Itr),
	$classEntry("java.util.Vector$ListItr", ::java::util::Vector$ListItr),
	$classEntry("java.util.Vector$VectorSpliterator", ::java::util::Vector$VectorSpliterator),
	$classEntry("java.util.WeakHashMap", ::java::util::WeakHashMap),
	$classEntry("java.util.WeakHashMap$Entry", ::java::util::WeakHashMap$Entry),
	$classEntry("java.util.WeakHashMap$EntryIterator", ::java::util::WeakHashMap$EntryIterator),
	$classEntry("java.util.WeakHashMap$EntrySet", ::java::util::WeakHashMap$EntrySet),
	$classEntry("java.util.WeakHashMap$EntrySpliterator", ::java::util::WeakHashMap$EntrySpliterator),
	$classEntry("java.util.WeakHashMap$HashIterator", ::java::util::WeakHashMap$HashIterator),
	$classEntry("java.util.WeakHashMap$KeyIterator", ::java::util::WeakHashMap$KeyIterator),
	$classEntry("java.util.WeakHashMap$KeySet", ::java::util::WeakHashMap$KeySet),
	$classEntry("java.util.WeakHashMap$KeySpliterator", ::java::util::WeakHashMap$KeySpliterator),
	$classEntry("java.util.WeakHashMap$ValueIterator", ::java::util::WeakHashMap$ValueIterator),
	$classEntry("java.util.WeakHashMap$ValueSpliterator", ::java::util::WeakHashMap$ValueSpliterator),
	$classEntry("java.util.WeakHashMap$Values", ::java::util::WeakHashMap$Values),
	$classEntry("java.util.WeakHashMap$WeakHashMapSpliterator", ::java::util::WeakHashMap$WeakHashMapSpliterator),
	$classEntry("java.util.concurrent.AbstractExecutorService", ::java::util::concurrent::AbstractExecutorService),
	$classEntry("java.util.concurrent.ArrayBlockingQueue", ::java::util::concurrent::ArrayBlockingQueue),
	$classEntry("java.util.concurrent.ArrayBlockingQueue$Itr", ::java::util::concurrent::ArrayBlockingQueue$Itr),
	$classEntry("java.util.concurrent.ArrayBlockingQueue$Itrs", ::java::util::concurrent::ArrayBlockingQueue$Itrs),
	$classEntry("java.util.concurrent.ArrayBlockingQueue$Itrs$Node", ::java::util::concurrent::ArrayBlockingQueue$Itrs$Node),
	$classEntry("java.util.concurrent.BlockingDeque", ::java::util::concurrent::BlockingDeque),
	$classEntry("java.util.concurrent.BlockingQueue", ::java::util::concurrent::BlockingQueue),
	$classEntry("java.util.concurrent.BrokenBarrierException", ::java::util::concurrent::BrokenBarrierException),
	$classEntry("java.util.concurrent.Callable", ::java::util::concurrent::Callable),
	$classEntry("java.util.concurrent.CancellationException", ::java::util::concurrent::CancellationException),
	$classEntry("java.util.concurrent.CompletableFuture", ::java::util::concurrent::CompletableFuture),
	$classEntry("java.util.concurrent.CompletableFuture$AltResult", ::java::util::concurrent::CompletableFuture$AltResult),
	$classEntry("java.util.concurrent.CompletableFuture$AnyOf", ::java::util::concurrent::CompletableFuture$AnyOf),
	$classEntry("java.util.concurrent.CompletableFuture$AsyncRun", ::java::util::concurrent::CompletableFuture$AsyncRun),
	$classEntry("java.util.concurrent.CompletableFuture$AsyncSupply", ::java::util::concurrent::CompletableFuture$AsyncSupply),
	$classEntry("java.util.concurrent.CompletableFuture$AsynchronousCompletionTask", ::java::util::concurrent::CompletableFuture$AsynchronousCompletionTask),
	$classEntry("java.util.concurrent.CompletableFuture$BiAccept", ::java::util::concurrent::CompletableFuture$BiAccept),
	$classEntry("java.util.concurrent.CompletableFuture$BiApply", ::java::util::concurrent::CompletableFuture$BiApply),
	$classEntry("java.util.concurrent.CompletableFuture$BiCompletion", ::java::util::concurrent::CompletableFuture$BiCompletion),
	$classEntry("java.util.concurrent.CompletableFuture$BiRelay", ::java::util::concurrent::CompletableFuture$BiRelay),
	$classEntry("java.util.concurrent.CompletableFuture$BiRun", ::java::util::concurrent::CompletableFuture$BiRun),
	$classEntry("java.util.concurrent.CompletableFuture$Canceller", ::java::util::concurrent::CompletableFuture$Canceller),
	$classEntry("java.util.concurrent.CompletableFuture$CoCompletion", ::java::util::concurrent::CompletableFuture$CoCompletion),
	$classEntry("java.util.concurrent.CompletableFuture$Completion", ::java::util::concurrent::CompletableFuture$Completion),
	$classEntry("java.util.concurrent.CompletableFuture$DelayedCompleter", ::java::util::concurrent::CompletableFuture$DelayedCompleter),
	$classEntry("java.util.concurrent.CompletableFuture$DelayedExecutor", ::java::util::concurrent::CompletableFuture$DelayedExecutor),
	$classEntry("java.util.concurrent.CompletableFuture$Delayer", ::java::util::concurrent::CompletableFuture$Delayer),
	$classEntry("java.util.concurrent.CompletableFuture$Delayer$DaemonThreadFactory", ::java::util::concurrent::CompletableFuture$Delayer$DaemonThreadFactory),
	$classEntry("java.util.concurrent.CompletableFuture$MinimalStage", ::java::util::concurrent::CompletableFuture$MinimalStage),
	$classEntry("java.util.concurrent.CompletableFuture$OrAccept", ::java::util::concurrent::CompletableFuture$OrAccept),
	$classEntry("java.util.concurrent.CompletableFuture$OrApply", ::java::util::concurrent::CompletableFuture$OrApply),
	$classEntry("java.util.concurrent.CompletableFuture$OrRun", ::java::util::concurrent::CompletableFuture$OrRun),
	$classEntry("java.util.concurrent.CompletableFuture$Signaller", ::java::util::concurrent::CompletableFuture$Signaller),
	$classEntry("java.util.concurrent.CompletableFuture$TaskSubmitter", ::java::util::concurrent::CompletableFuture$TaskSubmitter),
	$classEntry("java.util.concurrent.CompletableFuture$ThreadPerTaskExecutor", ::java::util::concurrent::CompletableFuture$ThreadPerTaskExecutor),
	$classEntry("java.util.concurrent.CompletableFuture$Timeout", ::java::util::concurrent::CompletableFuture$Timeout),
	$classEntry("java.util.concurrent.CompletableFuture$UniAccept", ::java::util::concurrent::CompletableFuture$UniAccept),
	$classEntry("java.util.concurrent.CompletableFuture$UniApply", ::java::util::concurrent::CompletableFuture$UniApply),
	$classEntry("java.util.concurrent.CompletableFuture$UniCompletion", ::java::util::concurrent::CompletableFuture$UniCompletion),
	$classEntry("java.util.concurrent.CompletableFuture$UniCompose", ::java::util::concurrent::CompletableFuture$UniCompose),
	$classEntry("java.util.concurrent.CompletableFuture$UniComposeExceptionally", ::java::util::concurrent::CompletableFuture$UniComposeExceptionally),
	$classEntry("java.util.concurrent.CompletableFuture$UniExceptionally", ::java::util::concurrent::CompletableFuture$UniExceptionally),
	$classEntry("java.util.concurrent.CompletableFuture$UniHandle", ::java::util::concurrent::CompletableFuture$UniHandle),
	$classEntry("java.util.concurrent.CompletableFuture$UniRelay", ::java::util::concurrent::CompletableFuture$UniRelay),
	$classEntry("java.util.concurrent.CompletableFuture$UniRun", ::java::util::concurrent::CompletableFuture$UniRun),
	$classEntry("java.util.concurrent.CompletableFuture$UniWhenComplete", ::java::util::concurrent::CompletableFuture$UniWhenComplete),
	$classEntry("java.util.concurrent.CompletionException", ::java::util::concurrent::CompletionException),
	$classEntry("java.util.concurrent.CompletionService", ::java::util::concurrent::CompletionService),
	$classEntry("java.util.concurrent.CompletionStage", ::java::util::concurrent::CompletionStage),
	$classEntry("java.util.concurrent.ConcurrentHashMap", ::java::util::concurrent::ConcurrentHashMap),
	$classEntry("java.util.concurrent.ConcurrentHashMap$BaseIterator", ::java::util::concurrent::ConcurrentHashMap$BaseIterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$BulkTask", ::java::util::concurrent::ConcurrentHashMap$BulkTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$CollectionView", ::java::util::concurrent::ConcurrentHashMap$CollectionView),
	$classEntry("java.util.concurrent.ConcurrentHashMap$CounterCell", ::java::util::concurrent::ConcurrentHashMap$CounterCell),
	$classEntry("java.util.concurrent.ConcurrentHashMap$EntryIterator", ::java::util::concurrent::ConcurrentHashMap$EntryIterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$EntrySetView", ::java::util::concurrent::ConcurrentHashMap$EntrySetView),
	$classEntry("java.util.concurrent.ConcurrentHashMap$EntrySpliterator", ::java::util::concurrent::ConcurrentHashMap$EntrySpliterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachEntryTask", ::java::util::concurrent::ConcurrentHashMap$ForEachEntryTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachKeyTask", ::java::util::concurrent::ConcurrentHashMap$ForEachKeyTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachMappingTask", ::java::util::concurrent::ConcurrentHashMap$ForEachMappingTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachTransformedEntryTask", ::java::util::concurrent::ConcurrentHashMap$ForEachTransformedEntryTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachTransformedKeyTask", ::java::util::concurrent::ConcurrentHashMap$ForEachTransformedKeyTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachTransformedMappingTask", ::java::util::concurrent::ConcurrentHashMap$ForEachTransformedMappingTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachTransformedValueTask", ::java::util::concurrent::ConcurrentHashMap$ForEachTransformedValueTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForEachValueTask", ::java::util::concurrent::ConcurrentHashMap$ForEachValueTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ForwardingNode", ::java::util::concurrent::ConcurrentHashMap$ForwardingNode),
	$classEntry("java.util.concurrent.ConcurrentHashMap$KeyIterator", ::java::util::concurrent::ConcurrentHashMap$KeyIterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$KeySetView", ::java::util::concurrent::ConcurrentHashMap$KeySetView),
	$classEntry("java.util.concurrent.ConcurrentHashMap$KeySpliterator", ::java::util::concurrent::ConcurrentHashMap$KeySpliterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapEntry", ::java::util::concurrent::ConcurrentHashMap$MapEntry),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceEntriesTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceEntriesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToDoubleTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceEntriesToDoubleTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToIntTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceEntriesToIntTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceEntriesToLongTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceEntriesToLongTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceKeysTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceKeysTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceKeysToDoubleTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceKeysToDoubleTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceKeysToIntTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceKeysToIntTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceKeysToLongTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceKeysToLongTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceMappingsTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceMappingsTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToDoubleTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceMappingsToDoubleTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToIntTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceMappingsToIntTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceMappingsToLongTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceMappingsToLongTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceValuesTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceValuesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceValuesToDoubleTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceValuesToDoubleTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceValuesToIntTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceValuesToIntTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$MapReduceValuesToLongTask", ::java::util::concurrent::ConcurrentHashMap$MapReduceValuesToLongTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$Node", ::java::util::concurrent::ConcurrentHashMap$Node),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ReduceEntriesTask", ::java::util::concurrent::ConcurrentHashMap$ReduceEntriesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ReduceKeysTask", ::java::util::concurrent::ConcurrentHashMap$ReduceKeysTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ReduceValuesTask", ::java::util::concurrent::ConcurrentHashMap$ReduceValuesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ReservationNode", ::java::util::concurrent::ConcurrentHashMap$ReservationNode),
	$classEntry("java.util.concurrent.ConcurrentHashMap$SearchEntriesTask", ::java::util::concurrent::ConcurrentHashMap$SearchEntriesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$SearchKeysTask", ::java::util::concurrent::ConcurrentHashMap$SearchKeysTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$SearchMappingsTask", ::java::util::concurrent::ConcurrentHashMap$SearchMappingsTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$SearchValuesTask", ::java::util::concurrent::ConcurrentHashMap$SearchValuesTask),
	$classEntry("java.util.concurrent.ConcurrentHashMap$Segment", ::java::util::concurrent::ConcurrentHashMap$Segment),
	$classEntry("java.util.concurrent.ConcurrentHashMap$TableStack", ::java::util::concurrent::ConcurrentHashMap$TableStack),
	$classEntry("java.util.concurrent.ConcurrentHashMap$Traverser", ::java::util::concurrent::ConcurrentHashMap$Traverser),
	$classEntry("java.util.concurrent.ConcurrentHashMap$TreeBin", ::java::util::concurrent::ConcurrentHashMap$TreeBin),
	$classEntry("java.util.concurrent.ConcurrentHashMap$TreeNode", ::java::util::concurrent::ConcurrentHashMap$TreeNode),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ValueIterator", ::java::util::concurrent::ConcurrentHashMap$ValueIterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ValueSpliterator", ::java::util::concurrent::ConcurrentHashMap$ValueSpliterator),
	$classEntry("java.util.concurrent.ConcurrentHashMap$ValuesView", ::java::util::concurrent::ConcurrentHashMap$ValuesView),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque", ::java::util::concurrent::ConcurrentLinkedDeque),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque$AbstractItr", ::java::util::concurrent::ConcurrentLinkedDeque$AbstractItr),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque$CLDSpliterator", ::java::util::concurrent::ConcurrentLinkedDeque$CLDSpliterator),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque$DescendingItr", ::java::util::concurrent::ConcurrentLinkedDeque$DescendingItr),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque$Itr", ::java::util::concurrent::ConcurrentLinkedDeque$Itr),
	$classEntry("java.util.concurrent.ConcurrentLinkedDeque$Node", ::java::util::concurrent::ConcurrentLinkedDeque$Node),
	$classEntry("java.util.concurrent.ConcurrentLinkedQueue", ::java::util::concurrent::ConcurrentLinkedQueue),
	$classEntry("java.util.concurrent.ConcurrentLinkedQueue$CLQSpliterator", ::java::util::concurrent::ConcurrentLinkedQueue$CLQSpliterator),
	$classEntry("java.util.concurrent.ConcurrentLinkedQueue$Itr", ::java::util::concurrent::ConcurrentLinkedQueue$Itr),
	$classEntry("java.util.concurrent.ConcurrentLinkedQueue$Node", ::java::util::concurrent::ConcurrentLinkedQueue$Node),
	$classEntry("java.util.concurrent.ConcurrentMap", ::java::util::concurrent::ConcurrentMap),
	$classEntry("java.util.concurrent.ConcurrentNavigableMap", ::java::util::concurrent::ConcurrentNavigableMap),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap", ::java::util::concurrent::ConcurrentSkipListMap),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$CSLMSpliterator", ::java::util::concurrent::ConcurrentSkipListMap$CSLMSpliterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$EntryIterator", ::java::util::concurrent::ConcurrentSkipListMap$EntryIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$EntrySet", ::java::util::concurrent::ConcurrentSkipListMap$EntrySet),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$EntrySpliterator", ::java::util::concurrent::ConcurrentSkipListMap$EntrySpliterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$Index", ::java::util::concurrent::ConcurrentSkipListMap$Index),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$Iter", ::java::util::concurrent::ConcurrentSkipListMap$Iter),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$KeyIterator", ::java::util::concurrent::ConcurrentSkipListMap$KeyIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$KeySet", ::java::util::concurrent::ConcurrentSkipListMap$KeySet),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$KeySpliterator", ::java::util::concurrent::ConcurrentSkipListMap$KeySpliterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$Node", ::java::util::concurrent::ConcurrentSkipListMap$Node),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$SubMap", ::java::util::concurrent::ConcurrentSkipListMap$SubMap),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator", ::java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapEntryIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter", ::java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapIter),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator", ::java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapKeyIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator", ::java::util::concurrent::ConcurrentSkipListMap$SubMap$SubMapValueIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$ValueIterator", ::java::util::concurrent::ConcurrentSkipListMap$ValueIterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$ValueSpliterator", ::java::util::concurrent::ConcurrentSkipListMap$ValueSpliterator),
	$classEntry("java.util.concurrent.ConcurrentSkipListMap$Values", ::java::util::concurrent::ConcurrentSkipListMap$Values),
	$classEntry("java.util.concurrent.ConcurrentSkipListSet", ::java::util::concurrent::ConcurrentSkipListSet),
	$classEntry("java.util.concurrent.CopyOnWriteArrayList", ::java::util::concurrent::CopyOnWriteArrayList),
	$classEntry("java.util.concurrent.CopyOnWriteArrayList$COWIterator", ::java::util::concurrent::CopyOnWriteArrayList$COWIterator),
	$classEntry("java.util.concurrent.CopyOnWriteArrayList$COWSubList", ::java::util::concurrent::CopyOnWriteArrayList$COWSubList),
	$classEntry("java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator", ::java::util::concurrent::CopyOnWriteArrayList$COWSubListIterator),
	$classEntry("java.util.concurrent.CopyOnWriteArraySet", ::java::util::concurrent::CopyOnWriteArraySet),
	$classEntry("java.util.concurrent.CountDownLatch", ::java::util::concurrent::CountDownLatch),
	$classEntry("java.util.concurrent.CountDownLatch$Sync", ::java::util::concurrent::CountDownLatch$Sync),
	$classEntry("java.util.concurrent.CountedCompleter", ::java::util::concurrent::CountedCompleter),
	$classEntry("java.util.concurrent.CyclicBarrier", ::java::util::concurrent::CyclicBarrier),
	$classEntry("java.util.concurrent.CyclicBarrier$Generation", ::java::util::concurrent::CyclicBarrier$Generation),
	$classEntry("java.util.concurrent.DelayQueue", ::java::util::concurrent::DelayQueue),
	$classEntry("java.util.concurrent.DelayQueue$Itr", ::java::util::concurrent::DelayQueue$Itr),
	$classEntry("java.util.concurrent.Delayed", ::java::util::concurrent::Delayed),
	$classEntry("java.util.concurrent.Exchanger", ::java::util::concurrent::Exchanger),
	$classEntry("java.util.concurrent.Exchanger$Node", ::java::util::concurrent::Exchanger$Node),
	$classEntry("java.util.concurrent.Exchanger$Participant", ::java::util::concurrent::Exchanger$Participant),
	$classEntry("java.util.concurrent.ExecutionException", ::java::util::concurrent::ExecutionException),
	$classEntry("java.util.concurrent.Executor", ::java::util::concurrent::Executor),
	$classEntry("java.util.concurrent.ExecutorCompletionService", ::java::util::concurrent::ExecutorCompletionService),
	$classEntry("java.util.concurrent.ExecutorCompletionService$QueueingFuture", ::java::util::concurrent::ExecutorCompletionService$QueueingFuture),
	$classEntry("java.util.concurrent.ExecutorService", ::java::util::concurrent::ExecutorService),
	$classEntry("java.util.concurrent.Executors", ::java::util::concurrent::Executors),
	$classEntry("java.util.concurrent.Executors$1", ::java::util::concurrent::Executors$1),
	$classEntry("java.util.concurrent.Executors$2", ::java::util::concurrent::Executors$2),
	$classEntry("java.util.concurrent.Executors$DefaultThreadFactory", ::java::util::concurrent::Executors$DefaultThreadFactory),
	$classEntry("java.util.concurrent.Executors$DelegatedExecutorService", ::java::util::concurrent::Executors$DelegatedExecutorService),
	$classEntry("java.util.concurrent.Executors$DelegatedScheduledExecutorService", ::java::util::concurrent::Executors$DelegatedScheduledExecutorService),
	$classEntry("java.util.concurrent.Executors$FinalizableDelegatedExecutorService", ::java::util::concurrent::Executors$FinalizableDelegatedExecutorService),
	$classEntry("java.util.concurrent.Executors$PrivilegedCallable", ::java::util::concurrent::Executors$PrivilegedCallable),
	$classEntry("java.util.concurrent.Executors$PrivilegedCallable$1", ::java::util::concurrent::Executors$PrivilegedCallable$1),
	$classEntry("java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader", ::java::util::concurrent::Executors$PrivilegedCallableUsingCurrentClassLoader),
	$classEntry("java.util.concurrent.Executors$PrivilegedCallableUsingCurrentClassLoader$1", ::java::util::concurrent::Executors$PrivilegedCallableUsingCurrentClassLoader$1),
	$classEntry("java.util.concurrent.Executors$PrivilegedThreadFactory", ::java::util::concurrent::Executors$PrivilegedThreadFactory),
	$classEntry("java.util.concurrent.Executors$PrivilegedThreadFactory$1", ::java::util::concurrent::Executors$PrivilegedThreadFactory$1),
	$classEntry("java.util.concurrent.Executors$PrivilegedThreadFactory$1$1", ::java::util::concurrent::Executors$PrivilegedThreadFactory$1$1),
	$classEntry("java.util.concurrent.Executors$RunnableAdapter", ::java::util::concurrent::Executors$RunnableAdapter),
	$classEntry("java.util.concurrent.Flow", ::java::util::concurrent::Flow),
	$classEntry("java.util.concurrent.Flow$Processor", ::java::util::concurrent::Flow$Processor),
	$classEntry("java.util.concurrent.Flow$Publisher", ::java::util::concurrent::Flow$Publisher),
	$classEntry("java.util.concurrent.Flow$Subscriber", ::java::util::concurrent::Flow$Subscriber),
	$classEntry("java.util.concurrent.Flow$Subscription", ::java::util::concurrent::Flow$Subscription),
	$classEntry("java.util.concurrent.ForkJoinPool", ::java::util::concurrent::ForkJoinPool),
	$classEntry("java.util.concurrent.ForkJoinPool$1", ::java::util::concurrent::ForkJoinPool$1),
	$classEntry("java.util.concurrent.ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory", ::java::util::concurrent::ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory),
	$classEntry("java.util.concurrent.ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory$1", ::java::util::concurrent::ForkJoinPool$DefaultCommonPoolForkJoinWorkerThreadFactory$1),
	$classEntry("java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory", ::java::util::concurrent::ForkJoinPool$DefaultForkJoinWorkerThreadFactory),
	$classEntry("java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1", ::java::util::concurrent::ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1),
	$classEntry("java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory", ::java::util::concurrent::ForkJoinPool$ForkJoinWorkerThreadFactory),
	$classEntry("java.util.concurrent.ForkJoinPool$InvokeAnyRoot", ::java::util::concurrent::ForkJoinPool$InvokeAnyRoot),
	$classEntry("java.util.concurrent.ForkJoinPool$InvokeAnyTask", ::java::util::concurrent::ForkJoinPool$InvokeAnyTask),
	$classEntry("java.util.concurrent.ForkJoinPool$ManagedBlocker", ::java::util::concurrent::ForkJoinPool$ManagedBlocker),
	$classEntry("java.util.concurrent.ForkJoinPool$WorkQueue", ::java::util::concurrent::ForkJoinPool$WorkQueue),
	$classEntry("java.util.concurrent.ForkJoinTask", ::java::util::concurrent::ForkJoinTask),
	$classEntry("java.util.concurrent.ForkJoinTask$AdaptedCallable", ::java::util::concurrent::ForkJoinTask$AdaptedCallable),
	$classEntry("java.util.concurrent.ForkJoinTask$AdaptedInterruptibleCallable", ::java::util::concurrent::ForkJoinTask$AdaptedInterruptibleCallable),
	$classEntry("java.util.concurrent.ForkJoinTask$AdaptedRunnable", ::java::util::concurrent::ForkJoinTask$AdaptedRunnable),
	$classEntry("java.util.concurrent.ForkJoinTask$AdaptedRunnableAction", ::java::util::concurrent::ForkJoinTask$AdaptedRunnableAction),
	$classEntry("java.util.concurrent.ForkJoinTask$Aux", ::java::util::concurrent::ForkJoinTask$Aux),
	$classEntry("java.util.concurrent.ForkJoinTask$RunnableExecuteAction", ::java::util::concurrent::ForkJoinTask$RunnableExecuteAction),
	$classEntry("java.util.concurrent.ForkJoinWorkerThread", ::java::util::concurrent::ForkJoinWorkerThread),
	$classEntry("java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread", ::java::util::concurrent::ForkJoinWorkerThread$InnocuousForkJoinWorkerThread),
	$classEntry("java.util.concurrent.ForkJoinWorkerThread$InnocuousForkJoinWorkerThread$1", ::java::util::concurrent::ForkJoinWorkerThread$InnocuousForkJoinWorkerThread$1),
	$classEntry("java.util.concurrent.Future", ::java::util::concurrent::Future),
	$classEntry("java.util.concurrent.FutureTask", ::java::util::concurrent::FutureTask),
	$classEntry("java.util.concurrent.FutureTask$WaitNode", ::java::util::concurrent::FutureTask$WaitNode),
	$classEntry("java.util.concurrent.Helpers", ::java::util::concurrent::Helpers),
	$classEntry("java.util.concurrent.LinkedBlockingDeque", ::java::util::concurrent::LinkedBlockingDeque),
	$classEntry("java.util.concurrent.LinkedBlockingDeque$AbstractItr", ::java::util::concurrent::LinkedBlockingDeque$AbstractItr),
	$classEntry("java.util.concurrent.LinkedBlockingDeque$DescendingItr", ::java::util::concurrent::LinkedBlockingDeque$DescendingItr),
	$classEntry("java.util.concurrent.LinkedBlockingDeque$Itr", ::java::util::concurrent::LinkedBlockingDeque$Itr),
	$classEntry("java.util.concurrent.LinkedBlockingDeque$LBDSpliterator", ::java::util::concurrent::LinkedBlockingDeque$LBDSpliterator),
	$classEntry("java.util.concurrent.LinkedBlockingDeque$Node", ::java::util::concurrent::LinkedBlockingDeque$Node),
	$classEntry("java.util.concurrent.LinkedBlockingQueue", ::java::util::concurrent::LinkedBlockingQueue),
	$classEntry("java.util.concurrent.LinkedBlockingQueue$Itr", ::java::util::concurrent::LinkedBlockingQueue$Itr),
	$classEntry("java.util.concurrent.LinkedBlockingQueue$LBQSpliterator", ::java::util::concurrent::LinkedBlockingQueue$LBQSpliterator),
	$classEntry("java.util.concurrent.LinkedBlockingQueue$Node", ::java::util::concurrent::LinkedBlockingQueue$Node),
	$classEntry("java.util.concurrent.LinkedTransferQueue", ::java::util::concurrent::LinkedTransferQueue),
	$classEntry("java.util.concurrent.LinkedTransferQueue$Itr", ::java::util::concurrent::LinkedTransferQueue$Itr),
	$classEntry("java.util.concurrent.LinkedTransferQueue$LTQSpliterator", ::java::util::concurrent::LinkedTransferQueue$LTQSpliterator),
	$classEntry("java.util.concurrent.LinkedTransferQueue$Node", ::java::util::concurrent::LinkedTransferQueue$Node),
	$classEntry("java.util.concurrent.Phaser", ::java::util::concurrent::Phaser),
	$classEntry("java.util.concurrent.Phaser$QNode", ::java::util::concurrent::Phaser$QNode),
	$classEntry("java.util.concurrent.PriorityBlockingQueue", ::java::util::concurrent::PriorityBlockingQueue),
	$classEntry("java.util.concurrent.PriorityBlockingQueue$Itr", ::java::util::concurrent::PriorityBlockingQueue$Itr),
	$classEntry("java.util.concurrent.PriorityBlockingQueue$PBQSpliterator", ::java::util::concurrent::PriorityBlockingQueue$PBQSpliterator),
	$classEntry("java.util.concurrent.RecursiveAction", ::java::util::concurrent::RecursiveAction),
	$classEntry("java.util.concurrent.RecursiveTask", ::java::util::concurrent::RecursiveTask),
	$classEntry("java.util.concurrent.RejectedExecutionException", ::java::util::concurrent::RejectedExecutionException),
	$classEntry("java.util.concurrent.RejectedExecutionHandler", ::java::util::concurrent::RejectedExecutionHandler),
	$classEntry("java.util.concurrent.RunnableFuture", ::java::util::concurrent::RunnableFuture),
	$classEntry("java.util.concurrent.RunnableScheduledFuture", ::java::util::concurrent::RunnableScheduledFuture),
	$classEntry("java.util.concurrent.ScheduledExecutorService", ::java::util::concurrent::ScheduledExecutorService),
	$classEntry("java.util.concurrent.ScheduledFuture", ::java::util::concurrent::ScheduledFuture),
	$classEntry("java.util.concurrent.ScheduledThreadPoolExecutor", ::java::util::concurrent::ScheduledThreadPoolExecutor),
	$classEntry("java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue", ::java::util::concurrent::ScheduledThreadPoolExecutor$DelayedWorkQueue),
	$classEntry("java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr", ::java::util::concurrent::ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr),
	$classEntry("java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask", ::java::util::concurrent::ScheduledThreadPoolExecutor$ScheduledFutureTask),
	$classEntry("java.util.concurrent.Semaphore", ::java::util::concurrent::Semaphore),
	$classEntry("java.util.concurrent.Semaphore$FairSync", ::java::util::concurrent::Semaphore$FairSync),
	$classEntry("java.util.concurrent.Semaphore$NonfairSync", ::java::util::concurrent::Semaphore$NonfairSync),
	$classEntry("java.util.concurrent.Semaphore$Sync", ::java::util::concurrent::Semaphore$Sync),
	$classEntry("java.util.concurrent.SubmissionPublisher", ::java::util::concurrent::SubmissionPublisher),
	$classEntry("java.util.concurrent.SubmissionPublisher$BufferedSubscription", ::java::util::concurrent::SubmissionPublisher$BufferedSubscription),
	$classEntry("java.util.concurrent.SubmissionPublisher$ConsumerSubscriber", ::java::util::concurrent::SubmissionPublisher$ConsumerSubscriber),
	$classEntry("java.util.concurrent.SubmissionPublisher$ConsumerTask", ::java::util::concurrent::SubmissionPublisher$ConsumerTask),
	$classEntry("java.util.concurrent.SubmissionPublisher$ThreadPerTaskExecutor", ::java::util::concurrent::SubmissionPublisher$ThreadPerTaskExecutor),
	$classEntry("java.util.concurrent.SynchronousQueue", ::java::util::concurrent::SynchronousQueue),
	$classEntry("java.util.concurrent.SynchronousQueue$FifoWaitQueue", ::java::util::concurrent::SynchronousQueue$FifoWaitQueue),
	$classEntry("java.util.concurrent.SynchronousQueue$LifoWaitQueue", ::java::util::concurrent::SynchronousQueue$LifoWaitQueue),
	$classEntry("java.util.concurrent.SynchronousQueue$TransferQueue", ::java::util::concurrent::SynchronousQueue$TransferQueue),
	$classEntry("java.util.concurrent.SynchronousQueue$TransferQueue$QNode", ::java::util::concurrent::SynchronousQueue$TransferQueue$QNode),
	$classEntry("java.util.concurrent.SynchronousQueue$TransferStack", ::java::util::concurrent::SynchronousQueue$TransferStack),
	$classEntry("java.util.concurrent.SynchronousQueue$TransferStack$SNode", ::java::util::concurrent::SynchronousQueue$TransferStack$SNode),
	$classEntry("java.util.concurrent.SynchronousQueue$Transferer", ::java::util::concurrent::SynchronousQueue$Transferer),
	$classEntry("java.util.concurrent.SynchronousQueue$WaitQueue", ::java::util::concurrent::SynchronousQueue$WaitQueue),
	$classEntry("java.util.concurrent.ThreadFactory", ::java::util::concurrent::ThreadFactory),
	$classEntry("java.util.concurrent.ThreadLocalRandom", ::java::util::concurrent::ThreadLocalRandom),
	$classEntry("java.util.concurrent.ThreadLocalRandom$ThreadLocalRandomProxy", ::java::util::concurrent::ThreadLocalRandom$ThreadLocalRandomProxy),
	$classEntry("java.util.concurrent.ThreadPoolExecutor", ::java::util::concurrent::ThreadPoolExecutor),
	$classEntry("java.util.concurrent.ThreadPoolExecutor$AbortPolicy", ::java::util::concurrent::ThreadPoolExecutor$AbortPolicy),
	$classEntry("java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy", ::java::util::concurrent::ThreadPoolExecutor$CallerRunsPolicy),
	$classEntry("java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy", ::java::util::concurrent::ThreadPoolExecutor$DiscardOldestPolicy),
	$classEntry("java.util.concurrent.ThreadPoolExecutor$DiscardPolicy", ::java::util::concurrent::ThreadPoolExecutor$DiscardPolicy),
	$classEntry("java.util.concurrent.ThreadPoolExecutor$Worker", ::java::util::concurrent::ThreadPoolExecutor$Worker),
	$classEntry("java.util.concurrent.TimeUnit", ::java::util::concurrent::TimeUnit),
	$classEntry("java.util.concurrent.TimeUnit$1", ::java::util::concurrent::TimeUnit$1),
	$classEntry("java.util.concurrent.TimeoutException", ::java::util::concurrent::TimeoutException),
	$classEntry("java.util.concurrent.TransferQueue", ::java::util::concurrent::TransferQueue),
	$classEntry("java.util.concurrent.atomic.AtomicBoolean", ::java::util::concurrent::atomic::AtomicBoolean),
	$classEntry("java.util.concurrent.atomic.AtomicInteger", ::java::util::concurrent::atomic::AtomicInteger),
	$classEntry("java.util.concurrent.atomic.AtomicIntegerArray", ::java::util::concurrent::atomic::AtomicIntegerArray),
	$classEntry("java.util.concurrent.atomic.AtomicIntegerFieldUpdater", ::java::util::concurrent::atomic::AtomicIntegerFieldUpdater),
	$classEntry("java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl", ::java::util::concurrent::atomic::AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl),
	$classEntry("java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl$1", ::java::util::concurrent::atomic::AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl$1),
	$classEntry("java.util.concurrent.atomic.AtomicLong", ::java::util::concurrent::atomic::AtomicLong),
	$classEntry("java.util.concurrent.atomic.AtomicLongArray", ::java::util::concurrent::atomic::AtomicLongArray),
	$classEntry("java.util.concurrent.atomic.AtomicLongFieldUpdater", ::java::util::concurrent::atomic::AtomicLongFieldUpdater),
	$classEntry("java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater", ::java::util::concurrent::atomic::AtomicLongFieldUpdater$CASUpdater),
	$classEntry("java.util.concurrent.atomic.AtomicLongFieldUpdater$CASUpdater$1", ::java::util::concurrent::atomic::AtomicLongFieldUpdater$CASUpdater$1),
	$classEntry("java.util.concurrent.atomic.AtomicLongFieldUpdater$LockedUpdater", ::java::util::concurrent::atomic::AtomicLongFieldUpdater$LockedUpdater),
	$classEntry("java.util.concurrent.atomic.AtomicLongFieldUpdater$LockedUpdater$1", ::java::util::concurrent::atomic::AtomicLongFieldUpdater$LockedUpdater$1),
	$classEntry("java.util.concurrent.atomic.AtomicMarkableReference", ::java::util::concurrent::atomic::AtomicMarkableReference),
	$classEntry("java.util.concurrent.atomic.AtomicMarkableReference$Pair", ::java::util::concurrent::atomic::AtomicMarkableReference$Pair),
	$classEntry("java.util.concurrent.atomic.AtomicReference", ::java::util::concurrent::atomic::AtomicReference),
	$classEntry("java.util.concurrent.atomic.AtomicReferenceArray", ::java::util::concurrent::atomic::AtomicReferenceArray),
	$classEntry("java.util.concurrent.atomic.AtomicReferenceFieldUpdater", ::java::util::concurrent::atomic::AtomicReferenceFieldUpdater),
	$classEntry("java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl", ::java::util::concurrent::atomic::AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl),
	$classEntry("java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1", ::java::util::concurrent::atomic::AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1),
	$classEntry("java.util.concurrent.atomic.AtomicStampedReference", ::java::util::concurrent::atomic::AtomicStampedReference),
	$classEntry("java.util.concurrent.atomic.AtomicStampedReference$Pair", ::java::util::concurrent::atomic::AtomicStampedReference$Pair),
	$classEntry("java.util.concurrent.atomic.DoubleAccumulator", ::java::util::concurrent::atomic::DoubleAccumulator),
	$classEntry("java.util.concurrent.atomic.DoubleAccumulator$SerializationProxy", ::java::util::concurrent::atomic::DoubleAccumulator$SerializationProxy),
	$classEntry("java.util.concurrent.atomic.DoubleAdder", ::java::util::concurrent::atomic::DoubleAdder),
	$classEntry("java.util.concurrent.atomic.DoubleAdder$SerializationProxy", ::java::util::concurrent::atomic::DoubleAdder$SerializationProxy),
	$classEntry("java.util.concurrent.atomic.LongAccumulator", ::java::util::concurrent::atomic::LongAccumulator),
	$classEntry("java.util.concurrent.atomic.LongAccumulator$SerializationProxy", ::java::util::concurrent::atomic::LongAccumulator$SerializationProxy),
	$classEntry("java.util.concurrent.atomic.LongAdder", ::java::util::concurrent::atomic::LongAdder),
	$classEntry("java.util.concurrent.atomic.LongAdder$SerializationProxy", ::java::util::concurrent::atomic::LongAdder$SerializationProxy),
	$classEntry("java.util.concurrent.atomic.Striped64", ::java::util::concurrent::atomic::Striped64),
	$classEntry("java.util.concurrent.atomic.Striped64$1", ::java::util::concurrent::atomic::Striped64$1),
	$classEntry("java.util.concurrent.atomic.Striped64$Cell", ::java::util::concurrent::atomic::Striped64$Cell),
	$classEntry("java.util.concurrent.locks.AbstractOwnableSynchronizer", ::java::util::concurrent::locks::AbstractOwnableSynchronizer),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionNode", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer$ConditionNode),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer$ConditionObject),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ExclusiveNode", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer$ExclusiveNode),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer$Node),
	$classEntry("java.util.concurrent.locks.AbstractQueuedLongSynchronizer$SharedNode", ::java::util::concurrent::locks::AbstractQueuedLongSynchronizer$SharedNode),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer", ::java::util::concurrent::locks::AbstractQueuedSynchronizer),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode", ::java::util::concurrent::locks::AbstractQueuedSynchronizer$ConditionNode),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject", ::java::util::concurrent::locks::AbstractQueuedSynchronizer$ConditionObject),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer$ExclusiveNode", ::java::util::concurrent::locks::AbstractQueuedSynchronizer$ExclusiveNode),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer$Node", ::java::util::concurrent::locks::AbstractQueuedSynchronizer$Node),
	$classEntry("java.util.concurrent.locks.AbstractQueuedSynchronizer$SharedNode", ::java::util::concurrent::locks::AbstractQueuedSynchronizer$SharedNode),
	$classEntry("java.util.concurrent.locks.Condition", ::java::util::concurrent::locks::Condition),
	$classEntry("java.util.concurrent.locks.Lock", ::java::util::concurrent::locks::Lock),
	$classEntry("java.util.concurrent.locks.LockSupport", ::java::util::concurrent::locks::LockSupport),
	$classEntry("java.util.concurrent.locks.ReadWriteLock", ::java::util::concurrent::locks::ReadWriteLock),
	$classEntry("java.util.concurrent.locks.ReentrantLock", ::java::util::concurrent::locks::ReentrantLock),
	$classEntry("java.util.concurrent.locks.ReentrantLock$FairSync", ::java::util::concurrent::locks::ReentrantLock$FairSync),
	$classEntry("java.util.concurrent.locks.ReentrantLock$NonfairSync", ::java::util::concurrent::locks::ReentrantLock$NonfairSync),
	$classEntry("java.util.concurrent.locks.ReentrantLock$Sync", ::java::util::concurrent::locks::ReentrantLock$Sync),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock", ::java::util::concurrent::locks::ReentrantReadWriteLock),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$FairSync", ::java::util::concurrent::locks::ReentrantReadWriteLock$FairSync),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync", ::java::util::concurrent::locks::ReentrantReadWriteLock$NonfairSync),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock", ::java::util::concurrent::locks::ReentrantReadWriteLock$ReadLock),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$Sync", ::java::util::concurrent::locks::ReentrantReadWriteLock$Sync),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter", ::java::util::concurrent::locks::ReentrantReadWriteLock$Sync$HoldCounter),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter", ::java::util::concurrent::locks::ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter),
	$classEntry("java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock", ::java::util::concurrent::locks::ReentrantReadWriteLock$WriteLock),
	$classEntry("java.util.concurrent.locks.StampedLock", ::java::util::concurrent::locks::StampedLock),
	$classEntry("java.util.concurrent.locks.StampedLock$Node", ::java::util::concurrent::locks::StampedLock$Node),
	$classEntry("java.util.concurrent.locks.StampedLock$ReadLockView", ::java::util::concurrent::locks::StampedLock$ReadLockView),
	$classEntry("java.util.concurrent.locks.StampedLock$ReadWriteLockView", ::java::util::concurrent::locks::StampedLock$ReadWriteLockView),
	$classEntry("java.util.concurrent.locks.StampedLock$ReaderNode", ::java::util::concurrent::locks::StampedLock$ReaderNode),
	$classEntry("java.util.concurrent.locks.StampedLock$WriteLockView", ::java::util::concurrent::locks::StampedLock$WriteLockView),
	$classEntry("java.util.concurrent.locks.StampedLock$WriterNode", ::java::util::concurrent::locks::StampedLock$WriterNode),
	$classEntry("java.util.function.BiConsumer", ::java::util::function::BiConsumer),
	$classEntry("java.util.function.BiFunction", ::java::util::function::BiFunction),
	$classEntry("java.util.function.BiPredicate", ::java::util::function::BiPredicate),
	$classEntry("java.util.function.BinaryOperator", ::java::util::function::BinaryOperator),
	$classEntry("java.util.function.BooleanSupplier", ::java::util::function::BooleanSupplier),
	$classEntry("java.util.function.Consumer", ::java::util::function::Consumer),
	$classEntry("java.util.function.DoubleBinaryOperator", ::java::util::function::DoubleBinaryOperator),
	$classEntry("java.util.function.DoubleConsumer", ::java::util::function::DoubleConsumer),
	$classEntry("java.util.function.DoubleFunction", ::java::util::function::DoubleFunction),
	$classEntry("java.util.function.DoublePredicate", ::java::util::function::DoublePredicate),
	$classEntry("java.util.function.DoubleSupplier", ::java::util::function::DoubleSupplier),
	$classEntry("java.util.function.DoubleToIntFunction", ::java::util::function::DoubleToIntFunction),
	$classEntry("java.util.function.DoubleToLongFunction", ::java::util::function::DoubleToLongFunction),
	$classEntry("java.util.function.DoubleUnaryOperator", ::java::util::function::DoubleUnaryOperator),
	$classEntry("java.util.function.Function", ::java::util::function::Function),
	$classEntry("java.util.function.IntBinaryOperator", ::java::util::function::IntBinaryOperator),
	$classEntry("java.util.function.IntConsumer", ::java::util::function::IntConsumer),
	$classEntry("java.util.function.IntFunction", ::java::util::function::IntFunction),
	$classEntry("java.util.function.IntPredicate", ::java::util::function::IntPredicate),
	$classEntry("java.util.function.IntSupplier", ::java::util::function::IntSupplier),
	$classEntry("java.util.function.IntToDoubleFunction", ::java::util::function::IntToDoubleFunction),
	$classEntry("java.util.function.IntToLongFunction", ::java::util::function::IntToLongFunction),
	$classEntry("java.util.function.IntUnaryOperator", ::java::util::function::IntUnaryOperator),
	$classEntry("java.util.function.LongBinaryOperator", ::java::util::function::LongBinaryOperator),
	$classEntry("java.util.function.LongConsumer", ::java::util::function::LongConsumer),
	$classEntry("java.util.function.LongFunction", ::java::util::function::LongFunction),
	$classEntry("java.util.function.LongPredicate", ::java::util::function::LongPredicate),
	$classEntry("java.util.function.LongSupplier", ::java::util::function::LongSupplier),
	$classEntry("java.util.function.LongToDoubleFunction", ::java::util::function::LongToDoubleFunction),
	$classEntry("java.util.function.LongToIntFunction", ::java::util::function::LongToIntFunction),
	$classEntry("java.util.function.LongUnaryOperator", ::java::util::function::LongUnaryOperator),
	$classEntry("java.util.function.ObjDoubleConsumer", ::java::util::function::ObjDoubleConsumer),
	$classEntry("java.util.function.ObjIntConsumer", ::java::util::function::ObjIntConsumer),
	$classEntry("java.util.function.ObjLongConsumer", ::java::util::function::ObjLongConsumer),
	$classEntry("java.util.function.Predicate", ::java::util::function::Predicate),
	$classEntry("java.util.function.Supplier", ::java::util::function::Supplier),
	$classEntry("java.util.function.ToDoubleBiFunction", ::java::util::function::ToDoubleBiFunction),
	$classEntry("java.util.function.ToDoubleFunction", ::java::util::function::ToDoubleFunction),
	$classEntry("java.util.function.ToIntBiFunction", ::java::util::function::ToIntBiFunction),
	$classEntry("java.util.function.ToIntFunction", ::java::util::function::ToIntFunction),
	$classEntry("java.util.function.ToLongBiFunction", ::java::util::function::ToLongBiFunction),
	$classEntry("java.util.function.ToLongFunction", ::java::util::function::ToLongFunction),
	$classEntry("java.util.function.UnaryOperator", ::java::util::function::UnaryOperator),
	$classEntry("java.util.jar.Attributes", ::java::util::jar::Attributes),
	$classEntry("java.util.jar.Attributes$Name", ::java::util::jar::Attributes$Name),
	$classEntry("java.util.jar.JarEntry", ::java::util::jar::JarEntry),
	$classEntry("java.util.jar.JarException", ::java::util::jar::JarException),
	$classEntry("java.util.jar.JarFile", ::java::util::jar::JarFile),
	$classEntry("java.util.jar.JarFile$1", ::java::util::jar::JarFile$1),
	$classEntry("java.util.jar.JarFile$2", ::java::util::jar::JarFile$2),
	$classEntry("java.util.jar.JarFile$JarFileEntry", ::java::util::jar::JarFile$JarFileEntry),
	$classEntry("java.util.jar.JarInputStream", ::java::util::jar::JarInputStream),
	$classEntry("java.util.jar.JarOutputStream", ::java::util::jar::JarOutputStream),
	$classEntry("java.util.jar.JarVerifier", ::java::util::jar::JarVerifier),
	$classEntry("java.util.jar.JarVerifier$1", ::java::util::jar::JarVerifier$1),
	$classEntry("java.util.jar.JarVerifier$2", ::java::util::jar::JarVerifier$2),
	$classEntry("java.util.jar.JarVerifier$3", ::java::util::jar::JarVerifier$3),
	$classEntry("java.util.jar.JarVerifier$VerifierCodeSource", ::java::util::jar::JarVerifier$VerifierCodeSource),
	$classEntry("java.util.jar.JarVerifier$VerifierStream", ::java::util::jar::JarVerifier$VerifierStream),
	$classEntry("java.util.jar.JavaUtilJarAccessImpl", ::java::util::jar::JavaUtilJarAccessImpl),
	$classEntry("java.util.jar.Manifest", ::java::util::jar::Manifest),
	$classEntry("java.util.jar.Manifest$FastInputStream", ::java::util::jar::Manifest$FastInputStream),
	$classEntry("java.util.random.RandomGenerator", ::java::util::random::RandomGenerator),
	$classEntry("java.util.random.RandomGenerator$ArbitrarilyJumpableGenerator", ::java::util::random::RandomGenerator$ArbitrarilyJumpableGenerator),
	$classEntry("java.util.random.RandomGenerator$JumpableGenerator", ::java::util::random::RandomGenerator$JumpableGenerator),
	$classEntry("java.util.random.RandomGenerator$LeapableGenerator", ::java::util::random::RandomGenerator$LeapableGenerator),
	$classEntry("java.util.random.RandomGenerator$SplittableGenerator", ::java::util::random::RandomGenerator$SplittableGenerator),
	$classEntry("java.util.random.RandomGenerator$StreamableGenerator", ::java::util::random::RandomGenerator$StreamableGenerator),
	$classEntry("java.util.random.RandomGeneratorFactory", ::java::util::random::RandomGeneratorFactory),
	$classEntry("java.util.random.RandomGeneratorFactory$FactoryMapHolder", ::java::util::random::RandomGeneratorFactory$FactoryMapHolder),
	$classEntry("java.util.regex.ASCII", ::java::util::regex::ASCII),
	$classEntry("java.util.regex.CharPredicates", ::java::util::regex::CharPredicates),
	$classEntry("java.util.regex.EmojiData", ::java::util::regex::EmojiData),
	$classEntry("java.util.regex.Grapheme", ::java::util::regex::Grapheme),
	$classEntry("java.util.regex.IntHashSet", ::java::util::regex::IntHashSet),
	$classEntry("java.util.regex.MatchResult", ::java::util::regex::MatchResult),
	$classEntry("java.util.regex.Matcher", ::java::util::regex::Matcher),
	$classEntry("java.util.regex.Matcher$1MatchResultIterator", ::java::util::regex::Matcher$1MatchResultIterator),
	$classEntry("java.util.regex.Matcher$ImmutableMatchResult", ::java::util::regex::Matcher$ImmutableMatchResult),
	$classEntry("java.util.regex.Pattern", ::java::util::regex::Pattern),
	$classEntry("java.util.regex.Pattern$1", ::java::util::regex::Pattern$1),
	$classEntry("java.util.regex.Pattern$1MatcherIterator", ::java::util::regex::Pattern$1MatcherIterator),
	$classEntry("java.util.regex.Pattern$BackRef", ::java::util::regex::Pattern$BackRef),
	$classEntry("java.util.regex.Pattern$Begin", ::java::util::regex::Pattern$Begin),
	$classEntry("java.util.regex.Pattern$Behind", ::java::util::regex::Pattern$Behind),
	$classEntry("java.util.regex.Pattern$BehindS", ::java::util::regex::Pattern$BehindS),
	$classEntry("java.util.regex.Pattern$BitClass", ::java::util::regex::Pattern$BitClass),
	$classEntry("java.util.regex.Pattern$BmpCharPredicate", ::java::util::regex::Pattern$BmpCharPredicate),
	$classEntry("java.util.regex.Pattern$BmpCharProperty", ::java::util::regex::Pattern$BmpCharProperty),
	$classEntry("java.util.regex.Pattern$BmpCharPropertyGreedy", ::java::util::regex::Pattern$BmpCharPropertyGreedy),
	$classEntry("java.util.regex.Pattern$BnM", ::java::util::regex::Pattern$BnM),
	$classEntry("java.util.regex.Pattern$BnMS", ::java::util::regex::Pattern$BnMS),
	$classEntry("java.util.regex.Pattern$Bound", ::java::util::regex::Pattern$Bound),
	$classEntry("java.util.regex.Pattern$Branch", ::java::util::regex::Pattern$Branch),
	$classEntry("java.util.regex.Pattern$BranchConn", ::java::util::regex::Pattern$BranchConn),
	$classEntry("java.util.regex.Pattern$CIBackRef", ::java::util::regex::Pattern$CIBackRef),
	$classEntry("java.util.regex.Pattern$Caret", ::java::util::regex::Pattern$Caret),
	$classEntry("java.util.regex.Pattern$CharPredicate", ::java::util::regex::Pattern$CharPredicate),
	$classEntry("java.util.regex.Pattern$CharProperty", ::java::util::regex::Pattern$CharProperty),
	$classEntry("java.util.regex.Pattern$CharPropertyGreedy", ::java::util::regex::Pattern$CharPropertyGreedy),
	$classEntry("java.util.regex.Pattern$Curly", ::java::util::regex::Pattern$Curly),
	$classEntry("java.util.regex.Pattern$Dollar", ::java::util::regex::Pattern$Dollar),
	$classEntry("java.util.regex.Pattern$End", ::java::util::regex::Pattern$End),
	$classEntry("java.util.regex.Pattern$First", ::java::util::regex::Pattern$First),
	$classEntry("java.util.regex.Pattern$GraphemeBound", ::java::util::regex::Pattern$GraphemeBound),
	$classEntry("java.util.regex.Pattern$GroupCurly", ::java::util::regex::Pattern$GroupCurly),
	$classEntry("java.util.regex.Pattern$GroupHead", ::java::util::regex::Pattern$GroupHead),
	$classEntry("java.util.regex.Pattern$GroupTail", ::java::util::regex::Pattern$GroupTail),
	$classEntry("java.util.regex.Pattern$LastMatch", ::java::util::regex::Pattern$LastMatch),
	$classEntry("java.util.regex.Pattern$LastNode", ::java::util::regex::Pattern$LastNode),
	$classEntry("java.util.regex.Pattern$LazyLoop", ::java::util::regex::Pattern$LazyLoop),
	$classEntry("java.util.regex.Pattern$LineEnding", ::java::util::regex::Pattern$LineEnding),
	$classEntry("java.util.regex.Pattern$LookBehindEndNode", ::java::util::regex::Pattern$LookBehindEndNode),
	$classEntry("java.util.regex.Pattern$Loop", ::java::util::regex::Pattern$Loop),
	$classEntry("java.util.regex.Pattern$NFCCharProperty", ::java::util::regex::Pattern$NFCCharProperty),
	$classEntry("java.util.regex.Pattern$Neg", ::java::util::regex::Pattern$Neg),
	$classEntry("java.util.regex.Pattern$Node", ::java::util::regex::Pattern$Node),
	$classEntry("java.util.regex.Pattern$NotBehind", ::java::util::regex::Pattern$NotBehind),
	$classEntry("java.util.regex.Pattern$NotBehindS", ::java::util::regex::Pattern$NotBehindS),
	$classEntry("java.util.regex.Pattern$Pos", ::java::util::regex::Pattern$Pos),
	$classEntry("java.util.regex.Pattern$Prolog", ::java::util::regex::Pattern$Prolog),
	$classEntry("java.util.regex.Pattern$Qtype", ::java::util::regex::Pattern$Qtype),
	$classEntry("java.util.regex.Pattern$Ques", ::java::util::regex::Pattern$Ques),
	$classEntry("java.util.regex.Pattern$Slice", ::java::util::regex::Pattern$Slice),
	$classEntry("java.util.regex.Pattern$SliceI", ::java::util::regex::Pattern$SliceI),
	$classEntry("java.util.regex.Pattern$SliceIS", ::java::util::regex::Pattern$SliceIS),
	$classEntry("java.util.regex.Pattern$SliceNode", ::java::util::regex::Pattern$SliceNode),
	$classEntry("java.util.regex.Pattern$SliceS", ::java::util::regex::Pattern$SliceS),
	$classEntry("java.util.regex.Pattern$SliceU", ::java::util::regex::Pattern$SliceU),
	$classEntry("java.util.regex.Pattern$SliceUS", ::java::util::regex::Pattern$SliceUS),
	$classEntry("java.util.regex.Pattern$Start", ::java::util::regex::Pattern$Start),
	$classEntry("java.util.regex.Pattern$StartS", ::java::util::regex::Pattern$StartS),
	$classEntry("java.util.regex.Pattern$TreeInfo", ::java::util::regex::Pattern$TreeInfo),
	$classEntry("java.util.regex.Pattern$UnixCaret", ::java::util::regex::Pattern$UnixCaret),
	$classEntry("java.util.regex.Pattern$UnixDollar", ::java::util::regex::Pattern$UnixDollar),
	$classEntry("java.util.regex.Pattern$XGrapheme", ::java::util::regex::Pattern$XGrapheme),
	$classEntry("java.util.regex.PatternSyntaxException", ::java::util::regex::PatternSyntaxException),
	$classEntry("java.util.regex.PrintPattern", ::java::util::regex::PrintPattern),
	$classEntry("java.util.spi.AbstractResourceBundleProvider", ::java::util::spi::AbstractResourceBundleProvider),
	$classEntry("java.util.spi.CalendarDataProvider", ::java::util::spi::CalendarDataProvider),
	$classEntry("java.util.spi.CalendarNameProvider", ::java::util::spi::CalendarNameProvider),
	$classEntry("java.util.spi.CurrencyNameProvider", ::java::util::spi::CurrencyNameProvider),
	$classEntry("java.util.spi.LocaleNameProvider", ::java::util::spi::LocaleNameProvider),
	$classEntry("java.util.spi.LocaleServiceProvider", ::java::util::spi::LocaleServiceProvider),
	$classEntry("java.util.spi.ResourceBundleControlProvider", ::java::util::spi::ResourceBundleControlProvider),
	$classEntry("java.util.spi.ResourceBundleProvider", ::java::util::spi::ResourceBundleProvider),
	$classEntry("java.util.spi.TimeZoneNameProvider", ::java::util::spi::TimeZoneNameProvider),
	$classEntry("java.util.spi.ToolProvider", ::java::util::spi::ToolProvider),
	$classEntry("java.util.stream.AbstractPipeline", ::java::util::stream::AbstractPipeline),
	$classEntry("java.util.stream.AbstractShortCircuitTask", ::java::util::stream::AbstractShortCircuitTask),
	$classEntry("java.util.stream.AbstractSpinedBuffer", ::java::util::stream::AbstractSpinedBuffer),
	$classEntry("java.util.stream.AbstractTask", ::java::util::stream::AbstractTask),
	$classEntry("java.util.stream.BaseStream", ::java::util::stream::BaseStream),
	$classEntry("java.util.stream.Collector", ::java::util::stream::Collector),
	$classEntry("java.util.stream.Collector$Characteristics", ::java::util::stream::Collector$Characteristics),
	$classEntry("java.util.stream.Collectors", ::java::util::stream::Collectors),
	$classEntry("java.util.stream.Collectors$1OptionalBox", ::java::util::stream::Collectors$1OptionalBox),
	$classEntry("java.util.stream.Collectors$1PairBox", ::java::util::stream::Collectors$1PairBox),
	$classEntry("java.util.stream.Collectors$CollectorImpl", ::java::util::stream::Collectors$CollectorImpl),
	$classEntry("java.util.stream.Collectors$Partition", ::java::util::stream::Collectors$Partition),
	$classEntry("java.util.stream.Collectors$Partition$1", ::java::util::stream::Collectors$Partition$1),
	$classEntry("java.util.stream.DistinctOps", ::java::util::stream::DistinctOps),
	$classEntry("java.util.stream.DistinctOps$1", ::java::util::stream::DistinctOps$1),
	$classEntry("java.util.stream.DistinctOps$1$1", ::java::util::stream::DistinctOps$1$1),
	$classEntry("java.util.stream.DistinctOps$1$2", ::java::util::stream::DistinctOps$1$2),
	$classEntry("java.util.stream.DoublePipeline", ::java::util::stream::DoublePipeline),
	$classEntry("java.util.stream.DoublePipeline$1", ::java::util::stream::DoublePipeline$1),
	$classEntry("java.util.stream.DoublePipeline$1$1", ::java::util::stream::DoublePipeline$1$1),
	$classEntry("java.util.stream.DoublePipeline$2", ::java::util::stream::DoublePipeline$2),
	$classEntry("java.util.stream.DoublePipeline$2$1", ::java::util::stream::DoublePipeline$2$1),
	$classEntry("java.util.stream.DoublePipeline$3", ::java::util::stream::DoublePipeline$3),
	$classEntry("java.util.stream.DoublePipeline$3$1", ::java::util::stream::DoublePipeline$3$1),
	$classEntry("java.util.stream.DoublePipeline$4", ::java::util::stream::DoublePipeline$4),
	$classEntry("java.util.stream.DoublePipeline$4$1", ::java::util::stream::DoublePipeline$4$1),
	$classEntry("java.util.stream.DoublePipeline$5", ::java::util::stream::DoublePipeline$5),
	$classEntry("java.util.stream.DoublePipeline$5$1", ::java::util::stream::DoublePipeline$5$1),
	$classEntry("java.util.stream.DoublePipeline$6", ::java::util::stream::DoublePipeline$6),
	$classEntry("java.util.stream.DoublePipeline$6$1", ::java::util::stream::DoublePipeline$6$1),
	$classEntry("java.util.stream.DoublePipeline$7", ::java::util::stream::DoublePipeline$7),
	$classEntry("java.util.stream.DoublePipeline$8", ::java::util::stream::DoublePipeline$8),
	$classEntry("java.util.stream.DoublePipeline$8$1", ::java::util::stream::DoublePipeline$8$1),
	$classEntry("java.util.stream.DoublePipeline$9", ::java::util::stream::DoublePipeline$9),
	$classEntry("java.util.stream.DoublePipeline$9$1", ::java::util::stream::DoublePipeline$9$1),
	$classEntry("java.util.stream.DoublePipeline$Head", ::java::util::stream::DoublePipeline$Head),
	$classEntry("java.util.stream.DoublePipeline$StatefulOp", ::java::util::stream::DoublePipeline$StatefulOp),
	$classEntry("java.util.stream.DoublePipeline$StatelessOp", ::java::util::stream::DoublePipeline$StatelessOp),
	$classEntry("java.util.stream.DoubleStream", ::java::util::stream::DoubleStream),
	$classEntry("java.util.stream.DoubleStream$1", ::java::util::stream::DoubleStream$1),
	$classEntry("java.util.stream.DoubleStream$2", ::java::util::stream::DoubleStream$2),
	$classEntry("java.util.stream.DoubleStream$Builder", ::java::util::stream::DoubleStream$Builder),
	$classEntry("java.util.stream.DoubleStream$DoubleMapMultiConsumer", ::java::util::stream::DoubleStream$DoubleMapMultiConsumer),
	$classEntry("java.util.stream.FindOps", ::java::util::stream::FindOps),
	$classEntry("java.util.stream.FindOps$FindOp", ::java::util::stream::FindOps$FindOp),
	$classEntry("java.util.stream.FindOps$FindSink", ::java::util::stream::FindOps$FindSink),
	$classEntry("java.util.stream.FindOps$FindSink$OfDouble", ::java::util::stream::FindOps$FindSink$OfDouble),
	$classEntry("java.util.stream.FindOps$FindSink$OfInt", ::java::util::stream::FindOps$FindSink$OfInt),
	$classEntry("java.util.stream.FindOps$FindSink$OfLong", ::java::util::stream::FindOps$FindSink$OfLong),
	$classEntry("java.util.stream.FindOps$FindSink$OfRef", ::java::util::stream::FindOps$FindSink$OfRef),
	$classEntry("java.util.stream.FindOps$FindTask", ::java::util::stream::FindOps$FindTask),
	$classEntry("java.util.stream.ForEachOps", ::java::util::stream::ForEachOps),
	$classEntry("java.util.stream.ForEachOps$ForEachOp", ::java::util::stream::ForEachOps$ForEachOp),
	$classEntry("java.util.stream.ForEachOps$ForEachOp$OfDouble", ::java::util::stream::ForEachOps$ForEachOp$OfDouble),
	$classEntry("java.util.stream.ForEachOps$ForEachOp$OfInt", ::java::util::stream::ForEachOps$ForEachOp$OfInt),
	$classEntry("java.util.stream.ForEachOps$ForEachOp$OfLong", ::java::util::stream::ForEachOps$ForEachOp$OfLong),
	$classEntry("java.util.stream.ForEachOps$ForEachOp$OfRef", ::java::util::stream::ForEachOps$ForEachOp$OfRef),
	$classEntry("java.util.stream.ForEachOps$ForEachOrderedTask", ::java::util::stream::ForEachOps$ForEachOrderedTask),
	$classEntry("java.util.stream.ForEachOps$ForEachTask", ::java::util::stream::ForEachOps$ForEachTask),
	$classEntry("java.util.stream.IntPipeline", ::java::util::stream::IntPipeline),
	$classEntry("java.util.stream.IntPipeline$1", ::java::util::stream::IntPipeline$1),
	$classEntry("java.util.stream.IntPipeline$1$1", ::java::util::stream::IntPipeline$1$1),
	$classEntry("java.util.stream.IntPipeline$10", ::java::util::stream::IntPipeline$10),
	$classEntry("java.util.stream.IntPipeline$10$1", ::java::util::stream::IntPipeline$10$1),
	$classEntry("java.util.stream.IntPipeline$11", ::java::util::stream::IntPipeline$11),
	$classEntry("java.util.stream.IntPipeline$11$1", ::java::util::stream::IntPipeline$11$1),
	$classEntry("java.util.stream.IntPipeline$2", ::java::util::stream::IntPipeline$2),
	$classEntry("java.util.stream.IntPipeline$2$1", ::java::util::stream::IntPipeline$2$1),
	$classEntry("java.util.stream.IntPipeline$3", ::java::util::stream::IntPipeline$3),
	$classEntry("java.util.stream.IntPipeline$3$1", ::java::util::stream::IntPipeline$3$1),
	$classEntry("java.util.stream.IntPipeline$4", ::java::util::stream::IntPipeline$4),
	$classEntry("java.util.stream.IntPipeline$4$1", ::java::util::stream::IntPipeline$4$1),
	$classEntry("java.util.stream.IntPipeline$5", ::java::util::stream::IntPipeline$5),
	$classEntry("java.util.stream.IntPipeline$5$1", ::java::util::stream::IntPipeline$5$1),
	$classEntry("java.util.stream.IntPipeline$6", ::java::util::stream::IntPipeline$6),
	$classEntry("java.util.stream.IntPipeline$6$1", ::java::util::stream::IntPipeline$6$1),
	$classEntry("java.util.stream.IntPipeline$7", ::java::util::stream::IntPipeline$7),
	$classEntry("java.util.stream.IntPipeline$7$1", ::java::util::stream::IntPipeline$7$1),
	$classEntry("java.util.stream.IntPipeline$8", ::java::util::stream::IntPipeline$8),
	$classEntry("java.util.stream.IntPipeline$8$1", ::java::util::stream::IntPipeline$8$1),
	$classEntry("java.util.stream.IntPipeline$9", ::java::util::stream::IntPipeline$9),
	$classEntry("java.util.stream.IntPipeline$Head", ::java::util::stream::IntPipeline$Head),
	$classEntry("java.util.stream.IntPipeline$StatefulOp", ::java::util::stream::IntPipeline$StatefulOp),
	$classEntry("java.util.stream.IntPipeline$StatelessOp", ::java::util::stream::IntPipeline$StatelessOp),
	$classEntry("java.util.stream.IntStream", ::java::util::stream::IntStream),
	$classEntry("java.util.stream.IntStream$1", ::java::util::stream::IntStream$1),
	$classEntry("java.util.stream.IntStream$2", ::java::util::stream::IntStream$2),
	$classEntry("java.util.stream.IntStream$Builder", ::java::util::stream::IntStream$Builder),
	$classEntry("java.util.stream.IntStream$IntMapMultiConsumer", ::java::util::stream::IntStream$IntMapMultiConsumer),
	$classEntry("java.util.stream.LongPipeline", ::java::util::stream::LongPipeline),
	$classEntry("java.util.stream.LongPipeline$1", ::java::util::stream::LongPipeline$1),
	$classEntry("java.util.stream.LongPipeline$1$1", ::java::util::stream::LongPipeline$1$1),
	$classEntry("java.util.stream.LongPipeline$10", ::java::util::stream::LongPipeline$10),
	$classEntry("java.util.stream.LongPipeline$10$1", ::java::util::stream::LongPipeline$10$1),
	$classEntry("java.util.stream.LongPipeline$2", ::java::util::stream::LongPipeline$2),
	$classEntry("java.util.stream.LongPipeline$2$1", ::java::util::stream::LongPipeline$2$1),
	$classEntry("java.util.stream.LongPipeline$3", ::java::util::stream::LongPipeline$3),
	$classEntry("java.util.stream.LongPipeline$3$1", ::java::util::stream::LongPipeline$3$1),
	$classEntry("java.util.stream.LongPipeline$4", ::java::util::stream::LongPipeline$4),
	$classEntry("java.util.stream.LongPipeline$4$1", ::java::util::stream::LongPipeline$4$1),
	$classEntry("java.util.stream.LongPipeline$5", ::java::util::stream::LongPipeline$5),
	$classEntry("java.util.stream.LongPipeline$5$1", ::java::util::stream::LongPipeline$5$1),
	$classEntry("java.util.stream.LongPipeline$6", ::java::util::stream::LongPipeline$6),
	$classEntry("java.util.stream.LongPipeline$6$1", ::java::util::stream::LongPipeline$6$1),
	$classEntry("java.util.stream.LongPipeline$7", ::java::util::stream::LongPipeline$7),
	$classEntry("java.util.stream.LongPipeline$7$1", ::java::util::stream::LongPipeline$7$1),
	$classEntry("java.util.stream.LongPipeline$8", ::java::util::stream::LongPipeline$8),
	$classEntry("java.util.stream.LongPipeline$9", ::java::util::stream::LongPipeline$9),
	$classEntry("java.util.stream.LongPipeline$9$1", ::java::util::stream::LongPipeline$9$1),
	$classEntry("java.util.stream.LongPipeline$Head", ::java::util::stream::LongPipeline$Head),
	$classEntry("java.util.stream.LongPipeline$StatefulOp", ::java::util::stream::LongPipeline$StatefulOp),
	$classEntry("java.util.stream.LongPipeline$StatelessOp", ::java::util::stream::LongPipeline$StatelessOp),
	$classEntry("java.util.stream.LongStream", ::java::util::stream::LongStream),
	$classEntry("java.util.stream.LongStream$1", ::java::util::stream::LongStream$1),
	$classEntry("java.util.stream.LongStream$2", ::java::util::stream::LongStream$2),
	$classEntry("java.util.stream.LongStream$Builder", ::java::util::stream::LongStream$Builder),
	$classEntry("java.util.stream.LongStream$LongMapMultiConsumer", ::java::util::stream::LongStream$LongMapMultiConsumer),
	$classEntry("java.util.stream.MatchOps", ::java::util::stream::MatchOps),
	$classEntry("java.util.stream.MatchOps$1MatchSink", ::java::util::stream::MatchOps$1MatchSink),
	$classEntry("java.util.stream.MatchOps$2MatchSink", ::java::util::stream::MatchOps$2MatchSink),
	$classEntry("java.util.stream.MatchOps$3MatchSink", ::java::util::stream::MatchOps$3MatchSink),
	$classEntry("java.util.stream.MatchOps$4MatchSink", ::java::util::stream::MatchOps$4MatchSink),
	$classEntry("java.util.stream.MatchOps$BooleanTerminalSink", ::java::util::stream::MatchOps$BooleanTerminalSink),
	$classEntry("java.util.stream.MatchOps$MatchKind", ::java::util::stream::MatchOps$MatchKind),
	$classEntry("java.util.stream.MatchOps$MatchOp", ::java::util::stream::MatchOps$MatchOp),
	$classEntry("java.util.stream.MatchOps$MatchTask", ::java::util::stream::MatchOps$MatchTask),
	$classEntry("java.util.stream.Node", ::java::util::stream::Node),
	$classEntry("java.util.stream.Node$Builder", ::java::util::stream::Node$Builder),
	$classEntry("java.util.stream.Node$Builder$OfDouble", ::java::util::stream::Node$Builder$OfDouble),
	$classEntry("java.util.stream.Node$Builder$OfInt", ::java::util::stream::Node$Builder$OfInt),
	$classEntry("java.util.stream.Node$Builder$OfLong", ::java::util::stream::Node$Builder$OfLong),
	$classEntry("java.util.stream.Node$OfDouble", ::java::util::stream::Node$OfDouble),
	$classEntry("java.util.stream.Node$OfInt", ::java::util::stream::Node$OfInt),
	$classEntry("java.util.stream.Node$OfLong", ::java::util::stream::Node$OfLong),
	$classEntry("java.util.stream.Node$OfPrimitive", ::java::util::stream::Node$OfPrimitive),
	$classEntry("java.util.stream.Nodes", ::java::util::stream::Nodes),
	$classEntry("java.util.stream.Nodes$1", ::java::util::stream::Nodes$1),
	$classEntry("java.util.stream.Nodes$AbstractConcNode", ::java::util::stream::Nodes$AbstractConcNode),
	$classEntry("java.util.stream.Nodes$ArrayNode", ::java::util::stream::Nodes$ArrayNode),
	$classEntry("java.util.stream.Nodes$CollectionNode", ::java::util::stream::Nodes$CollectionNode),
	$classEntry("java.util.stream.Nodes$CollectorTask", ::java::util::stream::Nodes$CollectorTask),
	$classEntry("java.util.stream.Nodes$CollectorTask$OfDouble", ::java::util::stream::Nodes$CollectorTask$OfDouble),
	$classEntry("java.util.stream.Nodes$CollectorTask$OfInt", ::java::util::stream::Nodes$CollectorTask$OfInt),
	$classEntry("java.util.stream.Nodes$CollectorTask$OfLong", ::java::util::stream::Nodes$CollectorTask$OfLong),
	$classEntry("java.util.stream.Nodes$CollectorTask$OfRef", ::java::util::stream::Nodes$CollectorTask$OfRef),
	$classEntry("java.util.stream.Nodes$ConcNode", ::java::util::stream::Nodes$ConcNode),
	$classEntry("java.util.stream.Nodes$ConcNode$OfDouble", ::java::util::stream::Nodes$ConcNode$OfDouble),
	$classEntry("java.util.stream.Nodes$ConcNode$OfInt", ::java::util::stream::Nodes$ConcNode$OfInt),
	$classEntry("java.util.stream.Nodes$ConcNode$OfLong", ::java::util::stream::Nodes$ConcNode$OfLong),
	$classEntry("java.util.stream.Nodes$ConcNode$OfPrimitive", ::java::util::stream::Nodes$ConcNode$OfPrimitive),
	$classEntry("java.util.stream.Nodes$DoubleArrayNode", ::java::util::stream::Nodes$DoubleArrayNode),
	$classEntry("java.util.stream.Nodes$DoubleFixedNodeBuilder", ::java::util::stream::Nodes$DoubleFixedNodeBuilder),
	$classEntry("java.util.stream.Nodes$DoubleSpinedNodeBuilder", ::java::util::stream::Nodes$DoubleSpinedNodeBuilder),
	$classEntry("java.util.stream.Nodes$EmptyNode", ::java::util::stream::Nodes$EmptyNode),
	$classEntry("java.util.stream.Nodes$EmptyNode$OfDouble", ::java::util::stream::Nodes$EmptyNode$OfDouble),
	$classEntry("java.util.stream.Nodes$EmptyNode$OfInt", ::java::util::stream::Nodes$EmptyNode$OfInt),
	$classEntry("java.util.stream.Nodes$EmptyNode$OfLong", ::java::util::stream::Nodes$EmptyNode$OfLong),
	$classEntry("java.util.stream.Nodes$EmptyNode$OfRef", ::java::util::stream::Nodes$EmptyNode$OfRef),
	$classEntry("java.util.stream.Nodes$FixedNodeBuilder", ::java::util::stream::Nodes$FixedNodeBuilder),
	$classEntry("java.util.stream.Nodes$IntArrayNode", ::java::util::stream::Nodes$IntArrayNode),
	$classEntry("java.util.stream.Nodes$IntFixedNodeBuilder", ::java::util::stream::Nodes$IntFixedNodeBuilder),
	$classEntry("java.util.stream.Nodes$IntSpinedNodeBuilder", ::java::util::stream::Nodes$IntSpinedNodeBuilder),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator", ::java::util::stream::Nodes$InternalNodeSpliterator),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator$OfDouble", ::java::util::stream::Nodes$InternalNodeSpliterator$OfDouble),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator$OfInt", ::java::util::stream::Nodes$InternalNodeSpliterator$OfInt),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator$OfLong", ::java::util::stream::Nodes$InternalNodeSpliterator$OfLong),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive", ::java::util::stream::Nodes$InternalNodeSpliterator$OfPrimitive),
	$classEntry("java.util.stream.Nodes$InternalNodeSpliterator$OfRef", ::java::util::stream::Nodes$InternalNodeSpliterator$OfRef),
	$classEntry("java.util.stream.Nodes$LongArrayNode", ::java::util::stream::Nodes$LongArrayNode),
	$classEntry("java.util.stream.Nodes$LongFixedNodeBuilder", ::java::util::stream::Nodes$LongFixedNodeBuilder),
	$classEntry("java.util.stream.Nodes$LongSpinedNodeBuilder", ::java::util::stream::Nodes$LongSpinedNodeBuilder),
	$classEntry("java.util.stream.Nodes$SizedCollectorTask", ::java::util::stream::Nodes$SizedCollectorTask),
	$classEntry("java.util.stream.Nodes$SizedCollectorTask$OfDouble", ::java::util::stream::Nodes$SizedCollectorTask$OfDouble),
	$classEntry("java.util.stream.Nodes$SizedCollectorTask$OfInt", ::java::util::stream::Nodes$SizedCollectorTask$OfInt),
	$classEntry("java.util.stream.Nodes$SizedCollectorTask$OfLong", ::java::util::stream::Nodes$SizedCollectorTask$OfLong),
	$classEntry("java.util.stream.Nodes$SizedCollectorTask$OfRef", ::java::util::stream::Nodes$SizedCollectorTask$OfRef),
	$classEntry("java.util.stream.Nodes$SpinedNodeBuilder", ::java::util::stream::Nodes$SpinedNodeBuilder),
	$classEntry("java.util.stream.Nodes$ToArrayTask", ::java::util::stream::Nodes$ToArrayTask),
	$classEntry("java.util.stream.Nodes$ToArrayTask$OfDouble", ::java::util::stream::Nodes$ToArrayTask$OfDouble),
	$classEntry("java.util.stream.Nodes$ToArrayTask$OfInt", ::java::util::stream::Nodes$ToArrayTask$OfInt),
	$classEntry("java.util.stream.Nodes$ToArrayTask$OfLong", ::java::util::stream::Nodes$ToArrayTask$OfLong),
	$classEntry("java.util.stream.Nodes$ToArrayTask$OfPrimitive", ::java::util::stream::Nodes$ToArrayTask$OfPrimitive),
	$classEntry("java.util.stream.Nodes$ToArrayTask$OfRef", ::java::util::stream::Nodes$ToArrayTask$OfRef),
	$classEntry("java.util.stream.PipelineHelper", ::java::util::stream::PipelineHelper),
	$classEntry("java.util.stream.ReduceOps", ::java::util::stream::ReduceOps),
	$classEntry("java.util.stream.ReduceOps$1", ::java::util::stream::ReduceOps$1),
	$classEntry("java.util.stream.ReduceOps$10", ::java::util::stream::ReduceOps$10),
	$classEntry("java.util.stream.ReduceOps$10ReducingSink", ::java::util::stream::ReduceOps$10ReducingSink),
	$classEntry("java.util.stream.ReduceOps$11", ::java::util::stream::ReduceOps$11),
	$classEntry("java.util.stream.ReduceOps$11ReducingSink", ::java::util::stream::ReduceOps$11ReducingSink),
	$classEntry("java.util.stream.ReduceOps$12", ::java::util::stream::ReduceOps$12),
	$classEntry("java.util.stream.ReduceOps$12ReducingSink", ::java::util::stream::ReduceOps$12ReducingSink),
	$classEntry("java.util.stream.ReduceOps$13", ::java::util::stream::ReduceOps$13),
	$classEntry("java.util.stream.ReduceOps$13ReducingSink", ::java::util::stream::ReduceOps$13ReducingSink),
	$classEntry("java.util.stream.ReduceOps$14", ::java::util::stream::ReduceOps$14),
	$classEntry("java.util.stream.ReduceOps$15", ::java::util::stream::ReduceOps$15),
	$classEntry("java.util.stream.ReduceOps$16", ::java::util::stream::ReduceOps$16),
	$classEntry("java.util.stream.ReduceOps$17", ::java::util::stream::ReduceOps$17),
	$classEntry("java.util.stream.ReduceOps$1ReducingSink", ::java::util::stream::ReduceOps$1ReducingSink),
	$classEntry("java.util.stream.ReduceOps$2", ::java::util::stream::ReduceOps$2),
	$classEntry("java.util.stream.ReduceOps$2ReducingSink", ::java::util::stream::ReduceOps$2ReducingSink),
	$classEntry("java.util.stream.ReduceOps$3", ::java::util::stream::ReduceOps$3),
	$classEntry("java.util.stream.ReduceOps$3ReducingSink", ::java::util::stream::ReduceOps$3ReducingSink),
	$classEntry("java.util.stream.ReduceOps$4", ::java::util::stream::ReduceOps$4),
	$classEntry("java.util.stream.ReduceOps$4ReducingSink", ::java::util::stream::ReduceOps$4ReducingSink),
	$classEntry("java.util.stream.ReduceOps$5", ::java::util::stream::ReduceOps$5),
	$classEntry("java.util.stream.ReduceOps$5ReducingSink", ::java::util::stream::ReduceOps$5ReducingSink),
	$classEntry("java.util.stream.ReduceOps$6", ::java::util::stream::ReduceOps$6),
	$classEntry("java.util.stream.ReduceOps$6ReducingSink", ::java::util::stream::ReduceOps$6ReducingSink),
	$classEntry("java.util.stream.ReduceOps$7", ::java::util::stream::ReduceOps$7),
	$classEntry("java.util.stream.ReduceOps$7ReducingSink", ::java::util::stream::ReduceOps$7ReducingSink),
	$classEntry("java.util.stream.ReduceOps$8", ::java::util::stream::ReduceOps$8),
	$classEntry("java.util.stream.ReduceOps$8ReducingSink", ::java::util::stream::ReduceOps$8ReducingSink),
	$classEntry("java.util.stream.ReduceOps$9", ::java::util::stream::ReduceOps$9),
	$classEntry("java.util.stream.ReduceOps$9ReducingSink", ::java::util::stream::ReduceOps$9ReducingSink),
	$classEntry("java.util.stream.ReduceOps$AccumulatingSink", ::java::util::stream::ReduceOps$AccumulatingSink),
	$classEntry("java.util.stream.ReduceOps$Box", ::java::util::stream::ReduceOps$Box),
	$classEntry("java.util.stream.ReduceOps$CountingSink", ::java::util::stream::ReduceOps$CountingSink),
	$classEntry("java.util.stream.ReduceOps$CountingSink$OfDouble", ::java::util::stream::ReduceOps$CountingSink$OfDouble),
	$classEntry("java.util.stream.ReduceOps$CountingSink$OfInt", ::java::util::stream::ReduceOps$CountingSink$OfInt),
	$classEntry("java.util.stream.ReduceOps$CountingSink$OfLong", ::java::util::stream::ReduceOps$CountingSink$OfLong),
	$classEntry("java.util.stream.ReduceOps$CountingSink$OfRef", ::java::util::stream::ReduceOps$CountingSink$OfRef),
	$classEntry("java.util.stream.ReduceOps$ReduceOp", ::java::util::stream::ReduceOps$ReduceOp),
	$classEntry("java.util.stream.ReduceOps$ReduceTask", ::java::util::stream::ReduceOps$ReduceTask),
	$classEntry("java.util.stream.ReferencePipeline", ::java::util::stream::ReferencePipeline),
	$classEntry("java.util.stream.ReferencePipeline$1", ::java::util::stream::ReferencePipeline$1),
	$classEntry("java.util.stream.ReferencePipeline$10", ::java::util::stream::ReferencePipeline$10),
	$classEntry("java.util.stream.ReferencePipeline$10$1", ::java::util::stream::ReferencePipeline$10$1),
	$classEntry("java.util.stream.ReferencePipeline$11", ::java::util::stream::ReferencePipeline$11),
	$classEntry("java.util.stream.ReferencePipeline$11$1", ::java::util::stream::ReferencePipeline$11$1),
	$classEntry("java.util.stream.ReferencePipeline$12", ::java::util::stream::ReferencePipeline$12),
	$classEntry("java.util.stream.ReferencePipeline$12$1", ::java::util::stream::ReferencePipeline$12$1),
	$classEntry("java.util.stream.ReferencePipeline$13", ::java::util::stream::ReferencePipeline$13),
	$classEntry("java.util.stream.ReferencePipeline$13$1", ::java::util::stream::ReferencePipeline$13$1),
	$classEntry("java.util.stream.ReferencePipeline$14", ::java::util::stream::ReferencePipeline$14),
	$classEntry("java.util.stream.ReferencePipeline$14$1", ::java::util::stream::ReferencePipeline$14$1),
	$classEntry("java.util.stream.ReferencePipeline$15", ::java::util::stream::ReferencePipeline$15),
	$classEntry("java.util.stream.ReferencePipeline$15$1", ::java::util::stream::ReferencePipeline$15$1),
	$classEntry("java.util.stream.ReferencePipeline$2", ::java::util::stream::ReferencePipeline$2),
	$classEntry("java.util.stream.ReferencePipeline$2$1", ::java::util::stream::ReferencePipeline$2$1),
	$classEntry("java.util.stream.ReferencePipeline$3", ::java::util::stream::ReferencePipeline$3),
	$classEntry("java.util.stream.ReferencePipeline$3$1", ::java::util::stream::ReferencePipeline$3$1),
	$classEntry("java.util.stream.ReferencePipeline$4", ::java::util::stream::ReferencePipeline$4),
	$classEntry("java.util.stream.ReferencePipeline$4$1", ::java::util::stream::ReferencePipeline$4$1),
	$classEntry("java.util.stream.ReferencePipeline$5", ::java::util::stream::ReferencePipeline$5),
	$classEntry("java.util.stream.ReferencePipeline$5$1", ::java::util::stream::ReferencePipeline$5$1),
	$classEntry("java.util.stream.ReferencePipeline$6", ::java::util::stream::ReferencePipeline$6),
	$classEntry("java.util.stream.ReferencePipeline$6$1", ::java::util::stream::ReferencePipeline$6$1),
	$classEntry("java.util.stream.ReferencePipeline$7", ::java::util::stream::ReferencePipeline$7),
	$classEntry("java.util.stream.ReferencePipeline$7$1", ::java::util::stream::ReferencePipeline$7$1),
	$classEntry("java.util.stream.ReferencePipeline$8", ::java::util::stream::ReferencePipeline$8),
	$classEntry("java.util.stream.ReferencePipeline$8$1", ::java::util::stream::ReferencePipeline$8$1),
	$classEntry("java.util.stream.ReferencePipeline$9", ::java::util::stream::ReferencePipeline$9),
	$classEntry("java.util.stream.ReferencePipeline$9$1", ::java::util::stream::ReferencePipeline$9$1),
	$classEntry("java.util.stream.ReferencePipeline$Head", ::java::util::stream::ReferencePipeline$Head),
	$classEntry("java.util.stream.ReferencePipeline$StatefulOp", ::java::util::stream::ReferencePipeline$StatefulOp),
	$classEntry("java.util.stream.ReferencePipeline$StatelessOp", ::java::util::stream::ReferencePipeline$StatelessOp),
	$classEntry("java.util.stream.Sink", ::java::util::stream::Sink),
	$classEntry("java.util.stream.Sink$ChainedDouble", ::java::util::stream::Sink$ChainedDouble),
	$classEntry("java.util.stream.Sink$ChainedInt", ::java::util::stream::Sink$ChainedInt),
	$classEntry("java.util.stream.Sink$ChainedLong", ::java::util::stream::Sink$ChainedLong),
	$classEntry("java.util.stream.Sink$ChainedReference", ::java::util::stream::Sink$ChainedReference),
	$classEntry("java.util.stream.Sink$OfDouble", ::java::util::stream::Sink$OfDouble),
	$classEntry("java.util.stream.Sink$OfInt", ::java::util::stream::Sink$OfInt),
	$classEntry("java.util.stream.Sink$OfLong", ::java::util::stream::Sink$OfLong),
	$classEntry("java.util.stream.SliceOps", ::java::util::stream::SliceOps),
	$classEntry("java.util.stream.SliceOps$1", ::java::util::stream::SliceOps$1),
	$classEntry("java.util.stream.SliceOps$1$1", ::java::util::stream::SliceOps$1$1),
	$classEntry("java.util.stream.SliceOps$2", ::java::util::stream::SliceOps$2),
	$classEntry("java.util.stream.SliceOps$2$1", ::java::util::stream::SliceOps$2$1),
	$classEntry("java.util.stream.SliceOps$3", ::java::util::stream::SliceOps$3),
	$classEntry("java.util.stream.SliceOps$3$1", ::java::util::stream::SliceOps$3$1),
	$classEntry("java.util.stream.SliceOps$4", ::java::util::stream::SliceOps$4),
	$classEntry("java.util.stream.SliceOps$4$1", ::java::util::stream::SliceOps$4$1),
	$classEntry("java.util.stream.SliceOps$5", ::java::util::stream::SliceOps$5),
	$classEntry("java.util.stream.SliceOps$SliceTask", ::java::util::stream::SliceOps$SliceTask),
	$classEntry("java.util.stream.SortedOps", ::java::util::stream::SortedOps),
	$classEntry("java.util.stream.SortedOps$AbstractDoubleSortingSink", ::java::util::stream::SortedOps$AbstractDoubleSortingSink),
	$classEntry("java.util.stream.SortedOps$AbstractIntSortingSink", ::java::util::stream::SortedOps$AbstractIntSortingSink),
	$classEntry("java.util.stream.SortedOps$AbstractLongSortingSink", ::java::util::stream::SortedOps$AbstractLongSortingSink),
	$classEntry("java.util.stream.SortedOps$AbstractRefSortingSink", ::java::util::stream::SortedOps$AbstractRefSortingSink),
	$classEntry("java.util.stream.SortedOps$DoubleSortingSink", ::java::util::stream::SortedOps$DoubleSortingSink),
	$classEntry("java.util.stream.SortedOps$IntSortingSink", ::java::util::stream::SortedOps$IntSortingSink),
	$classEntry("java.util.stream.SortedOps$LongSortingSink", ::java::util::stream::SortedOps$LongSortingSink),
	$classEntry("java.util.stream.SortedOps$OfDouble", ::java::util::stream::SortedOps$OfDouble),
	$classEntry("java.util.stream.SortedOps$OfInt", ::java::util::stream::SortedOps$OfInt),
	$classEntry("java.util.stream.SortedOps$OfLong", ::java::util::stream::SortedOps$OfLong),
	$classEntry("java.util.stream.SortedOps$OfRef", ::java::util::stream::SortedOps$OfRef),
	$classEntry("java.util.stream.SortedOps$RefSortingSink", ::java::util::stream::SortedOps$RefSortingSink),
	$classEntry("java.util.stream.SortedOps$SizedDoubleSortingSink", ::java::util::stream::SortedOps$SizedDoubleSortingSink),
	$classEntry("java.util.stream.SortedOps$SizedIntSortingSink", ::java::util::stream::SortedOps$SizedIntSortingSink),
	$classEntry("java.util.stream.SortedOps$SizedLongSortingSink", ::java::util::stream::SortedOps$SizedLongSortingSink),
	$classEntry("java.util.stream.SortedOps$SizedRefSortingSink", ::java::util::stream::SortedOps$SizedRefSortingSink),
	$classEntry("java.util.stream.SpinedBuffer", ::java::util::stream::SpinedBuffer),
	$classEntry("java.util.stream.SpinedBuffer$1Splitr", ::java::util::stream::SpinedBuffer$1Splitr),
	$classEntry("java.util.stream.SpinedBuffer$OfDouble", ::java::util::stream::SpinedBuffer$OfDouble),
	$classEntry("java.util.stream.SpinedBuffer$OfDouble$1Splitr", ::java::util::stream::SpinedBuffer$OfDouble$1Splitr),
	$classEntry("java.util.stream.SpinedBuffer$OfInt", ::java::util::stream::SpinedBuffer$OfInt),
	$classEntry("java.util.stream.SpinedBuffer$OfInt$1Splitr", ::java::util::stream::SpinedBuffer$OfInt$1Splitr),
	$classEntry("java.util.stream.SpinedBuffer$OfLong", ::java::util::stream::SpinedBuffer$OfLong),
	$classEntry("java.util.stream.SpinedBuffer$OfLong$1Splitr", ::java::util::stream::SpinedBuffer$OfLong$1Splitr),
	$classEntry("java.util.stream.SpinedBuffer$OfPrimitive", ::java::util::stream::SpinedBuffer$OfPrimitive),
	$classEntry("java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator", ::java::util::stream::SpinedBuffer$OfPrimitive$BaseSpliterator),
	$classEntry("java.util.stream.Stream", ::java::util::stream::Stream),
	$classEntry("java.util.stream.Stream$1", ::java::util::stream::Stream$1),
	$classEntry("java.util.stream.Stream$2", ::java::util::stream::Stream$2),
	$classEntry("java.util.stream.Stream$Builder", ::java::util::stream::Stream$Builder),
	$classEntry("java.util.stream.StreamOpFlag", ::java::util::stream::StreamOpFlag),
	$classEntry("java.util.stream.StreamOpFlag$MaskBuilder", ::java::util::stream::StreamOpFlag$MaskBuilder),
	$classEntry("java.util.stream.StreamOpFlag$Type", ::java::util::stream::StreamOpFlag$Type),
	$classEntry("java.util.stream.StreamShape", ::java::util::stream::StreamShape),
	$classEntry("java.util.stream.StreamSpliterators", ::java::util::stream::StreamSpliterators),
	$classEntry("java.util.stream.StreamSpliterators$AbstractWrappingSpliterator", ::java::util::stream::StreamSpliterators$AbstractWrappingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer", ::java::util::stream::StreamSpliterators$ArrayBuffer),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer$OfDouble", ::java::util::stream::StreamSpliterators$ArrayBuffer$OfDouble),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer$OfInt", ::java::util::stream::StreamSpliterators$ArrayBuffer$OfInt),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer$OfLong", ::java::util::stream::StreamSpliterators$ArrayBuffer$OfLong),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer$OfPrimitive", ::java::util::stream::StreamSpliterators$ArrayBuffer$OfPrimitive),
	$classEntry("java.util.stream.StreamSpliterators$ArrayBuffer$OfRef", ::java::util::stream::StreamSpliterators$ArrayBuffer$OfRef),
	$classEntry("java.util.stream.StreamSpliterators$DelegatingSpliterator", ::java::util::stream::StreamSpliterators$DelegatingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$DelegatingSpliterator$OfDouble", ::java::util::stream::StreamSpliterators$DelegatingSpliterator$OfDouble),
	$classEntry("java.util.stream.StreamSpliterators$DelegatingSpliterator$OfInt", ::java::util::stream::StreamSpliterators$DelegatingSpliterator$OfInt),
	$classEntry("java.util.stream.StreamSpliterators$DelegatingSpliterator$OfLong", ::java::util::stream::StreamSpliterators$DelegatingSpliterator$OfLong),
	$classEntry("java.util.stream.StreamSpliterators$DelegatingSpliterator$OfPrimitive", ::java::util::stream::StreamSpliterators$DelegatingSpliterator$OfPrimitive),
	$classEntry("java.util.stream.StreamSpliterators$DistinctSpliterator", ::java::util::stream::StreamSpliterators$DistinctSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$DoubleWrappingSpliterator", ::java::util::stream::StreamSpliterators$DoubleWrappingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator", ::java::util::stream::StreamSpliterators$InfiniteSupplyingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble", ::java::util::stream::StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble),
	$classEntry("java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfInt", ::java::util::stream::StreamSpliterators$InfiniteSupplyingSpliterator$OfInt),
	$classEntry("java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfLong", ::java::util::stream::StreamSpliterators$InfiniteSupplyingSpliterator$OfLong),
	$classEntry("java.util.stream.StreamSpliterators$InfiniteSupplyingSpliterator$OfRef", ::java::util::stream::StreamSpliterators$InfiniteSupplyingSpliterator$OfRef),
	$classEntry("java.util.stream.StreamSpliterators$IntWrappingSpliterator", ::java::util::stream::StreamSpliterators$IntWrappingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$LongWrappingSpliterator", ::java::util::stream::StreamSpliterators$LongWrappingSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator", ::java::util::stream::StreamSpliterators$SliceSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator$OfDouble", ::java::util::stream::StreamSpliterators$SliceSpliterator$OfDouble),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator$OfInt", ::java::util::stream::StreamSpliterators$SliceSpliterator$OfInt),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator$OfLong", ::java::util::stream::StreamSpliterators$SliceSpliterator$OfLong),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator$OfPrimitive", ::java::util::stream::StreamSpliterators$SliceSpliterator$OfPrimitive),
	$classEntry("java.util.stream.StreamSpliterators$SliceSpliterator$OfRef", ::java::util::stream::StreamSpliterators$SliceSpliterator$OfRef),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfDouble", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$OfDouble),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfInt", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$OfInt),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfLong", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$OfLong),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$OfRef),
	$classEntry("java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$PermitStatus", ::java::util::stream::StreamSpliterators$UnorderedSliceSpliterator$PermitStatus),
	$classEntry("java.util.stream.StreamSpliterators$WrappingSpliterator", ::java::util::stream::StreamSpliterators$WrappingSpliterator),
	$classEntry("java.util.stream.StreamSupport", ::java::util::stream::StreamSupport),
	$classEntry("java.util.stream.Streams", ::java::util::stream::Streams),
	$classEntry("java.util.stream.Streams$1", ::java::util::stream::Streams$1),
	$classEntry("java.util.stream.Streams$2", ::java::util::stream::Streams$2),
	$classEntry("java.util.stream.Streams$AbstractStreamBuilderImpl", ::java::util::stream::Streams$AbstractStreamBuilderImpl),
	$classEntry("java.util.stream.Streams$ConcatSpliterator", ::java::util::stream::Streams$ConcatSpliterator),
	$classEntry("java.util.stream.Streams$ConcatSpliterator$OfDouble", ::java::util::stream::Streams$ConcatSpliterator$OfDouble),
	$classEntry("java.util.stream.Streams$ConcatSpliterator$OfInt", ::java::util::stream::Streams$ConcatSpliterator$OfInt),
	$classEntry("java.util.stream.Streams$ConcatSpliterator$OfLong", ::java::util::stream::Streams$ConcatSpliterator$OfLong),
	$classEntry("java.util.stream.Streams$ConcatSpliterator$OfPrimitive", ::java::util::stream::Streams$ConcatSpliterator$OfPrimitive),
	$classEntry("java.util.stream.Streams$ConcatSpliterator$OfRef", ::java::util::stream::Streams$ConcatSpliterator$OfRef),
	$classEntry("java.util.stream.Streams$DoubleStreamBuilderImpl", ::java::util::stream::Streams$DoubleStreamBuilderImpl),
	$classEntry("java.util.stream.Streams$IntStreamBuilderImpl", ::java::util::stream::Streams$IntStreamBuilderImpl),
	$classEntry("java.util.stream.Streams$LongStreamBuilderImpl", ::java::util::stream::Streams$LongStreamBuilderImpl),
	$classEntry("java.util.stream.Streams$RangeIntSpliterator", ::java::util::stream::Streams$RangeIntSpliterator),
	$classEntry("java.util.stream.Streams$RangeLongSpliterator", ::java::util::stream::Streams$RangeLongSpliterator),
	$classEntry("java.util.stream.Streams$StreamBuilderImpl", ::java::util::stream::Streams$StreamBuilderImpl),
	$classEntry("java.util.stream.TerminalOp", ::java::util::stream::TerminalOp),
	$classEntry("java.util.stream.TerminalSink", ::java::util::stream::TerminalSink),
	$classEntry("java.util.stream.Tripwire", ::java::util::stream::Tripwire),
	$classEntry("java.util.stream.WhileOps", ::java::util::stream::WhileOps),
	$classEntry("java.util.stream.WhileOps$1", ::java::util::stream::WhileOps$1),
	$classEntry("java.util.stream.WhileOps$1$1", ::java::util::stream::WhileOps$1$1),
	$classEntry("java.util.stream.WhileOps$1Op", ::java::util::stream::WhileOps$1Op),
	$classEntry("java.util.stream.WhileOps$1Op$1OpSink", ::java::util::stream::WhileOps$1Op$1OpSink),
	$classEntry("java.util.stream.WhileOps$2", ::java::util::stream::WhileOps$2),
	$classEntry("java.util.stream.WhileOps$2$1", ::java::util::stream::WhileOps$2$1),
	$classEntry("java.util.stream.WhileOps$2Op", ::java::util::stream::WhileOps$2Op),
	$classEntry("java.util.stream.WhileOps$2Op$1OpSink", ::java::util::stream::WhileOps$2Op$1OpSink),
	$classEntry("java.util.stream.WhileOps$3", ::java::util::stream::WhileOps$3),
	$classEntry("java.util.stream.WhileOps$3$1", ::java::util::stream::WhileOps$3$1),
	$classEntry("java.util.stream.WhileOps$3Op", ::java::util::stream::WhileOps$3Op),
	$classEntry("java.util.stream.WhileOps$3Op$1OpSink", ::java::util::stream::WhileOps$3Op$1OpSink),
	$classEntry("java.util.stream.WhileOps$4", ::java::util::stream::WhileOps$4),
	$classEntry("java.util.stream.WhileOps$4$1", ::java::util::stream::WhileOps$4$1),
	$classEntry("java.util.stream.WhileOps$4Op", ::java::util::stream::WhileOps$4Op),
	$classEntry("java.util.stream.WhileOps$4Op$1OpSink", ::java::util::stream::WhileOps$4Op$1OpSink),
	$classEntry("java.util.stream.WhileOps$DropWhileOp", ::java::util::stream::WhileOps$DropWhileOp),
	$classEntry("java.util.stream.WhileOps$DropWhileSink", ::java::util::stream::WhileOps$DropWhileSink),
	$classEntry("java.util.stream.WhileOps$DropWhileTask", ::java::util::stream::WhileOps$DropWhileTask),
	$classEntry("java.util.stream.WhileOps$TakeWhileTask", ::java::util::stream::WhileOps$TakeWhileTask),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator", ::java::util::stream::WhileOps$UnorderedWhileSpliterator),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfDouble", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfDouble),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfDouble$Taking", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfDouble$Taking),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfInt", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfInt),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfInt$Dropping", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfInt$Dropping),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfInt$Taking", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfInt$Taking),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfLong", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfLong),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfLong$Dropping", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfLong$Dropping),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfLong$Taking", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfLong$Taking),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfRef),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfRef$Dropping),
	$classEntry("java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Taking", ::java::util::stream::WhileOps$UnorderedWhileSpliterator$OfRef$Taking),
	$classEntry("java.util.zip.Adler32", ::java::util::zip::Adler32),
	$classEntry("java.util.zip.CRC32", ::java::util::zip::CRC32),
	$classEntry("java.util.zip.CRC32C", ::java::util::zip::CRC32C),
	$classEntry("java.util.zip.CheckedInputStream", ::java::util::zip::CheckedInputStream),
	$classEntry("java.util.zip.CheckedOutputStream", ::java::util::zip::CheckedOutputStream),
	$classEntry("java.util.zip.Checksum", ::java::util::zip::Checksum),
	$classEntry("java.util.zip.Checksum$1", ::java::util::zip::Checksum$1),
	$classEntry("java.util.zip.DataFormatException", ::java::util::zip::DataFormatException),
	$classEntry("java.util.zip.Deflater", ::java::util::zip::Deflater),
	$classEntry("java.util.zip.Deflater$DeflaterZStreamRef", ::java::util::zip::Deflater$DeflaterZStreamRef),
	$classEntry("java.util.zip.DeflaterInputStream", ::java::util::zip::DeflaterInputStream),
	$classEntry("java.util.zip.DeflaterOutputStream", ::java::util::zip::DeflaterOutputStream),
	$classEntry("java.util.zip.GZIPInputStream", ::java::util::zip::GZIPInputStream),
	$classEntry("java.util.zip.GZIPInputStream$1", ::java::util::zip::GZIPInputStream$1),
	$classEntry("java.util.zip.GZIPOutputStream", ::java::util::zip::GZIPOutputStream),
	$classEntry("java.util.zip.Inflater", ::java::util::zip::Inflater),
	$classEntry("java.util.zip.Inflater$InflaterZStreamRef", ::java::util::zip::Inflater$InflaterZStreamRef),
	$classEntry("java.util.zip.InflaterInputStream", ::java::util::zip::InflaterInputStream),
	$classEntry("java.util.zip.InflaterOutputStream", ::java::util::zip::InflaterOutputStream),
	$classEntry("java.util.zip.ZipCoder", ::java::util::zip::ZipCoder),
	$classEntry("java.util.zip.ZipCoder$UTF8ZipCoder", ::java::util::zip::ZipCoder$UTF8ZipCoder),
	$classEntry("java.util.zip.ZipConstants", ::java::util::zip::ZipConstants),
	$classEntry("java.util.zip.ZipConstants64", ::java::util::zip::ZipConstants64),
	$classEntry("java.util.zip.ZipEntry", ::java::util::zip::ZipEntry),
	$classEntry("java.util.zip.ZipError", ::java::util::zip::ZipError),
	$classEntry("java.util.zip.ZipException", ::java::util::zip::ZipException),
	$classEntry("java.util.zip.ZipFile", ::java::util::zip::ZipFile),
	$classEntry("java.util.zip.ZipFile$1", ::java::util::zip::ZipFile$1),
	$classEntry("java.util.zip.ZipFile$CleanableResource", ::java::util::zip::ZipFile$CleanableResource),
	$classEntry("java.util.zip.ZipFile$EntrySpliterator", ::java::util::zip::ZipFile$EntrySpliterator),
	$classEntry("java.util.zip.ZipFile$InflaterCleanupAction", ::java::util::zip::ZipFile$InflaterCleanupAction),
	$classEntry("java.util.zip.ZipFile$Source", ::java::util::zip::ZipFile$Source),
	$classEntry("java.util.zip.ZipFile$Source$End", ::java::util::zip::ZipFile$Source$End),
	$classEntry("java.util.zip.ZipFile$Source$Key", ::java::util::zip::ZipFile$Source$Key),
	$classEntry("java.util.zip.ZipFile$ZipEntryIterator", ::java::util::zip::ZipFile$ZipEntryIterator),
	$classEntry("java.util.zip.ZipFile$ZipFileInflaterInputStream", ::java::util::zip::ZipFile$ZipFileInflaterInputStream),
	$classEntry("java.util.zip.ZipFile$ZipFileInputStream", ::java::util::zip::ZipFile$ZipFileInputStream),
	$classEntry("java.util.zip.ZipInputStream", ::java::util::zip::ZipInputStream),
	$classEntry("java.util.zip.ZipOutputStream", ::java::util::zip::ZipOutputStream),
	$classEntry("java.util.zip.ZipOutputStream$XEntry", ::java::util::zip::ZipOutputStream$XEntry),
	$classEntry("java.util.zip.ZipUtils", ::java::util::zip::ZipUtils),
	$classEntry("javax.crypto.AEADBadTagException", ::javax::crypto::AEADBadTagException),
	$classEntry("javax.crypto.BadPaddingException", ::javax::crypto::BadPaddingException),
	$classEntry("javax.crypto.Cipher", ::javax::crypto::Cipher),
	$classEntry("javax.crypto.Cipher$Transform", ::javax::crypto::Cipher$Transform),
	$classEntry("javax.crypto.CipherInputStream", ::javax::crypto::CipherInputStream),
	$classEntry("javax.crypto.CipherOutputStream", ::javax::crypto::CipherOutputStream),
	$classEntry("javax.crypto.CipherSpi", ::javax::crypto::CipherSpi),
	$classEntry("javax.crypto.CryptoAllPermission", ::javax::crypto::CryptoAllPermission),
	$classEntry("javax.crypto.CryptoAllPermissionCollection", ::javax::crypto::CryptoAllPermissionCollection),
	$classEntry("javax.crypto.CryptoPermission", ::javax::crypto::CryptoPermission),
	$classEntry("javax.crypto.CryptoPermissionCollection", ::javax::crypto::CryptoPermissionCollection),
	$classEntry("javax.crypto.CryptoPermissions", ::javax::crypto::CryptoPermissions),
	$classEntry("javax.crypto.CryptoPolicyParser", ::javax::crypto::CryptoPolicyParser),
	$classEntry("javax.crypto.CryptoPolicyParser$CryptoPermissionEntry", ::javax::crypto::CryptoPolicyParser$CryptoPermissionEntry),
	$classEntry("javax.crypto.CryptoPolicyParser$GrantEntry", ::javax::crypto::CryptoPolicyParser$GrantEntry),
	$classEntry("javax.crypto.CryptoPolicyParser$ParsingException", ::javax::crypto::CryptoPolicyParser$ParsingException),
	$classEntry("javax.crypto.EncryptedPrivateKeyInfo", ::javax::crypto::EncryptedPrivateKeyInfo),
	$classEntry("javax.crypto.ExemptionMechanism", ::javax::crypto::ExemptionMechanism),
	$classEntry("javax.crypto.ExemptionMechanismException", ::javax::crypto::ExemptionMechanismException),
	$classEntry("javax.crypto.ExemptionMechanismSpi", ::javax::crypto::ExemptionMechanismSpi),
	$classEntry("javax.crypto.IllegalBlockSizeException", ::javax::crypto::IllegalBlockSizeException),
	$classEntry("javax.crypto.JceSecurity", ::javax::crypto::JceSecurity),
	$classEntry("javax.crypto.JceSecurity$1", ::javax::crypto::JceSecurity$1),
	$classEntry("javax.crypto.JceSecurity$2", ::javax::crypto::JceSecurity$2),
	$classEntry("javax.crypto.JceSecurity$IdentityWrapper", ::javax::crypto::JceSecurity$IdentityWrapper),
	$classEntry("javax.crypto.JceSecurityManager", ::javax::crypto::JceSecurityManager),
	$classEntry("javax.crypto.JceSecurityManager$1", ::javax::crypto::JceSecurityManager$1),
	$classEntry("javax.crypto.KeyAgreement", ::javax::crypto::KeyAgreement),
	$classEntry("javax.crypto.KeyAgreementSpi", ::javax::crypto::KeyAgreementSpi),
	$classEntry("javax.crypto.KeyGenerator", ::javax::crypto::KeyGenerator),
	$classEntry("javax.crypto.KeyGeneratorSpi", ::javax::crypto::KeyGeneratorSpi),
	$classEntry("javax.crypto.Mac", ::javax::crypto::Mac),
	$classEntry("javax.crypto.MacSpi", ::javax::crypto::MacSpi),
	$classEntry("javax.crypto.NoSuchPaddingException", ::javax::crypto::NoSuchPaddingException),
	$classEntry("javax.crypto.NullCipher", ::javax::crypto::NullCipher),
	$classEntry("javax.crypto.NullCipherSpi", ::javax::crypto::NullCipherSpi),
	$classEntry("javax.crypto.PermissionsEnumerator", ::javax::crypto::PermissionsEnumerator),
	$classEntry("javax.crypto.ProviderVerifier", ::javax::crypto::ProviderVerifier),
	$classEntry("javax.crypto.ProviderVerifier$1", ::javax::crypto::ProviderVerifier$1),
	$classEntry("javax.crypto.SealedObject", ::javax::crypto::SealedObject),
	$classEntry("javax.crypto.SecretKey", ::javax::crypto::SecretKey),
	$classEntry("javax.crypto.SecretKeyFactory", ::javax::crypto::SecretKeyFactory),
	$classEntry("javax.crypto.SecretKeyFactorySpi", ::javax::crypto::SecretKeyFactorySpi),
	$classEntry("javax.crypto.ShortBufferException", ::javax::crypto::ShortBufferException),
	$classEntry("javax.crypto.extObjectInputStream", ::javax::crypto::extObjectInputStream),
	$classEntry("javax.crypto.interfaces.DHKey", ::javax::crypto::interfaces::DHKey),
	$classEntry("javax.crypto.interfaces.DHPrivateKey", ::javax::crypto::interfaces::DHPrivateKey),
	$classEntry("javax.crypto.interfaces.DHPublicKey", ::javax::crypto::interfaces::DHPublicKey),
	$classEntry("javax.crypto.interfaces.PBEKey", ::javax::crypto::interfaces::PBEKey),
	$classEntry("javax.crypto.spec.ChaCha20ParameterSpec", ::javax::crypto::spec::ChaCha20ParameterSpec),
	$classEntry("javax.crypto.spec.DESKeySpec", ::javax::crypto::spec::DESKeySpec),
	$classEntry("javax.crypto.spec.DESedeKeySpec", ::javax::crypto::spec::DESedeKeySpec),
	$classEntry("javax.crypto.spec.DHGenParameterSpec", ::javax::crypto::spec::DHGenParameterSpec),
	$classEntry("javax.crypto.spec.DHParameterSpec", ::javax::crypto::spec::DHParameterSpec),
	$classEntry("javax.crypto.spec.DHPrivateKeySpec", ::javax::crypto::spec::DHPrivateKeySpec),
	$classEntry("javax.crypto.spec.DHPublicKeySpec", ::javax::crypto::spec::DHPublicKeySpec),
	$classEntry("javax.crypto.spec.GCMParameterSpec", ::javax::crypto::spec::GCMParameterSpec),
	$classEntry("javax.crypto.spec.IvParameterSpec", ::javax::crypto::spec::IvParameterSpec),
	$classEntry("javax.crypto.spec.OAEPParameterSpec", ::javax::crypto::spec::OAEPParameterSpec),
	$classEntry("javax.crypto.spec.PBEKeySpec", ::javax::crypto::spec::PBEKeySpec),
	$classEntry("javax.crypto.spec.PBEParameterSpec", ::javax::crypto::spec::PBEParameterSpec),
	$classEntry("javax.crypto.spec.PSource", ::javax::crypto::spec::PSource),
	$classEntry("javax.crypto.spec.PSource$PSpecified", ::javax::crypto::spec::PSource$PSpecified),
	$classEntry("javax.crypto.spec.RC2ParameterSpec", ::javax::crypto::spec::RC2ParameterSpec),
	$classEntry("javax.crypto.spec.RC5ParameterSpec", ::javax::crypto::spec::RC5ParameterSpec),
	$classEntry("javax.crypto.spec.SecretKeySpec", ::javax::crypto::spec::SecretKeySpec),
	$classEntry("javax.crypto.spec.SecretKeySpec$1", ::javax::crypto::spec::SecretKeySpec$1),
	$classEntry("javax.net.DefaultServerSocketFactory", ::javax::net::DefaultServerSocketFactory),
	$classEntry("javax.net.DefaultSocketFactory", ::javax::net::DefaultSocketFactory),
	$classEntry("javax.net.ServerSocketFactory", ::javax::net::ServerSocketFactory),
	$classEntry("javax.net.SocketFactory", ::javax::net::SocketFactory),
	$classEntry("javax.net.ssl.CertPathTrustManagerParameters", ::javax::net::ssl::CertPathTrustManagerParameters),
	$classEntry("javax.net.ssl.DefaultSSLServerSocketFactory", ::javax::net::ssl::DefaultSSLServerSocketFactory),
	$classEntry("javax.net.ssl.DefaultSSLSocketFactory", ::javax::net::ssl::DefaultSSLSocketFactory),
	$classEntry("javax.net.ssl.ExtendedSSLSession", ::javax::net::ssl::ExtendedSSLSession),
	$classEntry("javax.net.ssl.HandshakeCompletedEvent", ::javax::net::ssl::HandshakeCompletedEvent),
	$classEntry("javax.net.ssl.HandshakeCompletedListener", ::javax::net::ssl::HandshakeCompletedListener),
	$classEntry("javax.net.ssl.HostnameVerifier", ::javax::net::ssl::HostnameVerifier),
	$classEntry("javax.net.ssl.HttpsURLConnection", ::javax::net::ssl::HttpsURLConnection),
	$classEntry("javax.net.ssl.HttpsURLConnection$DefaultHostnameVerifier", ::javax::net::ssl::HttpsURLConnection$DefaultHostnameVerifier),
	$classEntry("javax.net.ssl.KeyManager", ::javax::net::ssl::KeyManager),
	$classEntry("javax.net.ssl.KeyManagerFactory", ::javax::net::ssl::KeyManagerFactory),
	$classEntry("javax.net.ssl.KeyManagerFactory$1", ::javax::net::ssl::KeyManagerFactory$1),
	$classEntry("javax.net.ssl.KeyManagerFactorySpi", ::javax::net::ssl::KeyManagerFactorySpi),
	$classEntry("javax.net.ssl.KeyStoreBuilderParameters", ::javax::net::ssl::KeyStoreBuilderParameters),
	$classEntry("javax.net.ssl.ManagerFactoryParameters", ::javax::net::ssl::ManagerFactoryParameters),
	$classEntry("javax.net.ssl.SNIHostName", ::javax::net::ssl::SNIHostName),
	$classEntry("javax.net.ssl.SNIHostName$SNIHostNameMatcher", ::javax::net::ssl::SNIHostName$SNIHostNameMatcher),
	$classEntry("javax.net.ssl.SNIMatcher", ::javax::net::ssl::SNIMatcher),
	$classEntry("javax.net.ssl.SNIServerName", ::javax::net::ssl::SNIServerName),
	$classEntry("javax.net.ssl.SSLContext", ::javax::net::ssl::SSLContext),
	$classEntry("javax.net.ssl.SSLContextSpi", ::javax::net::ssl::SSLContextSpi),
	$classEntry("javax.net.ssl.SSLEngine", ::javax::net::ssl::SSLEngine),
	$classEntry("javax.net.ssl.SSLEngineResult", ::javax::net::ssl::SSLEngineResult),
	$classEntry("javax.net.ssl.SSLEngineResult$HandshakeStatus", ::javax::net::ssl::SSLEngineResult$HandshakeStatus),
	$classEntry("javax.net.ssl.SSLEngineResult$Status", ::javax::net::ssl::SSLEngineResult$Status),
	$classEntry("javax.net.ssl.SSLException", ::javax::net::ssl::SSLException),
	$classEntry("javax.net.ssl.SSLHandshakeException", ::javax::net::ssl::SSLHandshakeException),
	$classEntry("javax.net.ssl.SSLKeyException", ::javax::net::ssl::SSLKeyException),
	$classEntry("javax.net.ssl.SSLParameters", ::javax::net::ssl::SSLParameters),
	$classEntry("javax.net.ssl.SSLPeerUnverifiedException", ::javax::net::ssl::SSLPeerUnverifiedException),
	$classEntry("javax.net.ssl.SSLPermission", ::javax::net::ssl::SSLPermission),
	$classEntry("javax.net.ssl.SSLProtocolException", ::javax::net::ssl::SSLProtocolException),
	$classEntry("javax.net.ssl.SSLServerSocket", ::javax::net::ssl::SSLServerSocket),
	$classEntry("javax.net.ssl.SSLServerSocketFactory", ::javax::net::ssl::SSLServerSocketFactory),
	$classEntry("javax.net.ssl.SSLServerSocketFactory$DefaultFactoryHolder", ::javax::net::ssl::SSLServerSocketFactory$DefaultFactoryHolder),
	$classEntry("javax.net.ssl.SSLSession", ::javax::net::ssl::SSLSession),
	$classEntry("javax.net.ssl.SSLSessionBindingEvent", ::javax::net::ssl::SSLSessionBindingEvent),
	$classEntry("javax.net.ssl.SSLSessionBindingListener", ::javax::net::ssl::SSLSessionBindingListener),
	$classEntry("javax.net.ssl.SSLSessionContext", ::javax::net::ssl::SSLSessionContext),
	$classEntry("javax.net.ssl.SSLSocket", ::javax::net::ssl::SSLSocket),
	$classEntry("javax.net.ssl.SSLSocketFactory", ::javax::net::ssl::SSLSocketFactory),
	$classEntry("javax.net.ssl.SSLSocketFactory$1", ::javax::net::ssl::SSLSocketFactory$1),
	$classEntry("javax.net.ssl.SSLSocketFactory$DefaultFactoryHolder", ::javax::net::ssl::SSLSocketFactory$DefaultFactoryHolder),
	$classEntry("javax.net.ssl.StandardConstants", ::javax::net::ssl::StandardConstants),
	$classEntry("javax.net.ssl.TrustManager", ::javax::net::ssl::TrustManager),
	$classEntry("javax.net.ssl.TrustManagerFactory", ::javax::net::ssl::TrustManagerFactory),
	$classEntry("javax.net.ssl.TrustManagerFactory$1", ::javax::net::ssl::TrustManagerFactory$1),
	$classEntry("javax.net.ssl.TrustManagerFactorySpi", ::javax::net::ssl::TrustManagerFactorySpi),
	$classEntry("javax.net.ssl.X509ExtendedKeyManager", ::javax::net::ssl::X509ExtendedKeyManager),
	$classEntry("javax.net.ssl.X509ExtendedTrustManager", ::javax::net::ssl::X509ExtendedTrustManager),
	$classEntry("javax.net.ssl.X509KeyManager", ::javax::net::ssl::X509KeyManager),
	$classEntry("javax.net.ssl.X509TrustManager", ::javax::net::ssl::X509TrustManager),
	$classEntry("javax.security.auth.AuthPermission", ::javax::security::auth::AuthPermission),
	$classEntry("javax.security.auth.DestroyFailedException", ::javax::security::auth::DestroyFailedException),
	$classEntry("javax.security.auth.Destroyable", ::javax::security::auth::Destroyable),
	$classEntry("javax.security.auth.PrivateCredentialPermission", ::javax::security::auth::PrivateCredentialPermission),
	$classEntry("javax.security.auth.PrivateCredentialPermission$CredOwner", ::javax::security::auth::PrivateCredentialPermission$CredOwner),
	$classEntry("javax.security.auth.RefreshFailedException", ::javax::security::auth::RefreshFailedException),
	$classEntry("javax.security.auth.Refreshable", ::javax::security::auth::Refreshable),
	$classEntry("javax.security.auth.Subject", ::javax::security::auth::Subject),
	$classEntry("javax.security.auth.Subject$1", ::javax::security::auth::Subject$1),
	$classEntry("javax.security.auth.Subject$2", ::javax::security::auth::Subject$2),
	$classEntry("javax.security.auth.Subject$AuthPermissionHolder", ::javax::security::auth::Subject$AuthPermissionHolder),
	$classEntry("javax.security.auth.Subject$ClassSet", ::javax::security::auth::Subject$ClassSet),
	$classEntry("javax.security.auth.Subject$ClassSet$1", ::javax::security::auth::Subject$ClassSet$1),
	$classEntry("javax.security.auth.Subject$SecureSet", ::javax::security::auth::Subject$SecureSet),
	$classEntry("javax.security.auth.Subject$SecureSet$1", ::javax::security::auth::Subject$SecureSet$1),
	$classEntry("javax.security.auth.Subject$SecureSet$2", ::javax::security::auth::Subject$SecureSet$2),
	$classEntry("javax.security.auth.Subject$SecureSet$3", ::javax::security::auth::Subject$SecureSet$3),
	$classEntry("javax.security.auth.Subject$SecureSet$4", ::javax::security::auth::Subject$SecureSet$4),
	$classEntry("javax.security.auth.Subject$SecureSet$5", ::javax::security::auth::Subject$SecureSet$5),
	$classEntry("javax.security.auth.Subject$SecureSet$6", ::javax::security::auth::Subject$SecureSet$6),
	$classEntry("javax.security.auth.SubjectDomainCombiner", ::javax::security::auth::SubjectDomainCombiner),
	$classEntry("javax.security.auth.SubjectDomainCombiner$1", ::javax::security::auth::SubjectDomainCombiner$1),
	$classEntry("javax.security.auth.SubjectDomainCombiner$2", ::javax::security::auth::SubjectDomainCombiner$2),
	$classEntry("javax.security.auth.SubjectDomainCombiner$WeakKeyValueMap", ::javax::security::auth::SubjectDomainCombiner$WeakKeyValueMap),
	$classEntry("javax.security.auth.callback.Callback", ::javax::security::auth::callback::Callback),
	$classEntry("javax.security.auth.callback.CallbackHandler", ::javax::security::auth::callback::CallbackHandler),
	$classEntry("javax.security.auth.callback.ChoiceCallback", ::javax::security::auth::callback::ChoiceCallback),
	$classEntry("javax.security.auth.callback.ConfirmationCallback", ::javax::security::auth::callback::ConfirmationCallback),
	$classEntry("javax.security.auth.callback.LanguageCallback", ::javax::security::auth::callback::LanguageCallback),
	$classEntry("javax.security.auth.callback.NameCallback", ::javax::security::auth::callback::NameCallback),
	$classEntry("javax.security.auth.callback.PasswordCallback", ::javax::security::auth::callback::PasswordCallback),
	$classEntry("javax.security.auth.callback.TextInputCallback", ::javax::security::auth::callback::TextInputCallback),
	$classEntry("javax.security.auth.callback.TextOutputCallback", ::javax::security::auth::callback::TextOutputCallback),
	$classEntry("javax.security.auth.callback.UnsupportedCallbackException", ::javax::security::auth::callback::UnsupportedCallbackException),
	$classEntry("javax.security.auth.login.AccountException", ::javax::security::auth::login::AccountException),
	$classEntry("javax.security.auth.login.AccountExpiredException", ::javax::security::auth::login::AccountExpiredException),
	$classEntry("javax.security.auth.login.AccountLockedException", ::javax::security::auth::login::AccountLockedException),
	$classEntry("javax.security.auth.login.AccountNotFoundException", ::javax::security::auth::login::AccountNotFoundException),
	$classEntry("javax.security.auth.login.AppConfigurationEntry", ::javax::security::auth::login::AppConfigurationEntry),
	$classEntry("javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag", ::javax::security::auth::login::AppConfigurationEntry$LoginModuleControlFlag),
	$classEntry("javax.security.auth.login.Configuration", ::javax::security::auth::login::Configuration),
	$classEntry("javax.security.auth.login.Configuration$1", ::javax::security::auth::login::Configuration$1),
	$classEntry("javax.security.auth.login.Configuration$2", ::javax::security::auth::login::Configuration$2),
	$classEntry("javax.security.auth.login.Configuration$3", ::javax::security::auth::login::Configuration$3),
	$classEntry("javax.security.auth.login.Configuration$ConfigDelegate", ::javax::security::auth::login::Configuration$ConfigDelegate),
	$classEntry("javax.security.auth.login.Configuration$Parameters", ::javax::security::auth::login::Configuration$Parameters),
	$classEntry("javax.security.auth.login.ConfigurationSpi", ::javax::security::auth::login::ConfigurationSpi),
	$classEntry("javax.security.auth.login.CredentialException", ::javax::security::auth::login::CredentialException),
	$classEntry("javax.security.auth.login.CredentialExpiredException", ::javax::security::auth::login::CredentialExpiredException),
	$classEntry("javax.security.auth.login.CredentialNotFoundException", ::javax::security::auth::login::CredentialNotFoundException),
	$classEntry("javax.security.auth.login.FailedLoginException", ::javax::security::auth::login::FailedLoginException),
	$classEntry("javax.security.auth.login.LoginContext", ::javax::security::auth::login::LoginContext),
	$classEntry("javax.security.auth.login.LoginContext$1", ::javax::security::auth::login::LoginContext$1),
	$classEntry("javax.security.auth.login.LoginContext$2", ::javax::security::auth::login::LoginContext$2),
	$classEntry("javax.security.auth.login.LoginContext$3", ::javax::security::auth::login::LoginContext$3),
	$classEntry("javax.security.auth.login.LoginContext$4", ::javax::security::auth::login::LoginContext$4),
	$classEntry("javax.security.auth.login.LoginContext$ModuleInfo", ::javax::security::auth::login::LoginContext$ModuleInfo),
	$classEntry("javax.security.auth.login.LoginContext$SecureCallbackHandler", ::javax::security::auth::login::LoginContext$SecureCallbackHandler),
	$classEntry("javax.security.auth.login.LoginContext$SecureCallbackHandler$1", ::javax::security::auth::login::LoginContext$SecureCallbackHandler$1),
	$classEntry("javax.security.auth.login.LoginException", ::javax::security::auth::login::LoginException),
	$classEntry("javax.security.auth.spi.LoginModule", ::javax::security::auth::spi::LoginModule),
	$classEntry("javax.security.auth.x500.X500Principal", ::javax::security::auth::x500::X500Principal),
	$classEntry("javax.security.auth.x500.X500PrivateCredential", ::javax::security::auth::x500::X500PrivateCredential),
	$classEntry("javax.security.cert.Certificate", ::javax::security::cert::Certificate),
	$classEntry("javax.security.cert.CertificateEncodingException", ::javax::security::cert::CertificateEncodingException),
	$classEntry("javax.security.cert.CertificateException", ::javax::security::cert::CertificateException),
	$classEntry("javax.security.cert.CertificateExpiredException", ::javax::security::cert::CertificateExpiredException),
	$classEntry("javax.security.cert.CertificateNotYetValidException", ::javax::security::cert::CertificateNotYetValidException),
	$classEntry("javax.security.cert.CertificateParsingException", ::javax::security::cert::CertificateParsingException),
	$classEntry("javax.security.cert.X509Certificate", ::javax::security::cert::X509Certificate),
	$classEntry("javax.security.cert.X509Certificate$1", ::javax::security::cert::X509Certificate$1),
	$classEntry("jdk.internal.ValueBased", ::jdk::internal::ValueBased),
	$classEntry("jdk.internal.access.JavaAWTAccess", ::jdk::internal::access::JavaAWTAccess),
	$classEntry("jdk.internal.access.JavaAWTFontAccess", ::jdk::internal::access::JavaAWTFontAccess),
	$classEntry("jdk.internal.access.JavaBeansAccess", ::jdk::internal::access::JavaBeansAccess),
	$classEntry("jdk.internal.access.JavaIOAccess", ::jdk::internal::access::JavaIOAccess),
	$classEntry("jdk.internal.access.JavaIOFileDescriptorAccess", ::jdk::internal::access::JavaIOFileDescriptorAccess),
	$classEntry("jdk.internal.access.JavaIOFilePermissionAccess", ::jdk::internal::access::JavaIOFilePermissionAccess),
	$classEntry("jdk.internal.access.JavaIORandomAccessFileAccess", ::jdk::internal::access::JavaIORandomAccessFileAccess),
	$classEntry("jdk.internal.access.JavaLangAccess", ::jdk::internal::access::JavaLangAccess),
	$classEntry("jdk.internal.access.JavaLangInvokeAccess", ::jdk::internal::access::JavaLangInvokeAccess),
	$classEntry("jdk.internal.access.JavaLangModuleAccess", ::jdk::internal::access::JavaLangModuleAccess),
	$classEntry("jdk.internal.access.JavaLangRefAccess", ::jdk::internal::access::JavaLangRefAccess),
	$classEntry("jdk.internal.access.JavaLangReflectAccess", ::jdk::internal::access::JavaLangReflectAccess),
	$classEntry("jdk.internal.access.JavaNetHttpCookieAccess", ::jdk::internal::access::JavaNetHttpCookieAccess),
	$classEntry("jdk.internal.access.JavaNetInetAddressAccess", ::jdk::internal::access::JavaNetInetAddressAccess),
	$classEntry("jdk.internal.access.JavaNetURLAccess", ::jdk::internal::access::JavaNetURLAccess),
	$classEntry("jdk.internal.access.JavaNetUriAccess", ::jdk::internal::access::JavaNetUriAccess),
	$classEntry("jdk.internal.access.JavaNioAccess", ::jdk::internal::access::JavaNioAccess),
	$classEntry("jdk.internal.access.JavaObjectInputFilterAccess", ::jdk::internal::access::JavaObjectInputFilterAccess),
	$classEntry("jdk.internal.access.JavaObjectInputStreamAccess", ::jdk::internal::access::JavaObjectInputStreamAccess),
	$classEntry("jdk.internal.access.JavaObjectInputStreamReadString", ::jdk::internal::access::JavaObjectInputStreamReadString),
	$classEntry("jdk.internal.access.JavaSecurityAccess", ::jdk::internal::access::JavaSecurityAccess),
	$classEntry("jdk.internal.access.JavaSecurityAccess$ProtectionDomainCache", ::jdk::internal::access::JavaSecurityAccess$ProtectionDomainCache),
	$classEntry("jdk.internal.access.JavaSecuritySignatureAccess", ::jdk::internal::access::JavaSecuritySignatureAccess),
	$classEntry("jdk.internal.access.JavaSecuritySpecAccess", ::jdk::internal::access::JavaSecuritySpecAccess),
	$classEntry("jdk.internal.access.JavaUtilCollectionAccess", ::jdk::internal::access::JavaUtilCollectionAccess),
	$classEntry("jdk.internal.access.JavaUtilJarAccess", ::jdk::internal::access::JavaUtilJarAccess),
	$classEntry("jdk.internal.access.JavaUtilResourceBundleAccess", ::jdk::internal::access::JavaUtilResourceBundleAccess),
	$classEntry("jdk.internal.access.JavaUtilZipFileAccess", ::jdk::internal::access::JavaUtilZipFileAccess),
	$classEntry("jdk.internal.access.JavaxCryptoSealedObjectAccess", ::jdk::internal::access::JavaxCryptoSealedObjectAccess),
	$classEntry("jdk.internal.access.JavaxCryptoSpecAccess", ::jdk::internal::access::JavaxCryptoSpecAccess),
	$classEntry("jdk.internal.access.SharedSecrets", ::jdk::internal::access::SharedSecrets),
	$classEntry("jdk.internal.access.foreign.MemoryAddressProxy", ::jdk::internal::access::foreign::MemoryAddressProxy),
	$classEntry("jdk.internal.access.foreign.MemorySegmentProxy", ::jdk::internal::access::foreign::MemorySegmentProxy),
	$classEntry("jdk.internal.access.foreign.NativeLibraryProxy", ::jdk::internal::access::foreign::NativeLibraryProxy),
	$classEntry("jdk.internal.access.foreign.UnmapperProxy", ::jdk::internal::access::foreign::UnmapperProxy),
	$classEntry("jdk.internal.event.DeserializationEvent", ::jdk::internal::event::DeserializationEvent),
	$classEntry("jdk.internal.event.Event", ::jdk::internal::event::Event),
	$classEntry("jdk.internal.event.EventHelper", ::jdk::internal::event::EventHelper),
	$classEntry("jdk.internal.event.ProcessStartEvent", ::jdk::internal::event::ProcessStartEvent),
	$classEntry("jdk.internal.event.SecurityPropertyModificationEvent", ::jdk::internal::event::SecurityPropertyModificationEvent),
	$classEntry("jdk.internal.event.TLSHandshakeEvent", ::jdk::internal::event::TLSHandshakeEvent),
	$classEntry("jdk.internal.event.X509CertificateEvent", ::jdk::internal::event::X509CertificateEvent),
	$classEntry("jdk.internal.event.X509ValidationEvent", ::jdk::internal::event::X509ValidationEvent),
	$classEntry("jdk.internal.icu.impl.BMPSet", ::jdk::internal::icu::impl::BMPSet),
	$classEntry("jdk.internal.icu.impl.CharTrie", ::jdk::internal::icu::impl::CharTrie),
	$classEntry("jdk.internal.icu.impl.CharacterIteratorWrapper", ::jdk::internal::icu::impl::CharacterIteratorWrapper),
	$classEntry("jdk.internal.icu.impl.ICUBinary", ::jdk::internal::icu::impl::ICUBinary),
	$classEntry("jdk.internal.icu.impl.ICUBinary$1", ::jdk::internal::icu::impl::ICUBinary$1),
	$classEntry("jdk.internal.icu.impl.ICUBinary$Authenticate", ::jdk::internal::icu::impl::ICUBinary$Authenticate),
	$classEntry("jdk.internal.icu.impl.ICUBinary$IsAcceptable", ::jdk::internal::icu::impl::ICUBinary$IsAcceptable),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes", ::jdk::internal::icu::impl::Norm2AllModes),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$ComposeNormalizer2", ::jdk::internal::icu::impl::Norm2AllModes$ComposeNormalizer2),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$DecomposeNormalizer2", ::jdk::internal::icu::impl::Norm2AllModes$DecomposeNormalizer2),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$NFCSingleton", ::jdk::internal::icu::impl::Norm2AllModes$NFCSingleton),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$NFKCSingleton", ::jdk::internal::icu::impl::Norm2AllModes$NFKCSingleton),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$NoopNormalizer2", ::jdk::internal::icu::impl::Norm2AllModes$NoopNormalizer2),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$Norm2AllModesSingleton", ::jdk::internal::icu::impl::Norm2AllModes$Norm2AllModesSingleton),
	$classEntry("jdk.internal.icu.impl.Norm2AllModes$Normalizer2WithImpl", ::jdk::internal::icu::impl::Norm2AllModes$Normalizer2WithImpl),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl", ::jdk::internal::icu::impl::NormalizerImpl),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$Hangul", ::jdk::internal::icu::impl::NormalizerImpl$Hangul),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$IsAcceptable", ::jdk::internal::icu::impl::NormalizerImpl$IsAcceptable),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$NextCCArgs", ::jdk::internal::icu::impl::NormalizerImpl$NextCCArgs),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$PrevArgs", ::jdk::internal::icu::impl::NormalizerImpl$PrevArgs),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$ReorderingBuffer", ::jdk::internal::icu::impl::NormalizerImpl$ReorderingBuffer),
	$classEntry("jdk.internal.icu.impl.NormalizerImpl$UTF16Plus", ::jdk::internal::icu::impl::NormalizerImpl$UTF16Plus),
	$classEntry("jdk.internal.icu.impl.Punycode", ::jdk::internal::icu::impl::Punycode),
	$classEntry("jdk.internal.icu.impl.ReplaceableUCharacterIterator", ::jdk::internal::icu::impl::ReplaceableUCharacterIterator),
	$classEntry("jdk.internal.icu.impl.StringPrepDataReader", ::jdk::internal::icu::impl::StringPrepDataReader),
	$classEntry("jdk.internal.icu.impl.Trie", ::jdk::internal::icu::impl::Trie),
	$classEntry("jdk.internal.icu.impl.Trie$DataManipulate", ::jdk::internal::icu::impl::Trie$DataManipulate),
	$classEntry("jdk.internal.icu.impl.Trie$DefaultGetFoldingOffset", ::jdk::internal::icu::impl::Trie$DefaultGetFoldingOffset),
	$classEntry("jdk.internal.icu.impl.Trie2", ::jdk::internal::icu::impl::Trie2),
	$classEntry("jdk.internal.icu.impl.Trie2$1", ::jdk::internal::icu::impl::Trie2$1),
	$classEntry("jdk.internal.icu.impl.Trie2$Range", ::jdk::internal::icu::impl::Trie2$Range),
	$classEntry("jdk.internal.icu.impl.Trie2$Trie2Iterator", ::jdk::internal::icu::impl::Trie2$Trie2Iterator),
	$classEntry("jdk.internal.icu.impl.Trie2$UTrie2Header", ::jdk::internal::icu::impl::Trie2$UTrie2Header),
	$classEntry("jdk.internal.icu.impl.Trie2$ValueMapper", ::jdk::internal::icu::impl::Trie2$ValueMapper),
	$classEntry("jdk.internal.icu.impl.Trie2_16", ::jdk::internal::icu::impl::Trie2_16),
	$classEntry("jdk.internal.icu.impl.UBiDiProps", ::jdk::internal::icu::impl::UBiDiProps),
	$classEntry("jdk.internal.icu.impl.UBiDiProps$IsAcceptable", ::jdk::internal::icu::impl::UBiDiProps$IsAcceptable),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty", ::jdk::internal::icu::impl::UCharacterProperty),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$1", ::jdk::internal::icu::impl::UCharacterProperty$1),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$BiDiIntProperty", ::jdk::internal::icu::impl::UCharacterProperty$BiDiIntProperty),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$CombiningClassIntProperty", ::jdk::internal::icu::impl::UCharacterProperty$CombiningClassIntProperty),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$IntProperty", ::jdk::internal::icu::impl::UCharacterProperty$IntProperty),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$IsAcceptable", ::jdk::internal::icu::impl::UCharacterProperty$IsAcceptable),
	$classEntry("jdk.internal.icu.impl.UCharacterProperty$NormQuickCheckIntProperty", ::jdk::internal::icu::impl::UCharacterProperty$NormQuickCheckIntProperty),
	$classEntry("jdk.internal.icu.impl.UnicodeSetStringSpan", ::jdk::internal::icu::impl::UnicodeSetStringSpan),
	$classEntry("jdk.internal.icu.impl.UnicodeSetStringSpan$OffsetList", ::jdk::internal::icu::impl::UnicodeSetStringSpan$OffsetList),
	$classEntry("jdk.internal.icu.impl.Utility", ::jdk::internal::icu::impl::Utility),
	$classEntry("jdk.internal.icu.lang.UCharacter", ::jdk::internal::icu::lang::UCharacter),
	$classEntry("jdk.internal.icu.lang.UCharacter$HangulSyllableType", ::jdk::internal::icu::lang::UCharacter$HangulSyllableType),
	$classEntry("jdk.internal.icu.lang.UCharacter$JoiningGroup", ::jdk::internal::icu::lang::UCharacter$JoiningGroup),
	$classEntry("jdk.internal.icu.lang.UCharacter$NumericType", ::jdk::internal::icu::lang::UCharacter$NumericType),
	$classEntry("jdk.internal.icu.lang.UCharacterDirection", ::jdk::internal::icu::lang::UCharacterDirection),
	$classEntry("jdk.internal.icu.lang.UCharacterEnums", ::jdk::internal::icu::lang::UCharacterEnums),
	$classEntry("jdk.internal.icu.lang.UCharacterEnums$ECharacterCategory", ::jdk::internal::icu::lang::UCharacterEnums$ECharacterCategory),
	$classEntry("jdk.internal.icu.lang.UCharacterEnums$ECharacterDirection", ::jdk::internal::icu::lang::UCharacterEnums$ECharacterDirection),
	$classEntry("jdk.internal.icu.text.BidiBase", ::jdk::internal::icu::text::BidiBase),
	$classEntry("jdk.internal.icu.text.BidiBase$BidiPairedBracketType", ::jdk::internal::icu::text::BidiBase$BidiPairedBracketType),
	$classEntry("jdk.internal.icu.text.BidiBase$BracketData", ::jdk::internal::icu::text::BidiBase$BracketData),
	$classEntry("jdk.internal.icu.text.BidiBase$ImpTabPair", ::jdk::internal::icu::text::BidiBase$ImpTabPair),
	$classEntry("jdk.internal.icu.text.BidiBase$InsertPoints", ::jdk::internal::icu::text::BidiBase$InsertPoints),
	$classEntry("jdk.internal.icu.text.BidiBase$IsoRun", ::jdk::internal::icu::text::BidiBase$IsoRun),
	$classEntry("jdk.internal.icu.text.BidiBase$Isolate", ::jdk::internal::icu::text::BidiBase$Isolate),
	$classEntry("jdk.internal.icu.text.BidiBase$LevState", ::jdk::internal::icu::text::BidiBase$LevState),
	$classEntry("jdk.internal.icu.text.BidiBase$NumericShapings", ::jdk::internal::icu::text::BidiBase$NumericShapings),
	$classEntry("jdk.internal.icu.text.BidiBase$Opening", ::jdk::internal::icu::text::BidiBase$Opening),
	$classEntry("jdk.internal.icu.text.BidiBase$Point", ::jdk::internal::icu::text::BidiBase$Point),
	$classEntry("jdk.internal.icu.text.BidiBase$TextAttributeConstants", ::jdk::internal::icu::text::BidiBase$TextAttributeConstants),
	$classEntry("jdk.internal.icu.text.BidiBase$TextAttributeConstants$1", ::jdk::internal::icu::text::BidiBase$TextAttributeConstants$1),
	$classEntry("jdk.internal.icu.text.BidiLine", ::jdk::internal::icu::text::BidiLine),
	$classEntry("jdk.internal.icu.text.BidiRun", ::jdk::internal::icu::text::BidiRun),
	$classEntry("jdk.internal.icu.text.BidiWriter", ::jdk::internal::icu::text::BidiWriter),
	$classEntry("jdk.internal.icu.text.FilteredNormalizer2", ::jdk::internal::icu::text::FilteredNormalizer2),
	$classEntry("jdk.internal.icu.text.Normalizer2", ::jdk::internal::icu::text::Normalizer2),
	$classEntry("jdk.internal.icu.text.NormalizerBase", ::jdk::internal::icu::text::NormalizerBase),
	$classEntry("jdk.internal.icu.text.NormalizerBase$1", ::jdk::internal::icu::text::NormalizerBase$1),
	$classEntry("jdk.internal.icu.text.NormalizerBase$Mode", ::jdk::internal::icu::text::NormalizerBase$Mode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$ModeImpl", ::jdk::internal::icu::text::NormalizerBase$ModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFC32ModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFC32ModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFCMode", ::jdk::internal::icu::text::NormalizerBase$NFCMode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFCModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFCModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFD32ModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFD32ModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFDMode", ::jdk::internal::icu::text::NormalizerBase$NFDMode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFDModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFDModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKC32ModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFKC32ModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKCMode", ::jdk::internal::icu::text::NormalizerBase$NFKCMode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKCModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFKCModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKD32ModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFKD32ModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKDMode", ::jdk::internal::icu::text::NormalizerBase$NFKDMode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NFKDModeImpl", ::jdk::internal::icu::text::NormalizerBase$NFKDModeImpl),
	$classEntry("jdk.internal.icu.text.NormalizerBase$NONEMode", ::jdk::internal::icu::text::NormalizerBase$NONEMode),
	$classEntry("jdk.internal.icu.text.NormalizerBase$Unicode32", ::jdk::internal::icu::text::NormalizerBase$Unicode32),
	$classEntry("jdk.internal.icu.text.Replaceable", ::jdk::internal::icu::text::Replaceable),
	$classEntry("jdk.internal.icu.text.ReplaceableString", ::jdk::internal::icu::text::ReplaceableString),
	$classEntry("jdk.internal.icu.text.StringPrep", ::jdk::internal::icu::text::StringPrep),
	$classEntry("jdk.internal.icu.text.StringPrep$StringPrepTrieImpl", ::jdk::internal::icu::text::StringPrep$StringPrepTrieImpl),
	$classEntry("jdk.internal.icu.text.StringPrep$Values", ::jdk::internal::icu::text::StringPrep$Values),
	$classEntry("jdk.internal.icu.text.UCharacterIterator", ::jdk::internal::icu::text::UCharacterIterator),
	$classEntry("jdk.internal.icu.text.UTF16", ::jdk::internal::icu::text::UTF16),
	$classEntry("jdk.internal.icu.text.UnicodeSet", ::jdk::internal::icu::text::UnicodeSet),
	$classEntry("jdk.internal.icu.text.UnicodeSet$Filter", ::jdk::internal::icu::text::UnicodeSet$Filter),
	$classEntry("jdk.internal.icu.text.UnicodeSet$SpanCondition", ::jdk::internal::icu::text::UnicodeSet$SpanCondition),
	$classEntry("jdk.internal.icu.text.UnicodeSet$VersionFilter", ::jdk::internal::icu::text::UnicodeSet$VersionFilter),
	$classEntry("jdk.internal.icu.util.CodePointMap", ::jdk::internal::icu::util::CodePointMap),
	$classEntry("jdk.internal.icu.util.CodePointMap$Range", ::jdk::internal::icu::util::CodePointMap$Range),
	$classEntry("jdk.internal.icu.util.CodePointMap$RangeIterator", ::jdk::internal::icu::util::CodePointMap$RangeIterator),
	$classEntry("jdk.internal.icu.util.CodePointMap$RangeOption", ::jdk::internal::icu::util::CodePointMap$RangeOption),
	$classEntry("jdk.internal.icu.util.CodePointMap$StringIterator", ::jdk::internal::icu::util::CodePointMap$StringIterator),
	$classEntry("jdk.internal.icu.util.CodePointMap$ValueFilter", ::jdk::internal::icu::util::CodePointMap$ValueFilter),
	$classEntry("jdk.internal.icu.util.CodePointTrie", ::jdk::internal::icu::util::CodePointTrie),
	$classEntry("jdk.internal.icu.util.CodePointTrie$1", ::jdk::internal::icu::util::CodePointTrie$1),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Data", ::jdk::internal::icu::util::CodePointTrie$Data),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Data16", ::jdk::internal::icu::util::CodePointTrie$Data16),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Data32", ::jdk::internal::icu::util::CodePointTrie$Data32),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Data8", ::jdk::internal::icu::util::CodePointTrie$Data8),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Fast", ::jdk::internal::icu::util::CodePointTrie$Fast),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Fast$FastStringIterator", ::jdk::internal::icu::util::CodePointTrie$Fast$FastStringIterator),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Fast16", ::jdk::internal::icu::util::CodePointTrie$Fast16),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Fast32", ::jdk::internal::icu::util::CodePointTrie$Fast32),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Fast8", ::jdk::internal::icu::util::CodePointTrie$Fast8),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Small", ::jdk::internal::icu::util::CodePointTrie$Small),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Small$SmallStringIterator", ::jdk::internal::icu::util::CodePointTrie$Small$SmallStringIterator),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Small16", ::jdk::internal::icu::util::CodePointTrie$Small16),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Small32", ::jdk::internal::icu::util::CodePointTrie$Small32),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Small8", ::jdk::internal::icu::util::CodePointTrie$Small8),
	$classEntry("jdk.internal.icu.util.CodePointTrie$Type", ::jdk::internal::icu::util::CodePointTrie$Type),
	$classEntry("jdk.internal.icu.util.CodePointTrie$ValueWidth", ::jdk::internal::icu::util::CodePointTrie$ValueWidth),
	$classEntry("jdk.internal.icu.util.OutputInt", ::jdk::internal::icu::util::OutputInt),
	$classEntry("jdk.internal.icu.util.VersionInfo", ::jdk::internal::icu::util::VersionInfo),
	$classEntry("jdk.internal.invoke.ABIDescriptorProxy", ::jdk::internal::invoke::ABIDescriptorProxy),
	$classEntry("jdk.internal.invoke.NativeEntryPoint", ::jdk::internal::invoke::NativeEntryPoint),
	$classEntry("jdk.internal.invoke.VMStorageProxy", ::jdk::internal::invoke::VMStorageProxy),
	$classEntry("jdk.internal.javac.NoPreview", ::jdk::internal::javac::NoPreview),
	$classEntry("jdk.internal.javac.PreviewFeature", ::jdk::internal::javac::PreviewFeature),
	$classEntry("jdk.internal.javac.PreviewFeature$Feature", ::jdk::internal::javac::PreviewFeature$Feature),
	$classEntry("jdk.internal.jimage.BasicImageReader", ::jdk::internal::jimage::BasicImageReader),
	$classEntry("jdk.internal.jimage.BasicImageReader$1", ::jdk::internal::jimage::BasicImageReader$1),
	$classEntry("jdk.internal.jimage.BasicImageReader$2", ::jdk::internal::jimage::BasicImageReader$2),
	$classEntry("jdk.internal.jimage.ImageBufferCache", ::jdk::internal::jimage::ImageBufferCache),
	$classEntry("jdk.internal.jimage.ImageBufferCache$1", ::jdk::internal::jimage::ImageBufferCache$1),
	$classEntry("jdk.internal.jimage.ImageBufferCache$2", ::jdk::internal::jimage::ImageBufferCache$2),
	$classEntry("jdk.internal.jimage.ImageHeader", ::jdk::internal::jimage::ImageHeader),
	$classEntry("jdk.internal.jimage.ImageLocation", ::jdk::internal::jimage::ImageLocation),
	$classEntry("jdk.internal.jimage.ImageReader", ::jdk::internal::jimage::ImageReader),
	$classEntry("jdk.internal.jimage.ImageReader$Directory", ::jdk::internal::jimage::ImageReader$Directory),
	$classEntry("jdk.internal.jimage.ImageReader$LinkNode", ::jdk::internal::jimage::ImageReader$LinkNode),
	$classEntry("jdk.internal.jimage.ImageReader$Node", ::jdk::internal::jimage::ImageReader$Node),
	$classEntry("jdk.internal.jimage.ImageReader$Resource", ::jdk::internal::jimage::ImageReader$Resource),
	$classEntry("jdk.internal.jimage.ImageReader$SharedImageReader", ::jdk::internal::jimage::ImageReader$SharedImageReader),
	$classEntry("jdk.internal.jimage.ImageReader$SharedImageReader$LocationVisitor", ::jdk::internal::jimage::ImageReader$SharedImageReader$LocationVisitor),
	$classEntry("jdk.internal.jimage.ImageReaderFactory", ::jdk::internal::jimage::ImageReaderFactory),
	$classEntry("jdk.internal.jimage.ImageReaderFactory$1", ::jdk::internal::jimage::ImageReaderFactory$1),
	$classEntry("jdk.internal.jimage.ImageStream", ::jdk::internal::jimage::ImageStream),
	$classEntry("jdk.internal.jimage.ImageStrings", ::jdk::internal::jimage::ImageStrings),
	$classEntry("jdk.internal.jimage.ImageStringsReader", ::jdk::internal::jimage::ImageStringsReader),
	$classEntry("jdk.internal.jimage.NativeImageBuffer", ::jdk::internal::jimage::NativeImageBuffer),
	$classEntry("jdk.internal.jimage.NativeImageBuffer$1", ::jdk::internal::jimage::NativeImageBuffer$1),
	$classEntry("jdk.internal.jimage.RuntimeFileAttributes", ::jdk::internal::jimage::RuntimeFileAttributes),
	$classEntry("jdk.internal.jimage.RuntimeImageLocation", ::jdk::internal::jimage::RuntimeImageLocation),
	$classEntry("jdk.internal.jimage.RuntimeImageReader", ::jdk::internal::jimage::RuntimeImageReader),
	$classEntry("jdk.internal.jimage.RuntimeImageReader$LocationVisitor", ::jdk::internal::jimage::RuntimeImageReader$LocationVisitor),
	$classEntry("jdk.internal.jimage.RuntimeImageReader$Resource", ::jdk::internal::jimage::RuntimeImageReader$Resource),
	$classEntry("jdk.internal.jimage.decompressor.CompressIndexes", ::jdk::internal::jimage::decompressor::CompressIndexes),
	$classEntry("jdk.internal.jimage.decompressor.CompressedResourceHeader", ::jdk::internal::jimage::decompressor::CompressedResourceHeader),
	$classEntry("jdk.internal.jimage.decompressor.Decompressor", ::jdk::internal::jimage::decompressor::Decompressor),
	$classEntry("jdk.internal.jimage.decompressor.ResourceDecompressor", ::jdk::internal::jimage::decompressor::ResourceDecompressor),
	$classEntry("jdk.internal.jimage.decompressor.ResourceDecompressor$StringsProvider", ::jdk::internal::jimage::decompressor::ResourceDecompressor$StringsProvider),
	$classEntry("jdk.internal.jimage.decompressor.ResourceDecompressorFactory", ::jdk::internal::jimage::decompressor::ResourceDecompressorFactory),
	$classEntry("jdk.internal.jimage.decompressor.ResourceDecompressorRepository", ::jdk::internal::jimage::decompressor::ResourceDecompressorRepository),
	$classEntry("jdk.internal.jimage.decompressor.SignatureParser", ::jdk::internal::jimage::decompressor::SignatureParser),
	$classEntry("jdk.internal.jimage.decompressor.SignatureParser$ParseResult", ::jdk::internal::jimage::decompressor::SignatureParser$ParseResult),
	$classEntry("jdk.internal.jimage.decompressor.StringSharingDecompressor", ::jdk::internal::jimage::decompressor::StringSharingDecompressor),
	$classEntry("jdk.internal.jimage.decompressor.StringSharingDecompressorFactory", ::jdk::internal::jimage::decompressor::StringSharingDecompressorFactory),
	$classEntry("jdk.internal.jimage.decompressor.ZipDecompressor", ::jdk::internal::jimage::decompressor::ZipDecompressor),
	$classEntry("jdk.internal.jimage.decompressor.ZipDecompressorFactory", ::jdk::internal::jimage::decompressor::ZipDecompressorFactory),
	$classEntry("jdk.internal.jmod.JmodFile", ::jdk::internal::jmod::JmodFile),
	$classEntry("jdk.internal.jmod.JmodFile$Entry", ::jdk::internal::jmod::JmodFile$Entry),
	$classEntry("jdk.internal.jmod.JmodFile$Section", ::jdk::internal::jmod::JmodFile$Section),
	$classEntry("jdk.internal.jrtfs.ExplodedImage", ::jdk::internal::jrtfs::ExplodedImage),
	$classEntry("jdk.internal.jrtfs.ExplodedImage$PathNode", ::jdk::internal::jrtfs::ExplodedImage$PathNode),
	$classEntry("jdk.internal.jrtfs.JrtDirectoryStream", ::jdk::internal::jrtfs::JrtDirectoryStream),
	$classEntry("jdk.internal.jrtfs.JrtDirectoryStream$1", ::jdk::internal::jrtfs::JrtDirectoryStream$1),
	$classEntry("jdk.internal.jrtfs.JrtFileAttributeView", ::jdk::internal::jrtfs::JrtFileAttributeView),
	$classEntry("jdk.internal.jrtfs.JrtFileAttributeView$1", ::jdk::internal::jrtfs::JrtFileAttributeView$1),
	$classEntry("jdk.internal.jrtfs.JrtFileAttributeView$AttrID", ::jdk::internal::jrtfs::JrtFileAttributeView$AttrID),
	$classEntry("jdk.internal.jrtfs.JrtFileAttributes", ::jdk::internal::jrtfs::JrtFileAttributes),
	$classEntry("jdk.internal.jrtfs.JrtFileStore", ::jdk::internal::jrtfs::JrtFileStore),
	$classEntry("jdk.internal.jrtfs.JrtFileSystem", ::jdk::internal::jrtfs::JrtFileSystem),
	$classEntry("jdk.internal.jrtfs.JrtFileSystem$1", ::jdk::internal::jrtfs::JrtFileSystem$1),
	$classEntry("jdk.internal.jrtfs.JrtFileSystemProvider", ::jdk::internal::jrtfs::JrtFileSystemProvider),
	$classEntry("jdk.internal.jrtfs.JrtFileSystemProvider$1", ::jdk::internal::jrtfs::JrtFileSystemProvider$1),
	$classEntry("jdk.internal.jrtfs.JrtFileSystemProvider$JrtFsLoader", ::jdk::internal::jrtfs::JrtFileSystemProvider$JrtFsLoader),
	$classEntry("jdk.internal.jrtfs.JrtPath", ::jdk::internal::jrtfs::JrtPath),
	$classEntry("jdk.internal.jrtfs.JrtPath$1", ::jdk::internal::jrtfs::JrtPath$1),
	$classEntry("jdk.internal.jrtfs.JrtPath$2", ::jdk::internal::jrtfs::JrtPath$2),
	$classEntry("jdk.internal.jrtfs.JrtUtils", ::jdk::internal::jrtfs::JrtUtils),
	$classEntry("jdk.internal.jrtfs.RuntimeImage", ::jdk::internal::jrtfs::RuntimeImage),
	$classEntry("jdk.internal.jrtfs.SystemImage", ::jdk::internal::jrtfs::SystemImage),
	$classEntry("jdk.internal.jrtfs.SystemImage$1", ::jdk::internal::jrtfs::SystemImage$1),
	$classEntry("jdk.internal.jrtfs.SystemImage$2", ::jdk::internal::jrtfs::SystemImage$2),
	$classEntry("jdk.internal.loader.AbstractClassLoaderValue", ::jdk::internal::loader::AbstractClassLoaderValue),
	$classEntry("jdk.internal.loader.AbstractClassLoaderValue$Memoizer", ::jdk::internal::loader::AbstractClassLoaderValue$Memoizer),
	$classEntry("jdk.internal.loader.AbstractClassLoaderValue$Memoizer$RecursiveInvocationException", ::jdk::internal::loader::AbstractClassLoaderValue$Memoizer$RecursiveInvocationException),
	$classEntry("jdk.internal.loader.AbstractClassLoaderValue$Sub", ::jdk::internal::loader::AbstractClassLoaderValue$Sub),
	$classEntry("jdk.internal.loader.ArchivedClassLoaders", ::jdk::internal::loader::ArchivedClassLoaders),
	$classEntry("jdk.internal.loader.BootLoader", ::jdk::internal::loader::BootLoader),
	$classEntry("jdk.internal.loader.BootLoader$1", ::jdk::internal::loader::BootLoader$1),
	$classEntry("jdk.internal.loader.BootLoader$PackageHelper", ::jdk::internal::loader::BootLoader$PackageHelper),
	$classEntry("jdk.internal.loader.BootLoader$PackageHelper$1", ::jdk::internal::loader::BootLoader$PackageHelper$1),
	$classEntry("jdk.internal.loader.BootLoader$PackageHelper$2", ::jdk::internal::loader::BootLoader$PackageHelper$2),
	$classEntry("jdk.internal.loader.BuiltinClassLoader", ::jdk::internal::loader::BuiltinClassLoader),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$1", ::jdk::internal::loader::BuiltinClassLoader$1),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$2", ::jdk::internal::loader::BuiltinClassLoader$2),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$3", ::jdk::internal::loader::BuiltinClassLoader$3),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$4", ::jdk::internal::loader::BuiltinClassLoader$4),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$5", ::jdk::internal::loader::BuiltinClassLoader$5),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$LoadedModule", ::jdk::internal::loader::BuiltinClassLoader$LoadedModule),
	$classEntry("jdk.internal.loader.BuiltinClassLoader$NullModuleReader", ::jdk::internal::loader::BuiltinClassLoader$NullModuleReader),
	$classEntry("jdk.internal.loader.ClassLoaderHelper", ::jdk::internal::loader::ClassLoaderHelper),
	$classEntry("jdk.internal.loader.ClassLoaderValue", ::jdk::internal::loader::ClassLoaderValue),
	$classEntry("jdk.internal.loader.ClassLoaders", ::jdk::internal::loader::ClassLoaders),
	$classEntry("jdk.internal.loader.ClassLoaders$AppClassLoader", ::jdk::internal::loader::ClassLoaders$AppClassLoader),
	$classEntry("jdk.internal.loader.ClassLoaders$BootClassLoader", ::jdk::internal::loader::ClassLoaders$BootClassLoader),
	$classEntry("jdk.internal.loader.ClassLoaders$PlatformClassLoader", ::jdk::internal::loader::ClassLoaders$PlatformClassLoader),
	$classEntry("jdk.internal.loader.FileURLMapper", ::jdk::internal::loader::FileURLMapper),
	$classEntry("jdk.internal.loader.Loader", ::jdk::internal::loader::Loader),
	$classEntry("jdk.internal.loader.Loader$1", ::jdk::internal::loader::Loader$1),
	$classEntry("jdk.internal.loader.Loader$2", ::jdk::internal::loader::Loader$2),
	$classEntry("jdk.internal.loader.Loader$3", ::jdk::internal::loader::Loader$3),
	$classEntry("jdk.internal.loader.Loader$LoadedModule", ::jdk::internal::loader::Loader$LoadedModule),
	$classEntry("jdk.internal.loader.Loader$NullModuleReader", ::jdk::internal::loader::Loader$NullModuleReader),
	$classEntry("jdk.internal.loader.LoaderPool", ::jdk::internal::loader::LoaderPool),
	$classEntry("jdk.internal.loader.NativeLibraries", ::jdk::internal::loader::NativeLibraries),
	$classEntry("jdk.internal.loader.NativeLibraries$1", ::jdk::internal::loader::NativeLibraries$1),
	$classEntry("jdk.internal.loader.NativeLibraries$LibraryPaths", ::jdk::internal::loader::NativeLibraries$LibraryPaths),
	$classEntry("jdk.internal.loader.NativeLibraries$NativeLibraryImpl", ::jdk::internal::loader::NativeLibraries$NativeLibraryImpl),
	$classEntry("jdk.internal.loader.NativeLibraries$Unloader", ::jdk::internal::loader::NativeLibraries$Unloader),
	$classEntry("jdk.internal.loader.NativeLibrary", ::jdk::internal::loader::NativeLibrary),
	$classEntry("jdk.internal.loader.Resource", ::jdk::internal::loader::Resource),
	$classEntry("jdk.internal.loader.URLClassPath", ::jdk::internal::loader::URLClassPath),
	$classEntry("jdk.internal.loader.URLClassPath$1", ::jdk::internal::loader::URLClassPath$1),
	$classEntry("jdk.internal.loader.URLClassPath$2", ::jdk::internal::loader::URLClassPath$2),
	$classEntry("jdk.internal.loader.URLClassPath$3", ::jdk::internal::loader::URLClassPath$3),
	$classEntry("jdk.internal.loader.URLClassPath$FileLoader", ::jdk::internal::loader::URLClassPath$FileLoader),
	$classEntry("jdk.internal.loader.URLClassPath$FileLoader$1", ::jdk::internal::loader::URLClassPath$FileLoader$1),
	$classEntry("jdk.internal.loader.URLClassPath$JarLoader", ::jdk::internal::loader::URLClassPath$JarLoader),
	$classEntry("jdk.internal.loader.URLClassPath$JarLoader$1", ::jdk::internal::loader::URLClassPath$JarLoader$1),
	$classEntry("jdk.internal.loader.URLClassPath$JarLoader$2", ::jdk::internal::loader::URLClassPath$JarLoader$2),
	$classEntry("jdk.internal.loader.URLClassPath$JarLoader$3", ::jdk::internal::loader::URLClassPath$JarLoader$3),
	$classEntry("jdk.internal.loader.URLClassPath$Loader", ::jdk::internal::loader::URLClassPath$Loader),
	$classEntry("jdk.internal.loader.URLClassPath$Loader$1", ::jdk::internal::loader::URLClassPath$Loader$1),
	$classEntry("jdk.internal.logger.AbstractLoggerWrapper", ::jdk::internal::logger::AbstractLoggerWrapper),
	$classEntry("jdk.internal.logger.BootstrapLogger", ::jdk::internal::logger::BootstrapLogger),
	$classEntry("jdk.internal.logger.BootstrapLogger$BootstrapExecutors", ::jdk::internal::logger::BootstrapLogger$BootstrapExecutors),
	$classEntry("jdk.internal.logger.BootstrapLogger$BootstrapExecutors$1", ::jdk::internal::logger::BootstrapLogger$BootstrapExecutors$1),
	$classEntry("jdk.internal.logger.BootstrapLogger$BootstrapExecutors$BootstrapMessageLoggerTask", ::jdk::internal::logger::BootstrapLogger$BootstrapExecutors$BootstrapMessageLoggerTask),
	$classEntry("jdk.internal.logger.BootstrapLogger$DetectBackend", ::jdk::internal::logger::BootstrapLogger$DetectBackend),
	$classEntry("jdk.internal.logger.BootstrapLogger$DetectBackend$1", ::jdk::internal::logger::BootstrapLogger$DetectBackend$1),
	$classEntry("jdk.internal.logger.BootstrapLogger$LogEvent", ::jdk::internal::logger::BootstrapLogger$LogEvent),
	$classEntry("jdk.internal.logger.BootstrapLogger$LoggingBackend", ::jdk::internal::logger::BootstrapLogger$LoggingBackend),
	$classEntry("jdk.internal.logger.BootstrapLogger$RedirectedLoggers", ::jdk::internal::logger::BootstrapLogger$RedirectedLoggers),
	$classEntry("jdk.internal.logger.DefaultLoggerFinder", ::jdk::internal::logger::DefaultLoggerFinder),
	$classEntry("jdk.internal.logger.DefaultLoggerFinder$1", ::jdk::internal::logger::DefaultLoggerFinder$1),
	$classEntry("jdk.internal.logger.DefaultLoggerFinder$SharedLoggers", ::jdk::internal::logger::DefaultLoggerFinder$SharedLoggers),
	$classEntry("jdk.internal.logger.LazyLoggers", ::jdk::internal::logger::LazyLoggers),
	$classEntry("jdk.internal.logger.LazyLoggers$1", ::jdk::internal::logger::LazyLoggers$1),
	$classEntry("jdk.internal.logger.LazyLoggers$JdkLazyLogger", ::jdk::internal::logger::LazyLoggers$JdkLazyLogger),
	$classEntry("jdk.internal.logger.LazyLoggers$LazyLoggerAccessor", ::jdk::internal::logger::LazyLoggers$LazyLoggerAccessor),
	$classEntry("jdk.internal.logger.LazyLoggers$LazyLoggerFactories", ::jdk::internal::logger::LazyLoggers$LazyLoggerFactories),
	$classEntry("jdk.internal.logger.LazyLoggers$LazyLoggerWrapper", ::jdk::internal::logger::LazyLoggers$LazyLoggerWrapper),
	$classEntry("jdk.internal.logger.LazyLoggers$LoggerAccessor", ::jdk::internal::logger::LazyLoggers$LoggerAccessor),
	$classEntry("jdk.internal.logger.LocalizedLoggerWrapper", ::jdk::internal::logger::LocalizedLoggerWrapper),
	$classEntry("jdk.internal.logger.LoggerFinderLoader", ::jdk::internal::logger::LoggerFinderLoader),
	$classEntry("jdk.internal.logger.LoggerFinderLoader$ErrorPolicy", ::jdk::internal::logger::LoggerFinderLoader$ErrorPolicy),
	$classEntry("jdk.internal.logger.LoggerWrapper", ::jdk::internal::logger::LoggerWrapper),
	$classEntry("jdk.internal.logger.SimpleConsoleLogger", ::jdk::internal::logger::SimpleConsoleLogger),
	$classEntry("jdk.internal.logger.SimpleConsoleLogger$CallerFinder", ::jdk::internal::logger::SimpleConsoleLogger$CallerFinder),
	$classEntry("jdk.internal.logger.SimpleConsoleLogger$CallerFinder$1", ::jdk::internal::logger::SimpleConsoleLogger$CallerFinder$1),
	$classEntry("jdk.internal.logger.SimpleConsoleLogger$Formatting", ::jdk::internal::logger::SimpleConsoleLogger$Formatting),
	$classEntry("jdk.internal.logger.SurrogateLogger", ::jdk::internal::logger::SurrogateLogger),
	$classEntry("jdk.internal.math.DoubleConsts", ::jdk::internal::math::DoubleConsts),
	$classEntry("jdk.internal.math.FDBigInteger", ::jdk::internal::math::FDBigInteger),
	$classEntry("jdk.internal.math.FloatConsts", ::jdk::internal::math::FloatConsts),
	$classEntry("jdk.internal.math.FloatingDecimal", ::jdk::internal::math::FloatingDecimal),
	$classEntry("jdk.internal.math.FloatingDecimal$1", ::jdk::internal::math::FloatingDecimal$1),
	$classEntry("jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer", ::jdk::internal::math::FloatingDecimal$ASCIIToBinaryBuffer),
	$classEntry("jdk.internal.math.FloatingDecimal$ASCIIToBinaryConverter", ::jdk::internal::math::FloatingDecimal$ASCIIToBinaryConverter),
	$classEntry("jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer", ::jdk::internal::math::FloatingDecimal$BinaryToASCIIBuffer),
	$classEntry("jdk.internal.math.FloatingDecimal$BinaryToASCIIConverter", ::jdk::internal::math::FloatingDecimal$BinaryToASCIIConverter),
	$classEntry("jdk.internal.math.FloatingDecimal$ExceptionalBinaryToASCIIBuffer", ::jdk::internal::math::FloatingDecimal$ExceptionalBinaryToASCIIBuffer),
	$classEntry("jdk.internal.math.FloatingDecimal$HexFloatPattern", ::jdk::internal::math::FloatingDecimal$HexFloatPattern),
	$classEntry("jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer", ::jdk::internal::math::FloatingDecimal$PreparedASCIIToBinaryBuffer),
	$classEntry("jdk.internal.math.FormattedFloatingDecimal", ::jdk::internal::math::FormattedFloatingDecimal),
	$classEntry("jdk.internal.math.FormattedFloatingDecimal$1", ::jdk::internal::math::FormattedFloatingDecimal$1),
	$classEntry("jdk.internal.math.FormattedFloatingDecimal$2", ::jdk::internal::math::FormattedFloatingDecimal$2),
	$classEntry("jdk.internal.math.FormattedFloatingDecimal$Form", ::jdk::internal::math::FormattedFloatingDecimal$Form),
	$classEntry("jdk.internal.misc.CDS", ::jdk::internal::misc::CDS),
	$classEntry("jdk.internal.misc.ExtendedMapMode", ::jdk::internal::misc::ExtendedMapMode),
	$classEntry("jdk.internal.misc.FileSystemOption", ::jdk::internal::misc::FileSystemOption),
	$classEntry("jdk.internal.misc.InnocuousThread", ::jdk::internal::misc::InnocuousThread),
	$classEntry("jdk.internal.misc.InnocuousThread$1", ::jdk::internal::misc::InnocuousThread$1),
	$classEntry("jdk.internal.misc.InnocuousThread$2", ::jdk::internal::misc::InnocuousThread$2),
	$classEntry("jdk.internal.misc.InnocuousThread$3", ::jdk::internal::misc::InnocuousThread$3),
	$classEntry("jdk.internal.misc.OSEnvironment", ::jdk::internal::misc::OSEnvironment),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess", ::jdk::internal::misc::ScopedMemoryAccess),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess$BufferAccess", ::jdk::internal::misc::ScopedMemoryAccess$BufferAccess),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess$Scope", ::jdk::internal::misc::ScopedMemoryAccess$Scope),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess$Scope$Handle", ::jdk::internal::misc::ScopedMemoryAccess$Scope$Handle),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess$Scope$ScopedAccessError", ::jdk::internal::misc::ScopedMemoryAccess$Scope$ScopedAccessError),
	$classEntry("jdk.internal.misc.ScopedMemoryAccess$Scoped", ::jdk::internal::misc::ScopedMemoryAccess$Scoped),
	$classEntry("jdk.internal.misc.Signal", ::jdk::internal::misc::Signal),
	$classEntry("jdk.internal.misc.Signal$1", ::jdk::internal::misc::Signal$1),
	$classEntry("jdk.internal.misc.Signal$Handler", ::jdk::internal::misc::Signal$Handler),
	$classEntry("jdk.internal.misc.Signal$NativeHandler", ::jdk::internal::misc::Signal$NativeHandler),
	$classEntry("jdk.internal.misc.TerminatingThreadLocal", ::jdk::internal::misc::TerminatingThreadLocal),
	$classEntry("jdk.internal.misc.TerminatingThreadLocal$1", ::jdk::internal::misc::TerminatingThreadLocal$1),
	$classEntry("jdk.internal.misc.Unsafe", ::jdk::internal::misc::Unsafe),
	$classEntry("jdk.internal.misc.UnsafeConstants", ::jdk::internal::misc::UnsafeConstants),
	$classEntry("jdk.internal.misc.VM", ::jdk::internal::misc::VM),
	$classEntry("jdk.internal.misc.VM$BufferPool", ::jdk::internal::misc::VM$BufferPool),
	$classEntry("jdk.internal.misc.VM$BufferPoolsHolder", ::jdk::internal::misc::VM$BufferPoolsHolder),
	$classEntry("jdk.internal.module.ArchivedBootLayer", ::jdk::internal::module::ArchivedBootLayer),
	$classEntry("jdk.internal.module.ArchivedModuleGraph", ::jdk::internal::module::ArchivedModuleGraph),
	$classEntry("jdk.internal.module.Builder", ::jdk::internal::module::Builder),
	$classEntry("jdk.internal.module.Checks", ::jdk::internal::module::Checks),
	$classEntry("jdk.internal.module.ClassFileConstants", ::jdk::internal::module::ClassFileConstants),
	$classEntry("jdk.internal.module.DefaultRoots", ::jdk::internal::module::DefaultRoots),
	$classEntry("jdk.internal.module.ExplodedSystemModules", ::jdk::internal::module::ExplodedSystemModules),
	$classEntry("jdk.internal.module.ModuleBootstrap", ::jdk::internal::module::ModuleBootstrap),
	$classEntry("jdk.internal.module.ModuleBootstrap$1", ::jdk::internal::module::ModuleBootstrap$1),
	$classEntry("jdk.internal.module.ModuleBootstrap$Counters", ::jdk::internal::module::ModuleBootstrap$Counters),
	$classEntry("jdk.internal.module.ModuleBootstrap$SafeModuleFinder", ::jdk::internal::module::ModuleBootstrap$SafeModuleFinder),
	$classEntry("jdk.internal.module.ModuleHashes", ::jdk::internal::module::ModuleHashes),
	$classEntry("jdk.internal.module.ModuleHashes$Builder", ::jdk::internal::module::ModuleHashes$Builder),
	$classEntry("jdk.internal.module.ModuleHashes$HashSupplier", ::jdk::internal::module::ModuleHashes$HashSupplier),
	$classEntry("jdk.internal.module.ModuleHashesBuilder", ::jdk::internal::module::ModuleHashesBuilder),
	$classEntry("jdk.internal.module.ModuleHashesBuilder$Graph", ::jdk::internal::module::ModuleHashesBuilder$Graph),
	$classEntry("jdk.internal.module.ModuleHashesBuilder$Graph$Builder", ::jdk::internal::module::ModuleHashesBuilder$Graph$Builder),
	$classEntry("jdk.internal.module.ModuleHashesBuilder$TopoSorter", ::jdk::internal::module::ModuleHashesBuilder$TopoSorter),
	$classEntry("jdk.internal.module.ModuleInfo", ::jdk::internal::module::ModuleInfo),
	$classEntry("jdk.internal.module.ModuleInfo$Attributes", ::jdk::internal::module::ModuleInfo$Attributes),
	$classEntry("jdk.internal.module.ModuleInfo$ConstantPool", ::jdk::internal::module::ModuleInfo$ConstantPool),
	$classEntry("jdk.internal.module.ModuleInfo$ConstantPool$Entry", ::jdk::internal::module::ModuleInfo$ConstantPool$Entry),
	$classEntry("jdk.internal.module.ModuleInfo$ConstantPool$Index2Entry", ::jdk::internal::module::ModuleInfo$ConstantPool$Index2Entry),
	$classEntry("jdk.internal.module.ModuleInfo$ConstantPool$IndexEntry", ::jdk::internal::module::ModuleInfo$ConstantPool$IndexEntry),
	$classEntry("jdk.internal.module.ModuleInfo$ConstantPool$ValueEntry", ::jdk::internal::module::ModuleInfo$ConstantPool$ValueEntry),
	$classEntry("jdk.internal.module.ModuleInfo$CountingDataInput", ::jdk::internal::module::ModuleInfo$CountingDataInput),
	$classEntry("jdk.internal.module.ModuleInfo$DataInputWrapper", ::jdk::internal::module::ModuleInfo$DataInputWrapper),
	$classEntry("jdk.internal.module.ModuleInfoExtender", ::jdk::internal::module::ModuleInfoExtender),
	$classEntry("jdk.internal.module.ModuleInfoExtender$1", ::jdk::internal::module::ModuleInfoExtender$1),
	$classEntry("jdk.internal.module.ModuleInfoExtender$1$1", ::jdk::internal::module::ModuleInfoExtender$1$1),
	$classEntry("jdk.internal.module.ModuleInfoWriter", ::jdk::internal::module::ModuleInfoWriter),
	$classEntry("jdk.internal.module.ModuleLoaderMap", ::jdk::internal::module::ModuleLoaderMap),
	$classEntry("jdk.internal.module.ModuleLoaderMap$Mapper", ::jdk::internal::module::ModuleLoaderMap$Mapper),
	$classEntry("jdk.internal.module.ModuleLoaderMap$Modules", ::jdk::internal::module::ModuleLoaderMap$Modules),
	$classEntry("jdk.internal.module.ModulePatcher", ::jdk::internal::module::ModulePatcher),
	$classEntry("jdk.internal.module.ModulePatcher$ExplodedResourceFinder", ::jdk::internal::module::ModulePatcher$ExplodedResourceFinder),
	$classEntry("jdk.internal.module.ModulePatcher$ExplodedResourceFinder$1", ::jdk::internal::module::ModulePatcher$ExplodedResourceFinder$1),
	$classEntry("jdk.internal.module.ModulePatcher$JarResourceFinder", ::jdk::internal::module::ModulePatcher$JarResourceFinder),
	$classEntry("jdk.internal.module.ModulePatcher$JarResourceFinder$1", ::jdk::internal::module::ModulePatcher$JarResourceFinder$1),
	$classEntry("jdk.internal.module.ModulePatcher$PatchedModuleReader", ::jdk::internal::module::ModulePatcher$PatchedModuleReader),
	$classEntry("jdk.internal.module.ModulePatcher$PatchedModuleReader$1", ::jdk::internal::module::ModulePatcher$PatchedModuleReader$1),
	$classEntry("jdk.internal.module.ModulePatcher$ResourceFinder", ::jdk::internal::module::ModulePatcher$ResourceFinder),
	$classEntry("jdk.internal.module.ModulePath", ::jdk::internal::module::ModulePath),
	$classEntry("jdk.internal.module.ModulePath$Patterns", ::jdk::internal::module::ModulePath$Patterns),
	$classEntry("jdk.internal.module.ModulePathValidator", ::jdk::internal::module::ModulePathValidator),
	$classEntry("jdk.internal.module.ModuleReferenceImpl", ::jdk::internal::module::ModuleReferenceImpl),
	$classEntry("jdk.internal.module.ModuleReferences", ::jdk::internal::module::ModuleReferences),
	$classEntry("jdk.internal.module.ModuleReferences$ExplodedModuleReader", ::jdk::internal::module::ModuleReferences$ExplodedModuleReader),
	$classEntry("jdk.internal.module.ModuleReferences$JModModuleReader", ::jdk::internal::module::ModuleReferences$JModModuleReader),
	$classEntry("jdk.internal.module.ModuleReferences$JarModuleReader", ::jdk::internal::module::ModuleReferences$JarModuleReader),
	$classEntry("jdk.internal.module.ModuleReferences$SafeCloseModuleReader", ::jdk::internal::module::ModuleReferences$SafeCloseModuleReader),
	$classEntry("jdk.internal.module.ModuleResolution", ::jdk::internal::module::ModuleResolution),
	$classEntry("jdk.internal.module.ModuleTarget", ::jdk::internal::module::ModuleTarget),
	$classEntry("jdk.internal.module.Modules", ::jdk::internal::module::Modules),
	$classEntry("jdk.internal.module.Resources", ::jdk::internal::module::Resources),
	$classEntry("jdk.internal.module.ServicesCatalog", ::jdk::internal::module::ServicesCatalog),
	$classEntry("jdk.internal.module.ServicesCatalog$ServiceProvider", ::jdk::internal::module::ServicesCatalog$ServiceProvider),
	$classEntry("jdk.internal.module.SystemModuleFinders", ::jdk::internal::module::SystemModuleFinders),
	$classEntry("jdk.internal.module.SystemModuleFinders$1", ::jdk::internal::module::SystemModuleFinders$1),
	$classEntry("jdk.internal.module.SystemModuleFinders$2", ::jdk::internal::module::SystemModuleFinders$2),
	$classEntry("jdk.internal.module.SystemModuleFinders$3", ::jdk::internal::module::SystemModuleFinders$3),
	$classEntry("jdk.internal.module.SystemModuleFinders$ModuleContentSpliterator", ::jdk::internal::module::SystemModuleFinders$ModuleContentSpliterator),
	$classEntry("jdk.internal.module.SystemModuleFinders$SystemImage", ::jdk::internal::module::SystemModuleFinders$SystemImage),
	$classEntry("jdk.internal.module.SystemModuleFinders$SystemModuleFinder", ::jdk::internal::module::SystemModuleFinders$SystemModuleFinder),
	$classEntry("jdk.internal.module.SystemModuleFinders$SystemModuleReader", ::jdk::internal::module::SystemModuleFinders$SystemModuleReader),
	$classEntry("jdk.internal.module.SystemModules", ::jdk::internal::module::SystemModules),
	$classEntry("jdk.internal.module.SystemModulesMap", ::jdk::internal::module::SystemModulesMap),
	$classEntry("jdk.internal.org.objectweb.asm.AnnotationVisitor", ::jdk::internal::org::objectweb::asm$::AnnotationVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.AnnotationWriter", ::jdk::internal::org::objectweb::asm$::AnnotationWriter),
	$classEntry("jdk.internal.org.objectweb.asm.Attribute", ::jdk::internal::org::objectweb::asm$::Attribute),
	$classEntry("jdk.internal.org.objectweb.asm.Attribute$Set", ::jdk::internal::org::objectweb::asm$::Attribute$Set),
	$classEntry("jdk.internal.org.objectweb.asm.ByteVector", ::jdk::internal::org::objectweb::asm$::ByteVector),
	$classEntry("jdk.internal.org.objectweb.asm.ClassReader", ::jdk::internal::org::objectweb::asm$::ClassReader),
	$classEntry("jdk.internal.org.objectweb.asm.ClassTooLargeException", ::jdk::internal::org::objectweb::asm$::ClassTooLargeException),
	$classEntry("jdk.internal.org.objectweb.asm.ClassVisitor", ::jdk::internal::org::objectweb::asm$::ClassVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.ClassWriter", ::jdk::internal::org::objectweb::asm$::ClassWriter),
	$classEntry("jdk.internal.org.objectweb.asm.ConstantDynamic", ::jdk::internal::org::objectweb::asm$::ConstantDynamic),
	$classEntry("jdk.internal.org.objectweb.asm.Constants", ::jdk::internal::org::objectweb::asm$::Constants),
	$classEntry("jdk.internal.org.objectweb.asm.Context", ::jdk::internal::org::objectweb::asm$::Context),
	$classEntry("jdk.internal.org.objectweb.asm.CurrentFrame", ::jdk::internal::org::objectweb::asm$::CurrentFrame),
	$classEntry("jdk.internal.org.objectweb.asm.Edge", ::jdk::internal::org::objectweb::asm$::Edge),
	$classEntry("jdk.internal.org.objectweb.asm.FieldVisitor", ::jdk::internal::org::objectweb::asm$::FieldVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.FieldWriter", ::jdk::internal::org::objectweb::asm$::FieldWriter),
	$classEntry("jdk.internal.org.objectweb.asm.Frame", ::jdk::internal::org::objectweb::asm$::Frame),
	$classEntry("jdk.internal.org.objectweb.asm.Handle", ::jdk::internal::org::objectweb::asm$::Handle),
	$classEntry("jdk.internal.org.objectweb.asm.Handler", ::jdk::internal::org::objectweb::asm$::Handler),
	$classEntry("jdk.internal.org.objectweb.asm.Label", ::jdk::internal::org::objectweb::asm$::Label),
	$classEntry("jdk.internal.org.objectweb.asm.MethodTooLargeException", ::jdk::internal::org::objectweb::asm$::MethodTooLargeException),
	$classEntry("jdk.internal.org.objectweb.asm.MethodVisitor", ::jdk::internal::org::objectweb::asm$::MethodVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.MethodWriter", ::jdk::internal::org::objectweb::asm$::MethodWriter),
	$classEntry("jdk.internal.org.objectweb.asm.ModuleVisitor", ::jdk::internal::org::objectweb::asm$::ModuleVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.ModuleWriter", ::jdk::internal::org::objectweb::asm$::ModuleWriter),
	$classEntry("jdk.internal.org.objectweb.asm.Opcodes", ::jdk::internal::org::objectweb::asm$::Opcodes),
	$classEntry("jdk.internal.org.objectweb.asm.RecordComponentVisitor", ::jdk::internal::org::objectweb::asm$::RecordComponentVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.RecordComponentWriter", ::jdk::internal::org::objectweb::asm$::RecordComponentWriter),
	$classEntry("jdk.internal.org.objectweb.asm.Symbol", ::jdk::internal::org::objectweb::asm$::Symbol),
	$classEntry("jdk.internal.org.objectweb.asm.SymbolTable", ::jdk::internal::org::objectweb::asm$::SymbolTable),
	$classEntry("jdk.internal.org.objectweb.asm.SymbolTable$Entry", ::jdk::internal::org::objectweb::asm$::SymbolTable$Entry),
	$classEntry("jdk.internal.org.objectweb.asm.Type", ::jdk::internal::org::objectweb::asm$::Type),
	$classEntry("jdk.internal.org.objectweb.asm.TypePath", ::jdk::internal::org::objectweb::asm$::TypePath),
	$classEntry("jdk.internal.org.objectweb.asm.TypeReference", ::jdk::internal::org::objectweb::asm$::TypeReference),
	$classEntry("jdk.internal.org.objectweb.asm.commons.AdviceAdapter", ::jdk::internal::org::objectweb::asm$::commons::AdviceAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.AnalyzerAdapter", ::jdk::internal::org::objectweb::asm$::commons::AnalyzerAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.AnnotationRemapper", ::jdk::internal::org::objectweb::asm$::commons::AnnotationRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.ClassRemapper", ::jdk::internal::org::objectweb::asm$::commons::ClassRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.CodeSizeEvaluator", ::jdk::internal::org::objectweb::asm$::commons::CodeSizeEvaluator),
	$classEntry("jdk.internal.org.objectweb.asm.commons.FieldRemapper", ::jdk::internal::org::objectweb::asm$::commons::FieldRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.GeneratorAdapter", ::jdk::internal::org::objectweb::asm$::commons::GeneratorAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.InstructionAdapter", ::jdk::internal::org::objectweb::asm$::commons::InstructionAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.JSRInlinerAdapter", ::jdk::internal::org::objectweb::asm$::commons::JSRInlinerAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.JSRInlinerAdapter$Instantiation", ::jdk::internal::org::objectweb::asm$::commons::JSRInlinerAdapter$Instantiation),
	$classEntry("jdk.internal.org.objectweb.asm.commons.LocalVariablesSorter", ::jdk::internal::org::objectweb::asm$::commons::LocalVariablesSorter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.Method", ::jdk::internal::org::objectweb::asm$::commons::Method),
	$classEntry("jdk.internal.org.objectweb.asm.commons.MethodRemapper", ::jdk::internal::org::objectweb::asm$::commons::MethodRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.ModuleHashesAttribute", ::jdk::internal::org::objectweb::asm$::commons::ModuleHashesAttribute),
	$classEntry("jdk.internal.org.objectweb.asm.commons.ModuleRemapper", ::jdk::internal::org::objectweb::asm$::commons::ModuleRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.ModuleResolutionAttribute", ::jdk::internal::org::objectweb::asm$::commons::ModuleResolutionAttribute),
	$classEntry("jdk.internal.org.objectweb.asm.commons.ModuleTargetAttribute", ::jdk::internal::org::objectweb::asm$::commons::ModuleTargetAttribute),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RecordComponentRemapper", ::jdk::internal::org::objectweb::asm$::commons::RecordComponentRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.Remapper", ::jdk::internal::org::objectweb::asm$::commons::Remapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RemappingAnnotationAdapter", ::jdk::internal::org::objectweb::asm$::commons::RemappingAnnotationAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RemappingClassAdapter", ::jdk::internal::org::objectweb::asm$::commons::RemappingClassAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RemappingFieldAdapter", ::jdk::internal::org::objectweb::asm$::commons::RemappingFieldAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RemappingMethodAdapter", ::jdk::internal::org::objectweb::asm$::commons::RemappingMethodAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.RemappingSignatureAdapter", ::jdk::internal::org::objectweb::asm$::commons::RemappingSignatureAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.SerialVersionUIDAdder", ::jdk::internal::org::objectweb::asm$::commons::SerialVersionUIDAdder),
	$classEntry("jdk.internal.org.objectweb.asm.commons.SerialVersionUIDAdder$Item", ::jdk::internal::org::objectweb::asm$::commons::SerialVersionUIDAdder$Item),
	$classEntry("jdk.internal.org.objectweb.asm.commons.SignatureRemapper", ::jdk::internal::org::objectweb::asm$::commons::SignatureRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.SimpleRemapper", ::jdk::internal::org::objectweb::asm$::commons::SimpleRemapper),
	$classEntry("jdk.internal.org.objectweb.asm.commons.StaticInitMerger", ::jdk::internal::org::objectweb::asm$::commons::StaticInitMerger),
	$classEntry("jdk.internal.org.objectweb.asm.commons.TableSwitchGenerator", ::jdk::internal::org::objectweb::asm$::commons::TableSwitchGenerator),
	$classEntry("jdk.internal.org.objectweb.asm.commons.TryCatchBlockSorter", ::jdk::internal::org::objectweb::asm$::commons::TryCatchBlockSorter),
	$classEntry("jdk.internal.org.objectweb.asm.commons.TryCatchBlockSorter$1", ::jdk::internal::org::objectweb::asm$::commons::TryCatchBlockSorter$1),
	$classEntry("jdk.internal.org.objectweb.asm.signature.SignatureReader", ::jdk::internal::org::objectweb::asm$::signature::SignatureReader),
	$classEntry("jdk.internal.org.objectweb.asm.signature.SignatureVisitor", ::jdk::internal::org::objectweb::asm$::signature::SignatureVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.signature.SignatureWriter", ::jdk::internal::org::objectweb::asm$::signature::SignatureWriter),
	$classEntry("jdk.internal.org.objectweb.asm.tree.AbstractInsnNode", ::jdk::internal::org::objectweb::asm$::tree::AbstractInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.AnnotationNode", ::jdk::internal::org::objectweb::asm$::tree::AnnotationNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ClassNode", ::jdk::internal::org::objectweb::asm$::tree::ClassNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.FieldInsnNode", ::jdk::internal::org::objectweb::asm$::tree::FieldInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.FieldNode", ::jdk::internal::org::objectweb::asm$::tree::FieldNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.FrameNode", ::jdk::internal::org::objectweb::asm$::tree::FrameNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.IincInsnNode", ::jdk::internal::org::objectweb::asm$::tree::IincInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.InnerClassNode", ::jdk::internal::org::objectweb::asm$::tree::InnerClassNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.InsnList", ::jdk::internal::org::objectweb::asm$::tree::InsnList),
	$classEntry("jdk.internal.org.objectweb.asm.tree.InsnList$InsnListIterator", ::jdk::internal::org::objectweb::asm$::tree::InsnList$InsnListIterator),
	$classEntry("jdk.internal.org.objectweb.asm.tree.InsnNode", ::jdk::internal::org::objectweb::asm$::tree::InsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.IntInsnNode", ::jdk::internal::org::objectweb::asm$::tree::IntInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.InvokeDynamicInsnNode", ::jdk::internal::org::objectweb::asm$::tree::InvokeDynamicInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.JumpInsnNode", ::jdk::internal::org::objectweb::asm$::tree::JumpInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LabelNode", ::jdk::internal::org::objectweb::asm$::tree::LabelNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LdcInsnNode", ::jdk::internal::org::objectweb::asm$::tree::LdcInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LineNumberNode", ::jdk::internal::org::objectweb::asm$::tree::LineNumberNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LocalVariableAnnotationNode", ::jdk::internal::org::objectweb::asm$::tree::LocalVariableAnnotationNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LocalVariableNode", ::jdk::internal::org::objectweb::asm$::tree::LocalVariableNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.LookupSwitchInsnNode", ::jdk::internal::org::objectweb::asm$::tree::LookupSwitchInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.MethodInsnNode", ::jdk::internal::org::objectweb::asm$::tree::MethodInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.MethodNode", ::jdk::internal::org::objectweb::asm$::tree::MethodNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.MethodNode$1", ::jdk::internal::org::objectweb::asm$::tree::MethodNode$1),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ModuleExportNode", ::jdk::internal::org::objectweb::asm$::tree::ModuleExportNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ModuleNode", ::jdk::internal::org::objectweb::asm$::tree::ModuleNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ModuleOpenNode", ::jdk::internal::org::objectweb::asm$::tree::ModuleOpenNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ModuleProvideNode", ::jdk::internal::org::objectweb::asm$::tree::ModuleProvideNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ModuleRequireNode", ::jdk::internal::org::objectweb::asm$::tree::ModuleRequireNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.MultiANewArrayInsnNode", ::jdk::internal::org::objectweb::asm$::tree::MultiANewArrayInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.ParameterNode", ::jdk::internal::org::objectweb::asm$::tree::ParameterNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.RecordComponentNode", ::jdk::internal::org::objectweb::asm$::tree::RecordComponentNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.TableSwitchInsnNode", ::jdk::internal::org::objectweb::asm$::tree::TableSwitchInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.TryCatchBlockNode", ::jdk::internal::org::objectweb::asm$::tree::TryCatchBlockNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode", ::jdk::internal::org::objectweb::asm$::tree::TypeAnnotationNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.TypeInsnNode", ::jdk::internal::org::objectweb::asm$::tree::TypeInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.UnsupportedClassVersionException", ::jdk::internal::org::objectweb::asm$::tree::UnsupportedClassVersionException),
	$classEntry("jdk.internal.org.objectweb.asm.tree.Util", ::jdk::internal::org::objectweb::asm$::tree::Util),
	$classEntry("jdk.internal.org.objectweb.asm.tree.VarInsnNode", ::jdk::internal::org::objectweb::asm$::tree::VarInsnNode),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.Analyzer", ::jdk::internal::org::objectweb::asm$::tree::analysis::Analyzer),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.AnalyzerException", ::jdk::internal::org::objectweb::asm$::tree::analysis::AnalyzerException),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter", ::jdk::internal::org::objectweb::asm$::tree::analysis::BasicInterpreter),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.BasicValue", ::jdk::internal::org::objectweb::asm$::tree::analysis::BasicValue),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier", ::jdk::internal::org::objectweb::asm$::tree::analysis::BasicVerifier),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.Frame", ::jdk::internal::org::objectweb::asm$::tree::analysis::Frame),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.Interpreter", ::jdk::internal::org::objectweb::asm$::tree::analysis::Interpreter),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier", ::jdk::internal::org::objectweb::asm$::tree::analysis::SimpleVerifier),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.SmallSet", ::jdk::internal::org::objectweb::asm$::tree::analysis::SmallSet),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.SmallSet$IteratorImpl", ::jdk::internal::org::objectweb::asm$::tree::analysis::SmallSet$IteratorImpl),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter", ::jdk::internal::org::objectweb::asm$::tree::analysis::SourceInterpreter),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.SourceValue", ::jdk::internal::org::objectweb::asm$::tree::analysis::SourceValue),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.Subroutine", ::jdk::internal::org::objectweb::asm$::tree::analysis::Subroutine),
	$classEntry("jdk.internal.org.objectweb.asm.tree.analysis.Value", ::jdk::internal::org::objectweb::asm$::tree::analysis::Value),
	$classEntry("jdk.internal.org.objectweb.asm.util.ASMifiable", ::jdk::internal::org::objectweb::asm$::util::ASMifiable),
	$classEntry("jdk.internal.org.objectweb.asm.util.ASMifier", ::jdk::internal::org::objectweb::asm$::util::ASMifier),
	$classEntry("jdk.internal.org.objectweb.asm.util.ASMifierSupport", ::jdk::internal::org::objectweb::asm$::util::ASMifierSupport),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckAnnotationAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckAnnotationAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckClassAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckClassAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckClassAdapter$1", ::jdk::internal::org::objectweb::asm$::util::CheckClassAdapter$1),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckFieldAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckFieldAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckMethodAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckMethodAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckMethodAdapter$1", ::jdk::internal::org::objectweb::asm$::util::CheckMethodAdapter$1),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckMethodAdapter$Method", ::jdk::internal::org::objectweb::asm$::util::CheckMethodAdapter$Method),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckModuleAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckModuleAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckModuleAdapter$NameSet", ::jdk::internal::org::objectweb::asm$::util::CheckModuleAdapter$NameSet),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckRecordComponentAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckRecordComponentAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckSignatureAdapter", ::jdk::internal::org::objectweb::asm$::util::CheckSignatureAdapter),
	$classEntry("jdk.internal.org.objectweb.asm.util.CheckSignatureAdapter$State", ::jdk::internal::org::objectweb::asm$::util::CheckSignatureAdapter$State),
	$classEntry("jdk.internal.org.objectweb.asm.util.Printer", ::jdk::internal::org::objectweb::asm$::util::Printer),
	$classEntry("jdk.internal.org.objectweb.asm.util.Textifiable", ::jdk::internal::org::objectweb::asm$::util::Textifiable),
	$classEntry("jdk.internal.org.objectweb.asm.util.Textifier", ::jdk::internal::org::objectweb::asm$::util::Textifier),
	$classEntry("jdk.internal.org.objectweb.asm.util.TextifierSupport", ::jdk::internal::org::objectweb::asm$::util::TextifierSupport),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceAnnotationVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceAnnotationVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceClassVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceClassVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceFieldVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceFieldVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceMethodVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceMethodVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceModuleVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceModuleVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceRecordComponentVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceRecordComponentVisitor),
	$classEntry("jdk.internal.org.objectweb.asm.util.TraceSignatureVisitor", ::jdk::internal::org::objectweb::asm$::util::TraceSignatureVisitor),
	$classEntry("jdk.internal.org.xml.sax.Attributes", ::jdk::internal::org::xml::sax::Attributes),
	$classEntry("jdk.internal.org.xml.sax.ContentHandler", ::jdk::internal::org::xml::sax::ContentHandler),
	$classEntry("jdk.internal.org.xml.sax.DTDHandler", ::jdk::internal::org::xml::sax::DTDHandler),
	$classEntry("jdk.internal.org.xml.sax.EntityResolver", ::jdk::internal::org::xml::sax::EntityResolver),
	$classEntry("jdk.internal.org.xml.sax.ErrorHandler", ::jdk::internal::org::xml::sax::ErrorHandler),
	$classEntry("jdk.internal.org.xml.sax.InputSource", ::jdk::internal::org::xml::sax::InputSource),
	$classEntry("jdk.internal.org.xml.sax.Locator", ::jdk::internal::org::xml::sax::Locator),
	$classEntry("jdk.internal.org.xml.sax.SAXException", ::jdk::internal::org::xml::sax::SAXException),
	$classEntry("jdk.internal.org.xml.sax.SAXNotRecognizedException", ::jdk::internal::org::xml::sax::SAXNotRecognizedException),
	$classEntry("jdk.internal.org.xml.sax.SAXNotSupportedException", ::jdk::internal::org::xml::sax::SAXNotSupportedException),
	$classEntry("jdk.internal.org.xml.sax.SAXParseException", ::jdk::internal::org::xml::sax::SAXParseException),
	$classEntry("jdk.internal.org.xml.sax.XMLReader", ::jdk::internal::org::xml::sax::XMLReader),
	$classEntry("jdk.internal.org.xml.sax.helpers.DefaultHandler", ::jdk::internal::org::xml::sax::helpers::DefaultHandler),
	$classEntry("jdk.internal.perf.Perf", ::jdk::internal::perf::Perf),
	$classEntry("jdk.internal.perf.Perf$CleanerAction", ::jdk::internal::perf::Perf$CleanerAction),
	$classEntry("jdk.internal.perf.Perf$GetPerfAction", ::jdk::internal::perf::Perf$GetPerfAction),
	$classEntry("jdk.internal.perf.PerfCounter", ::jdk::internal::perf::PerfCounter),
	$classEntry("jdk.internal.perf.PerfCounter$CoreCounters", ::jdk::internal::perf::PerfCounter$CoreCounters),
	$classEntry("jdk.internal.platform.Container", ::jdk::internal::platform::Container),
	$classEntry("jdk.internal.platform.Metrics", ::jdk::internal::platform::Metrics),
	$classEntry("jdk.internal.platform.SystemMetrics", ::jdk::internal::platform::SystemMetrics),
	$classEntry("jdk.internal.ref.Cleaner", ::jdk::internal::ref::Cleaner),
	$classEntry("jdk.internal.ref.Cleaner$1", ::jdk::internal::ref::Cleaner$1),
	$classEntry("jdk.internal.ref.CleanerFactory", ::jdk::internal::ref::CleanerFactory),
	$classEntry("jdk.internal.ref.CleanerFactory$1", ::jdk::internal::ref::CleanerFactory$1),
	$classEntry("jdk.internal.ref.CleanerImpl", ::jdk::internal::ref::CleanerImpl),
	$classEntry("jdk.internal.ref.CleanerImpl$CleanerCleanable", ::jdk::internal::ref::CleanerImpl$CleanerCleanable),
	$classEntry("jdk.internal.ref.CleanerImpl$InnocuousThreadFactory", ::jdk::internal::ref::CleanerImpl$InnocuousThreadFactory),
	$classEntry("jdk.internal.ref.CleanerImpl$PhantomCleanableRef", ::jdk::internal::ref::CleanerImpl$PhantomCleanableRef),
	$classEntry("jdk.internal.ref.PhantomCleanable", ::jdk::internal::ref::PhantomCleanable),
	$classEntry("jdk.internal.reflect.AccessorGenerator", ::jdk::internal::reflect::AccessorGenerator),
	$classEntry("jdk.internal.reflect.BootstrapConstructorAccessorImpl", ::jdk::internal::reflect::BootstrapConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.ByteVector", ::jdk::internal::reflect::ByteVector),
	$classEntry("jdk.internal.reflect.ByteVectorFactory", ::jdk::internal::reflect::ByteVectorFactory),
	$classEntry("jdk.internal.reflect.ByteVectorImpl", ::jdk::internal::reflect::ByteVectorImpl),
	$classEntry("jdk.internal.reflect.CallerSensitive", ::jdk::internal::reflect::CallerSensitive),
	$classEntry("jdk.internal.reflect.ClassDefiner", ::jdk::internal::reflect::ClassDefiner),
	$classEntry("jdk.internal.reflect.ClassDefiner$1", ::jdk::internal::reflect::ClassDefiner$1),
	$classEntry("jdk.internal.reflect.ClassFileAssembler", ::jdk::internal::reflect::ClassFileAssembler),
	$classEntry("jdk.internal.reflect.ClassFileConstants", ::jdk::internal::reflect::ClassFileConstants),
	$classEntry("jdk.internal.reflect.ConstantBase", ::jdk::internal::reflect::ConstantBase),
	$classEntry("jdk.internal.reflect.ConstantClass", ::jdk::internal::reflect::ConstantClass),
	$classEntry("jdk.internal.reflect.ConstantDouble", ::jdk::internal::reflect::ConstantDouble),
	$classEntry("jdk.internal.reflect.ConstantDynamic", ::jdk::internal::reflect::ConstantDynamic),
	$classEntry("jdk.internal.reflect.ConstantFieldRef", ::jdk::internal::reflect::ConstantFieldRef),
	$classEntry("jdk.internal.reflect.ConstantFloat", ::jdk::internal::reflect::ConstantFloat),
	$classEntry("jdk.internal.reflect.ConstantInt", ::jdk::internal::reflect::ConstantInt),
	$classEntry("jdk.internal.reflect.ConstantInterfaceMethodRef", ::jdk::internal::reflect::ConstantInterfaceMethodRef),
	$classEntry("jdk.internal.reflect.ConstantInvokeDynamic", ::jdk::internal::reflect::ConstantInvokeDynamic),
	$classEntry("jdk.internal.reflect.ConstantLong", ::jdk::internal::reflect::ConstantLong),
	$classEntry("jdk.internal.reflect.ConstantMethodHandle", ::jdk::internal::reflect::ConstantMethodHandle),
	$classEntry("jdk.internal.reflect.ConstantMethodRef", ::jdk::internal::reflect::ConstantMethodRef),
	$classEntry("jdk.internal.reflect.ConstantMethodType", ::jdk::internal::reflect::ConstantMethodType),
	$classEntry("jdk.internal.reflect.ConstantModule", ::jdk::internal::reflect::ConstantModule),
	$classEntry("jdk.internal.reflect.ConstantNameAndType", ::jdk::internal::reflect::ConstantNameAndType),
	$classEntry("jdk.internal.reflect.ConstantPackage", ::jdk::internal::reflect::ConstantPackage),
	$classEntry("jdk.internal.reflect.ConstantPool", ::jdk::internal::reflect::ConstantPool),
	$classEntry("jdk.internal.reflect.ConstantPool$Tag", ::jdk::internal::reflect::ConstantPool$Tag),
	$classEntry("jdk.internal.reflect.ConstantString", ::jdk::internal::reflect::ConstantString),
	$classEntry("jdk.internal.reflect.ConstantUTF8", ::jdk::internal::reflect::ConstantUTF8),
	$classEntry("jdk.internal.reflect.ConstructorAccessor", ::jdk::internal::reflect::ConstructorAccessor),
	$classEntry("jdk.internal.reflect.ConstructorAccessorImpl", ::jdk::internal::reflect::ConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.DelegatingClassLoader", ::jdk::internal::reflect::DelegatingClassLoader),
	$classEntry("jdk.internal.reflect.DelegatingConstructorAccessorImpl", ::jdk::internal::reflect::DelegatingConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.DelegatingMethodAccessorImpl", ::jdk::internal::reflect::DelegatingMethodAccessorImpl),
	$classEntry("jdk.internal.reflect.FieldAccessor", ::jdk::internal::reflect::FieldAccessor),
	$classEntry("jdk.internal.reflect.FieldAccessorImpl", ::jdk::internal::reflect::FieldAccessorImpl),
	$classEntry("jdk.internal.reflect.InstantiationExceptionConstructorAccessorImpl", ::jdk::internal::reflect::InstantiationExceptionConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.Label", ::jdk::internal::reflect::Label),
	$classEntry("jdk.internal.reflect.Label$PatchInfo", ::jdk::internal::reflect::Label$PatchInfo),
	$classEntry("jdk.internal.reflect.MagicAccessorImpl", ::jdk::internal::reflect::MagicAccessorImpl),
	$classEntry("jdk.internal.reflect.MethodAccessor", ::jdk::internal::reflect::MethodAccessor),
	$classEntry("jdk.internal.reflect.MethodAccessorGenerator", ::jdk::internal::reflect::MethodAccessorGenerator),
	$classEntry("jdk.internal.reflect.MethodAccessorGenerator$1", ::jdk::internal::reflect::MethodAccessorGenerator$1),
	$classEntry("jdk.internal.reflect.MethodAccessorImpl", ::jdk::internal::reflect::MethodAccessorImpl),
	$classEntry("jdk.internal.reflect.NativeConstructorAccessorImpl", ::jdk::internal::reflect::NativeConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.NativeMethodAccessorImpl", ::jdk::internal::reflect::NativeMethodAccessorImpl),
	$classEntry("jdk.internal.reflect.Reflection", ::jdk::internal::reflect::Reflection),
	$classEntry("jdk.internal.reflect.ReflectionFactory", ::jdk::internal::reflect::ReflectionFactory),
	$classEntry("jdk.internal.reflect.ReflectionFactory$GetReflectionFactoryAction", ::jdk::internal::reflect::ReflectionFactory$GetReflectionFactoryAction),
	$classEntry("jdk.internal.reflect.SerializationConstructorAccessorImpl", ::jdk::internal::reflect::SerializationConstructorAccessorImpl),
	$classEntry("jdk.internal.reflect.SignatureIterator", ::jdk::internal::reflect::SignatureIterator),
	$classEntry("jdk.internal.reflect.UTF8", ::jdk::internal::reflect::UTF8),
	$classEntry("jdk.internal.reflect.UnsafeBooleanFieldAccessorImpl", ::jdk::internal::reflect::UnsafeBooleanFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeByteFieldAccessorImpl", ::jdk::internal::reflect::UnsafeByteFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeCharacterFieldAccessorImpl", ::jdk::internal::reflect::UnsafeCharacterFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeDoubleFieldAccessorImpl", ::jdk::internal::reflect::UnsafeDoubleFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeFieldAccessorFactory", ::jdk::internal::reflect::UnsafeFieldAccessorFactory),
	$classEntry("jdk.internal.reflect.UnsafeFieldAccessorImpl", ::jdk::internal::reflect::UnsafeFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeFloatFieldAccessorImpl", ::jdk::internal::reflect::UnsafeFloatFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeIntegerFieldAccessorImpl", ::jdk::internal::reflect::UnsafeIntegerFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeLongFieldAccessorImpl", ::jdk::internal::reflect::UnsafeLongFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeObjectFieldAccessorImpl", ::jdk::internal::reflect::UnsafeObjectFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedBooleanFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedBooleanFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedByteFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedByteFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedCharacterFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedCharacterFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedDoubleFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedDoubleFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedFloatFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedFloatFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedIntegerFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedIntegerFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedLongFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedLongFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedObjectFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedObjectFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedShortFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedShortFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticBooleanFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticByteFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticCharacterFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticDoubleFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticFloatFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticIntegerFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticLongFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticObjectFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl", ::jdk::internal::reflect::UnsafeQualifiedStaticShortFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeShortFieldAccessorImpl", ::jdk::internal::reflect::UnsafeShortFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticBooleanFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticBooleanFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticByteFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticByteFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticCharacterFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticCharacterFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticDoubleFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticDoubleFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticFloatFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticFloatFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticIntegerFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticIntegerFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticLongFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticLongFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticObjectFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticObjectFieldAccessorImpl),
	$classEntry("jdk.internal.reflect.UnsafeStaticShortFieldAccessorImpl", ::jdk::internal::reflect::UnsafeStaticShortFieldAccessorImpl),
	$classEntry("jdk.internal.util.ArraysSupport", ::jdk::internal::util::ArraysSupport),
	$classEntry("jdk.internal.util.Preconditions", ::jdk::internal::util::Preconditions),
	$classEntry("jdk.internal.util.Preconditions$1", ::jdk::internal::util::Preconditions$1),
	$classEntry("jdk.internal.util.StaticProperty", ::jdk::internal::util::StaticProperty),
	$classEntry("jdk.internal.util.SystemProps", ::jdk::internal::util::SystemProps),
	$classEntry("jdk.internal.util.SystemProps$Raw", ::jdk::internal::util::SystemProps$Raw),
	$classEntry("jdk.internal.util.jar.InvalidJarIndexError", ::jdk::internal::util::jar::InvalidJarIndexError),
	$classEntry("jdk.internal.util.jar.JarIndex", ::jdk::internal::util::jar::JarIndex),
	$classEntry("jdk.internal.util.random.RandomSupport", ::jdk::internal::util::random::RandomSupport),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomArbitraryJumpsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomArbitraryJumpsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomDoublesSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomDoublesSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomIntsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomIntsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomJumpsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomJumpsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLeapsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLeapsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLongsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractArbitrarilyJumpableGenerator$RandomLongsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSpliteratorGenerator", ::jdk::internal::util::random::RandomSupport$AbstractSpliteratorGenerator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableGenerator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableGenerator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableGenerator$RandomDoublesSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableGenerator$RandomDoublesSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableGenerator$RandomIntsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableGenerator$RandomIntsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableGenerator$RandomLongsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableGenerator$RandomLongsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableGenerator$RandomSplitsSpliterator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableGenerator$RandomSplitsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableWithBrineGenerator", ::jdk::internal::util::random::RandomSupport$AbstractSplittableWithBrineGenerator),
	$classEntry("jdk.internal.util.random.RandomSupport$AbstractSplittableWithBrineGenerator$RandomSplitsSpliteratorWithSalt", ::jdk::internal::util::random::RandomSupport$AbstractSplittableWithBrineGenerator$RandomSplitsSpliteratorWithSalt),
	$classEntry("jdk.internal.util.random.RandomSupport$DoubleZigguratTables", ::jdk::internal::util::random::RandomSupport$DoubleZigguratTables),
	$classEntry("jdk.internal.util.random.RandomSupport$RandomDoublesSpliterator", ::jdk::internal::util::random::RandomSupport$RandomDoublesSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$RandomGeneratorProperties", ::jdk::internal::util::random::RandomSupport$RandomGeneratorProperties),
	$classEntry("jdk.internal.util.random.RandomSupport$RandomIntsSpliterator", ::jdk::internal::util::random::RandomSupport$RandomIntsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$RandomLongsSpliterator", ::jdk::internal::util::random::RandomSupport$RandomLongsSpliterator),
	$classEntry("jdk.internal.util.random.RandomSupport$RandomSpliterator", ::jdk::internal::util::random::RandomSupport$RandomSpliterator),
	$classEntry("jdk.internal.util.xml.PropertiesDefaultHandler", ::jdk::internal::util::xml::PropertiesDefaultHandler),
	$classEntry("jdk.internal.util.xml.SAXParser", ::jdk::internal::util::xml::SAXParser),
	$classEntry("jdk.internal.util.xml.XMLStreamException", ::jdk::internal::util::xml::XMLStreamException),
	$classEntry("jdk.internal.util.xml.XMLStreamWriter", ::jdk::internal::util::xml::XMLStreamWriter),
	$classEntry("jdk.internal.util.xml.impl.Attrs", ::jdk::internal::util::xml::impl::Attrs),
	$classEntry("jdk.internal.util.xml.impl.Input", ::jdk::internal::util::xml::impl::Input),
	$classEntry("jdk.internal.util.xml.impl.Pair", ::jdk::internal::util::xml::impl::Pair),
	$classEntry("jdk.internal.util.xml.impl.Parser", ::jdk::internal::util::xml::impl::Parser),
	$classEntry("jdk.internal.util.xml.impl.ParserSAX", ::jdk::internal::util::xml::impl::ParserSAX),
	$classEntry("jdk.internal.util.xml.impl.ReaderUTF16", ::jdk::internal::util::xml::impl::ReaderUTF16),
	$classEntry("jdk.internal.util.xml.impl.ReaderUTF8", ::jdk::internal::util::xml::impl::ReaderUTF8),
	$classEntry("jdk.internal.util.xml.impl.SAXParserImpl", ::jdk::internal::util::xml::impl::SAXParserImpl),
	$classEntry("jdk.internal.util.xml.impl.XMLStreamWriterImpl", ::jdk::internal::util::xml::impl::XMLStreamWriterImpl),
	$classEntry("jdk.internal.util.xml.impl.XMLStreamWriterImpl$Element", ::jdk::internal::util::xml::impl::XMLStreamWriterImpl$Element),
	$classEntry("jdk.internal.util.xml.impl.XMLWriter", ::jdk::internal::util::xml::impl::XMLWriter),
	$classEntry("jdk.internal.vm.VMSupport", ::jdk::internal::vm::VMSupport),
	$classEntry("jdk.internal.vm.annotation.Contended", ::jdk::internal::vm::annotation::Contended),
	$classEntry("jdk.internal.vm.annotation.DontInline", ::jdk::internal::vm::annotation::DontInline),
	$classEntry("jdk.internal.vm.annotation.ForceInline", ::jdk::internal::vm::annotation::ForceInline),
	$classEntry("jdk.internal.vm.annotation.Hidden", ::jdk::internal::vm::annotation::Hidden),
	$classEntry("jdk.internal.vm.annotation.IntrinsicCandidate", ::jdk::internal::vm::annotation::IntrinsicCandidate),
	$classEntry("jdk.internal.vm.annotation.ReservedStackAccess", ::jdk::internal::vm::annotation::ReservedStackAccess),
	$classEntry("jdk.internal.vm.annotation.Stable", ::jdk::internal::vm::annotation::Stable),
	$classEntry("jdk.internal.vm.vector.VectorSupport", ::jdk::internal::vm::vector::VectorSupport),
	$classEntry("jdk.internal.vm.vector.VectorSupport$BroadcastOperation", ::jdk::internal::vm::vector::VectorSupport$BroadcastOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$IndexOperation", ::jdk::internal::vm::vector::VectorSupport$IndexOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$LoadOperation", ::jdk::internal::vm::vector::VectorSupport$LoadOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$LoadVectorOperationWithMap", ::jdk::internal::vm::vector::VectorSupport$LoadVectorOperationWithMap),
	$classEntry("jdk.internal.vm.vector.VectorSupport$ShuffleIotaOperation", ::jdk::internal::vm::vector::VectorSupport$ShuffleIotaOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$ShuffleToVectorOperation", ::jdk::internal::vm::vector::VectorSupport$ShuffleToVectorOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$StoreVectorOperation", ::jdk::internal::vm::vector::VectorSupport$StoreVectorOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$StoreVectorOperationWithMap", ::jdk::internal::vm::vector::VectorSupport$StoreVectorOperationWithMap),
	$classEntry("jdk.internal.vm.vector.VectorSupport$TernaryOperation", ::jdk::internal::vm::vector::VectorSupport$TernaryOperation),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VecExtractOp", ::jdk::internal::vm::vector::VectorSupport$VecExtractOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VecInsertOp", ::jdk::internal::vm::vector::VectorSupport$VecInsertOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$Vector", ::jdk::internal::vm::vector::VectorSupport$Vector),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorBlendOp", ::jdk::internal::vm::vector::VectorSupport$VectorBlendOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorBroadcastIntOp", ::jdk::internal::vm::vector::VectorSupport$VectorBroadcastIntOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorCompareOp", ::jdk::internal::vm::vector::VectorSupport$VectorCompareOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorConvertOp", ::jdk::internal::vm::vector::VectorSupport$VectorConvertOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorMask", ::jdk::internal::vm::vector::VectorSupport$VectorMask),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorMaskOp", ::jdk::internal::vm::vector::VectorSupport$VectorMaskOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorPayload", ::jdk::internal::vm::vector::VectorSupport$VectorPayload),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorRearrangeOp", ::jdk::internal::vm::vector::VectorSupport$VectorRearrangeOp),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorShuffle", ::jdk::internal::vm::vector::VectorSupport$VectorShuffle),
	$classEntry("jdk.internal.vm.vector.VectorSupport$VectorSpecies", ::jdk::internal::vm::vector::VectorSupport$VectorSpecies),
	$classEntry("sun.invoke.WrapperInstance", ::sun::invoke::WrapperInstance),
	$classEntry("sun.invoke.empty.Empty", ::sun::invoke::empty::Empty),
	$classEntry("sun.invoke.util.BytecodeDescriptor", ::sun::invoke::util::BytecodeDescriptor),
	$classEntry("sun.invoke.util.BytecodeName", ::sun::invoke::util::BytecodeName),
	$classEntry("sun.invoke.util.ValueConversions", ::sun::invoke::util::ValueConversions),
	$classEntry("sun.invoke.util.ValueConversions$1", ::sun::invoke::util::ValueConversions$1),
	$classEntry("sun.invoke.util.ValueConversions$Handles", ::sun::invoke::util::ValueConversions$Handles),
	$classEntry("sun.invoke.util.ValueConversions$WrapperCache", ::sun::invoke::util::ValueConversions$WrapperCache),
	$classEntry("sun.invoke.util.VerifyAccess", ::sun::invoke::util::VerifyAccess),
	$classEntry("sun.invoke.util.VerifyAccess$1", ::sun::invoke::util::VerifyAccess$1),
	$classEntry("sun.invoke.util.VerifyType", ::sun::invoke::util::VerifyType),
	$classEntry("sun.invoke.util.Wrapper", ::sun::invoke::util::Wrapper),
	$classEntry("sun.invoke.util.Wrapper$1", ::sun::invoke::util::Wrapper$1),
	$classEntry("sun.invoke.util.Wrapper$Format", ::sun::invoke::util::Wrapper$Format),
	$classEntry("sun.launcher.LauncherHelper", ::sun::launcher::LauncherHelper),
	$classEntry("sun.launcher.LauncherHelper$FXHelper", ::sun::launcher::LauncherHelper$FXHelper),
	$classEntry("sun.launcher.LauncherHelper$JrtFirstComparator", ::sun::launcher::LauncherHelper$JrtFirstComparator),
	$classEntry("sun.launcher.LauncherHelper$ResourceBundleHolder", ::sun::launcher::LauncherHelper$ResourceBundleHolder),
	$classEntry("sun.launcher.LauncherHelper$SizePrefix", ::sun::launcher::LauncherHelper$SizePrefix),
	$classEntry("sun.launcher.LauncherHelper$StdArg", ::sun::launcher::LauncherHelper$StdArg),
	$classEntry("sun.launcher.resources.launcher", ::sun::launcher::resources::launcher),
	$classEntry("sun.launcher.resources.launcher_ja", ::sun::launcher::resources::launcher_ja),
	$classEntry("sun.launcher.resources.launcher_zh_CN", ::sun::launcher::resources::launcher_zh_CN),
	$classEntry("sun.net.ApplicationProxy", ::sun::net::ApplicationProxy),
	$classEntry("sun.net.ConnectionResetException", ::sun::net::ConnectionResetException),
	$classEntry("sun.net.DefaultProgressMeteringPolicy", ::sun::net::DefaultProgressMeteringPolicy),
	$classEntry("sun.net.InetAddressCachePolicy", ::sun::net::InetAddressCachePolicy),
	$classEntry("sun.net.InetAddressCachePolicy$1", ::sun::net::InetAddressCachePolicy$1),
	$classEntry("sun.net.InetAddressCachePolicy$2", ::sun::net::InetAddressCachePolicy$2),
	$classEntry("sun.net.NetHooks", ::sun::net::NetHooks),
	$classEntry("sun.net.NetHooks$Provider", ::sun::net::NetHooks$Provider),
	$classEntry("sun.net.NetProperties", ::sun::net::NetProperties),
	$classEntry("sun.net.NetProperties$1", ::sun::net::NetProperties$1),
	$classEntry("sun.net.NetworkClient", ::sun::net::NetworkClient),
	$classEntry("sun.net.NetworkClient$1", ::sun::net::NetworkClient$1),
	$classEntry("sun.net.NetworkClient$2", ::sun::net::NetworkClient$2),
	$classEntry("sun.net.NetworkClient$3", ::sun::net::NetworkClient$3),
	$classEntry("sun.net.PlatformSocketImpl", ::sun::net::PlatformSocketImpl),
	$classEntry("sun.net.PortConfig", ::sun::net::PortConfig),
	$classEntry("sun.net.ProgressEvent", ::sun::net::ProgressEvent),
	$classEntry("sun.net.ProgressListener", ::sun::net::ProgressListener),
	$classEntry("sun.net.ProgressMeteringPolicy", ::sun::net::ProgressMeteringPolicy),
	$classEntry("sun.net.ProgressMonitor", ::sun::net::ProgressMonitor),
	$classEntry("sun.net.ProgressSource", ::sun::net::ProgressSource),
	$classEntry("sun.net.ProgressSource$State", ::sun::net::ProgressSource$State),
	$classEntry("sun.net.ResourceManager", ::sun::net::ResourceManager),
	$classEntry("sun.net.SocksProxy", ::sun::net::SocksProxy),
	$classEntry("sun.net.TelnetInputStream", ::sun::net::TelnetInputStream),
	$classEntry("sun.net.TelnetOutputStream", ::sun::net::TelnetOutputStream),
	$classEntry("sun.net.TelnetProtocolException", ::sun::net::TelnetProtocolException),
	$classEntry("sun.net.TransferProtocolClient", ::sun::net::TransferProtocolClient),
	$classEntry("sun.net.dns.OptionsImpl", ::sun::net::dns::OptionsImpl),
	$classEntry("sun.net.dns.ResolverConfiguration", ::sun::net::dns::ResolverConfiguration),
	$classEntry("sun.net.dns.ResolverConfiguration$Options", ::sun::net::dns::ResolverConfiguration$Options),
	$classEntry("sun.net.dns.ResolverConfigurationImpl", ::sun::net::dns::ResolverConfigurationImpl),
	$classEntry("sun.net.dns.ResolverConfigurationImpl$1", ::sun::net::dns::ResolverConfigurationImpl$1),
	$classEntry("sun.net.dns.ResolverConfigurationImpl$2", ::sun::net::dns::ResolverConfigurationImpl$2),
	$classEntry("sun.net.dns.ResolverConfigurationImpl$3", ::sun::net::dns::ResolverConfigurationImpl$3),
	$classEntry("sun.net.ext.ExtendedSocketOptions", ::sun::net::ext::ExtendedSocketOptions),
	$classEntry("sun.net.ext.ExtendedSocketOptions$NoExtendedSocketOptions", ::sun::net::ext::ExtendedSocketOptions$NoExtendedSocketOptions),
	$classEntry("sun.net.ftp.FtpClient", ::sun::net::ftp::FtpClient),
	$classEntry("sun.net.ftp.FtpClient$TransferType", ::sun::net::ftp::FtpClient$TransferType),
	$classEntry("sun.net.ftp.FtpClientProvider", ::sun::net::ftp::FtpClientProvider),
	$classEntry("sun.net.ftp.FtpClientProvider$1", ::sun::net::ftp::FtpClientProvider$1),
	$classEntry("sun.net.ftp.FtpDirEntry", ::sun::net::ftp::FtpDirEntry),
	$classEntry("sun.net.ftp.FtpDirEntry$Permission", ::sun::net::ftp::FtpDirEntry$Permission),
	$classEntry("sun.net.ftp.FtpDirEntry$Type", ::sun::net::ftp::FtpDirEntry$Type),
	$classEntry("sun.net.ftp.FtpDirParser", ::sun::net::ftp::FtpDirParser),
	$classEntry("sun.net.ftp.FtpLoginException", ::sun::net::ftp::FtpLoginException),
	$classEntry("sun.net.ftp.FtpProtocolException", ::sun::net::ftp::FtpProtocolException),
	$classEntry("sun.net.ftp.FtpReplyCode", ::sun::net::ftp::FtpReplyCode),
	$classEntry("sun.net.ftp.impl.DefaultFtpClientProvider", ::sun::net::ftp::impl::DefaultFtpClientProvider),
	$classEntry("sun.net.ftp.impl.FtpClient", ::sun::net::ftp::impl::FtpClient),
	$classEntry("sun.net.ftp.impl.FtpClient$1", ::sun::net::ftp::impl::FtpClient$1),
	$classEntry("sun.net.ftp.impl.FtpClient$DefaultParser", ::sun::net::ftp::impl::FtpClient$DefaultParser),
	$classEntry("sun.net.ftp.impl.FtpClient$FtpFileIterator", ::sun::net::ftp::impl::FtpClient$FtpFileIterator),
	$classEntry("sun.net.ftp.impl.FtpClient$MLSxParser", ::sun::net::ftp::impl::FtpClient$MLSxParser),
	$classEntry("sun.net.sdp.SdpProvider", ::sun::net::sdp::SdpProvider),
	$classEntry("sun.net.sdp.SdpProvider$Action", ::sun::net::sdp::SdpProvider$Action),
	$classEntry("sun.net.sdp.SdpProvider$AddressPortRangeRule", ::sun::net::sdp::SdpProvider$AddressPortRangeRule),
	$classEntry("sun.net.sdp.SdpProvider$PortRangeRule", ::sun::net::sdp::SdpProvider$PortRangeRule),
	$classEntry("sun.net.sdp.SdpProvider$Rule", ::sun::net::sdp::SdpProvider$Rule),
	$classEntry("sun.net.sdp.SdpSupport", ::sun::net::sdp::SdpSupport),
	$classEntry("sun.net.smtp.SmtpClient", ::sun::net::smtp::SmtpClient),
	$classEntry("sun.net.smtp.SmtpPrintStream", ::sun::net::smtp::SmtpPrintStream),
	$classEntry("sun.net.smtp.SmtpProtocolException", ::sun::net::smtp::SmtpProtocolException),
	$classEntry("sun.net.spi.DefaultProxySelector", ::sun::net::spi::DefaultProxySelector),
	$classEntry("sun.net.spi.DefaultProxySelector$1", ::sun::net::spi::DefaultProxySelector$1),
	$classEntry("sun.net.spi.DefaultProxySelector$2", ::sun::net::spi::DefaultProxySelector$2),
	$classEntry("sun.net.spi.DefaultProxySelector$3", ::sun::net::spi::DefaultProxySelector$3),
	$classEntry("sun.net.spi.DefaultProxySelector$NonProxyInfo", ::sun::net::spi::DefaultProxySelector$NonProxyInfo),
	$classEntry("sun.net.util.IPAddressUtil", ::sun::net::util::IPAddressUtil),
	$classEntry("sun.net.util.SocketExceptions", ::sun::net::util::SocketExceptions),
	$classEntry("sun.net.util.SocketExceptions$1", ::sun::net::util::SocketExceptions$1),
	$classEntry("sun.net.util.URLUtil", ::sun::net::util::URLUtil),
	$classEntry("sun.net.www.HeaderParser", ::sun::net::www::HeaderParser),
	$classEntry("sun.net.www.HeaderParser$ParserIterator", ::sun::net::www::HeaderParser$ParserIterator),
	$classEntry("sun.net.www.MessageHeader", ::sun::net::www::MessageHeader),
	$classEntry("sun.net.www.MessageHeader$HeaderIterator", ::sun::net::www::MessageHeader$HeaderIterator),
	$classEntry("sun.net.www.MeteredStream", ::sun::net::www::MeteredStream),
	$classEntry("sun.net.www.MimeEntry", ::sun::net::www::MimeEntry),
	$classEntry("sun.net.www.MimeTable", ::sun::net::www::MimeTable),
	$classEntry("sun.net.www.MimeTable$1", ::sun::net::www::MimeTable$1),
	$classEntry("sun.net.www.MimeTable$DefaultInstanceHolder", ::sun::net::www::MimeTable$DefaultInstanceHolder),
	$classEntry("sun.net.www.MimeTable$DefaultInstanceHolder$1", ::sun::net::www::MimeTable$DefaultInstanceHolder$1),
	$classEntry("sun.net.www.ParseUtil", ::sun::net::www::ParseUtil),
	$classEntry("sun.net.www.URLConnection", ::sun::net::www::URLConnection),
	$classEntry("sun.net.www.content.text.Generic", ::sun::net::www::content::text::Generic),
	$classEntry("sun.net.www.content.text.PlainTextInputStream", ::sun::net::www::content::text::PlainTextInputStream),
	$classEntry("sun.net.www.content.text.plain", ::sun::net::www::content::text::plain),
	$classEntry("sun.net.www.http.ChunkedInputStream", ::sun::net::www::http::ChunkedInputStream),
	$classEntry("sun.net.www.http.ChunkedOutputStream", ::sun::net::www::http::ChunkedOutputStream),
	$classEntry("sun.net.www.http.ClientVector", ::sun::net::www::http::ClientVector),
	$classEntry("sun.net.www.http.HttpCapture", ::sun::net::www::http::HttpCapture),
	$classEntry("sun.net.www.http.HttpCapture$1", ::sun::net::www::http::HttpCapture$1),
	$classEntry("sun.net.www.http.HttpCaptureInputStream", ::sun::net::www::http::HttpCaptureInputStream),
	$classEntry("sun.net.www.http.HttpCaptureOutputStream", ::sun::net::www::http::HttpCaptureOutputStream),
	$classEntry("sun.net.www.http.HttpClient", ::sun::net::www::http::HttpClient),
	$classEntry("sun.net.www.http.HttpClient$1", ::sun::net::www::http::HttpClient$1),
	$classEntry("sun.net.www.http.Hurryable", ::sun::net::www::http::Hurryable),
	$classEntry("sun.net.www.http.KeepAliveCache", ::sun::net::www::http::KeepAliveCache),
	$classEntry("sun.net.www.http.KeepAliveCache$1", ::sun::net::www::http::KeepAliveCache$1),
	$classEntry("sun.net.www.http.KeepAliveCleanerEntry", ::sun::net::www::http::KeepAliveCleanerEntry),
	$classEntry("sun.net.www.http.KeepAliveEntry", ::sun::net::www::http::KeepAliveEntry),
	$classEntry("sun.net.www.http.KeepAliveKey", ::sun::net::www::http::KeepAliveKey),
	$classEntry("sun.net.www.http.KeepAliveStream", ::sun::net::www::http::KeepAliveStream),
	$classEntry("sun.net.www.http.KeepAliveStream$1", ::sun::net::www::http::KeepAliveStream$1),
	$classEntry("sun.net.www.http.KeepAliveStreamCleaner", ::sun::net::www::http::KeepAliveStreamCleaner),
	$classEntry("sun.net.www.http.KeepAliveStreamCleaner$1", ::sun::net::www::http::KeepAliveStreamCleaner$1),
	$classEntry("sun.net.www.http.KeepAliveStreamCleaner$2", ::sun::net::www::http::KeepAliveStreamCleaner$2),
	$classEntry("sun.net.www.http.PosterOutputStream", ::sun::net::www::http::PosterOutputStream),
	$classEntry("sun.net.www.protocol.file.FileURLConnection", ::sun::net::www::protocol::file::FileURLConnection),
	$classEntry("sun.net.www.protocol.file.Handler", ::sun::net::www::protocol::file::Handler),
	$classEntry("sun.net.www.protocol.ftp.FtpURLConnection", ::sun::net::www::protocol::ftp::FtpURLConnection),
	$classEntry("sun.net.www.protocol.ftp.FtpURLConnection$1", ::sun::net::www::protocol::ftp::FtpURLConnection$1),
	$classEntry("sun.net.www.protocol.ftp.FtpURLConnection$FtpInputStream", ::sun::net::www::protocol::ftp::FtpURLConnection$FtpInputStream),
	$classEntry("sun.net.www.protocol.ftp.FtpURLConnection$FtpOutputStream", ::sun::net::www::protocol::ftp::FtpURLConnection$FtpOutputStream),
	$classEntry("sun.net.www.protocol.ftp.Handler", ::sun::net::www::protocol::ftp::Handler),
	$classEntry("sun.net.www.protocol.http.AuthCache", ::sun::net::www::protocol::http::AuthCache),
	$classEntry("sun.net.www.protocol.http.AuthCacheImpl", ::sun::net::www::protocol::http::AuthCacheImpl),
	$classEntry("sun.net.www.protocol.http.AuthCacheValue", ::sun::net::www::protocol::http::AuthCacheValue),
	$classEntry("sun.net.www.protocol.http.AuthCacheValue$Type", ::sun::net::www::protocol::http::AuthCacheValue$Type),
	$classEntry("sun.net.www.protocol.http.AuthScheme", ::sun::net::www::protocol::http::AuthScheme),
	$classEntry("sun.net.www.protocol.http.AuthenticationHeader", ::sun::net::www::protocol::http::AuthenticationHeader),
	$classEntry("sun.net.www.protocol.http.AuthenticationHeader$SchemeMapValue", ::sun::net::www::protocol::http::AuthenticationHeader$SchemeMapValue),
	$classEntry("sun.net.www.protocol.http.AuthenticationInfo", ::sun::net::www::protocol::http::AuthenticationInfo),
	$classEntry("sun.net.www.protocol.http.AuthenticatorKeys", ::sun::net::www::protocol::http::AuthenticatorKeys),
	$classEntry("sun.net.www.protocol.http.AuthenticatorKeys$AuthenticatorKeyAccess", ::sun::net::www::protocol::http::AuthenticatorKeys$AuthenticatorKeyAccess),
	$classEntry("sun.net.www.protocol.http.BasicAuthentication", ::sun::net::www::protocol::http::BasicAuthentication),
	$classEntry("sun.net.www.protocol.http.DigestAuthentication", ::sun::net::www::protocol::http::DigestAuthentication),
	$classEntry("sun.net.www.protocol.http.DigestAuthentication$1", ::sun::net::www::protocol::http::DigestAuthentication$1),
	$classEntry("sun.net.www.protocol.http.DigestAuthentication$Parameters", ::sun::net::www::protocol::http::DigestAuthentication$Parameters),
	$classEntry("sun.net.www.protocol.http.EmptyInputStream", ::sun::net::www::protocol::http::EmptyInputStream),
	$classEntry("sun.net.www.protocol.http.Handler", ::sun::net::www::protocol::http::Handler),
	$classEntry("sun.net.www.protocol.http.HttpAuthenticator", ::sun::net::www::protocol::http::HttpAuthenticator),
	$classEntry("sun.net.www.protocol.http.HttpCallerInfo", ::sun::net::www::protocol::http::HttpCallerInfo),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection", ::sun::net::www::protocol::http::HttpURLConnection),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$1", ::sun::net::www::protocol::http::HttpURLConnection$1),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$10", ::sun::net::www::protocol::http::HttpURLConnection$10),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$11", ::sun::net::www::protocol::http::HttpURLConnection$11),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$12", ::sun::net::www::protocol::http::HttpURLConnection$12),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$13", ::sun::net::www::protocol::http::HttpURLConnection$13),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$2", ::sun::net::www::protocol::http::HttpURLConnection$2),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$3", ::sun::net::www::protocol::http::HttpURLConnection$3),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$4", ::sun::net::www::protocol::http::HttpURLConnection$4),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$5", ::sun::net::www::protocol::http::HttpURLConnection$5),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$6", ::sun::net::www::protocol::http::HttpURLConnection$6),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$7", ::sun::net::www::protocol::http::HttpURLConnection$7),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$8", ::sun::net::www::protocol::http::HttpURLConnection$8),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$9", ::sun::net::www::protocol::http::HttpURLConnection$9),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$ErrorStream", ::sun::net::www::protocol::http::HttpURLConnection$ErrorStream),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$HttpInputStream", ::sun::net::www::protocol::http::HttpURLConnection$HttpInputStream),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$StreamingOutputStream", ::sun::net::www::protocol::http::HttpURLConnection$StreamingOutputStream),
	$classEntry("sun.net.www.protocol.http.HttpURLConnection$TunnelState", ::sun::net::www::protocol::http::HttpURLConnection$TunnelState),
	$classEntry("sun.net.www.protocol.http.NTLMAuthenticationProxy", ::sun::net::www::protocol::http::NTLMAuthenticationProxy),
	$classEntry("sun.net.www.protocol.http.NegotiateAuthentication", ::sun::net::www::protocol::http::NegotiateAuthentication),
	$classEntry("sun.net.www.protocol.http.NegotiateAuthentication$1", ::sun::net::www::protocol::http::NegotiateAuthentication$1),
	$classEntry("sun.net.www.protocol.http.Negotiator", ::sun::net::www::protocol::http::Negotiator),
	$classEntry("sun.net.www.protocol.http.ntlm.NTLMAuthentication", ::sun::net::www::protocol::http::ntlm::NTLMAuthentication),
	$classEntry("sun.net.www.protocol.http.ntlm.NTLMAuthentication$1", ::sun::net::www::protocol::http::ntlm::NTLMAuthentication$1),
	$classEntry("sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback", ::sun::net::www::protocol::http::ntlm::NTLMAuthenticationCallback),
	$classEntry("sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection", ::sun::net::www::protocol::https::AbstractDelegateHttpsURLConnection),
	$classEntry("sun.net.www.protocol.https.DelegateHttpsURLConnection", ::sun::net::www::protocol::https::DelegateHttpsURLConnection),
	$classEntry("sun.net.www.protocol.https.Handler", ::sun::net::www::protocol::https::Handler),
	$classEntry("sun.net.www.protocol.https.HttpsClient", ::sun::net::www::protocol::https::HttpsClient),
	$classEntry("sun.net.www.protocol.https.HttpsURLConnectionImpl", ::sun::net::www::protocol::https::HttpsURLConnectionImpl),
	$classEntry("sun.net.www.protocol.jar.Handler", ::sun::net::www::protocol::jar::Handler),
	$classEntry("sun.net.www.protocol.jar.JarFileFactory", ::sun::net::www::protocol::jar::JarFileFactory),
	$classEntry("sun.net.www.protocol.jar.JarURLConnection", ::sun::net::www::protocol::jar::JarURLConnection),
	$classEntry("sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream", ::sun::net::www::protocol::jar::JarURLConnection$JarURLInputStream),
	$classEntry("sun.net.www.protocol.jar.URLJarFile", ::sun::net::www::protocol::jar::URLJarFile),
	$classEntry("sun.net.www.protocol.jar.URLJarFile$1", ::sun::net::www::protocol::jar::URLJarFile$1),
	$classEntry("sun.net.www.protocol.jar.URLJarFile$URLJarFileCloseController", ::sun::net::www::protocol::jar::URLJarFile$URLJarFileCloseController),
	$classEntry("sun.net.www.protocol.jar.URLJarFile$URLJarFileEntry", ::sun::net::www::protocol::jar::URLJarFile$URLJarFileEntry),
	$classEntry("sun.net.www.protocol.jar.URLJarFileCallBack", ::sun::net::www::protocol::jar::URLJarFileCallBack),
	$classEntry("sun.net.www.protocol.jmod.Handler", ::sun::net::www::protocol::jmod::Handler),
	$classEntry("sun.net.www.protocol.jrt.Handler", ::sun::net::www::protocol::jrt::Handler),
	$classEntry("sun.net.www.protocol.jrt.JavaRuntimeURLConnection", ::sun::net::www::protocol::jrt::JavaRuntimeURLConnection),
	$classEntry("sun.net.www.protocol.jrt.JavaRuntimeURLConnection$1", ::sun::net::www::protocol::jrt::JavaRuntimeURLConnection$1),
	$classEntry("sun.net.www.protocol.mailto.Handler", ::sun::net::www::protocol::mailto::Handler),
	$classEntry("sun.net.www.protocol.mailto.MailToURLConnection", ::sun::net::www::protocol::mailto::MailToURLConnection),
	$classEntry("sun.nio.ByteBuffered", ::sun::nio::ByteBuffered),
	$classEntry("sun.nio.ch.AllocatedNativeObject", ::sun::nio::ch::AllocatedNativeObject),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl", ::sun::nio::ch::AsynchronousChannelGroupImpl),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl$1", ::sun::nio::ch::AsynchronousChannelGroupImpl$1),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl$2", ::sun::nio::ch::AsynchronousChannelGroupImpl$2),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl$3", ::sun::nio::ch::AsynchronousChannelGroupImpl$3),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl$4", ::sun::nio::ch::AsynchronousChannelGroupImpl$4),
	$classEntry("sun.nio.ch.AsynchronousChannelGroupImpl$4$1", ::sun::nio::ch::AsynchronousChannelGroupImpl$4$1),
	$classEntry("sun.nio.ch.AsynchronousFileChannelImpl", ::sun::nio::ch::AsynchronousFileChannelImpl),
	$classEntry("sun.nio.ch.AsynchronousServerSocketChannelImpl", ::sun::nio::ch::AsynchronousServerSocketChannelImpl),
	$classEntry("sun.nio.ch.AsynchronousServerSocketChannelImpl$DefaultOptionsHolder", ::sun::nio::ch::AsynchronousServerSocketChannelImpl$DefaultOptionsHolder),
	$classEntry("sun.nio.ch.AsynchronousSocketChannelImpl", ::sun::nio::ch::AsynchronousSocketChannelImpl),
	$classEntry("sun.nio.ch.AsynchronousSocketChannelImpl$DefaultOptionsHolder", ::sun::nio::ch::AsynchronousSocketChannelImpl$DefaultOptionsHolder),
	$classEntry("sun.nio.ch.BsdAsynchronousChannelProvider", ::sun::nio::ch::BsdAsynchronousChannelProvider),
	$classEntry("sun.nio.ch.Cancellable", ::sun::nio::ch::Cancellable),
	$classEntry("sun.nio.ch.ChannelInputStream", ::sun::nio::ch::ChannelInputStream),
	$classEntry("sun.nio.ch.CompletedFuture", ::sun::nio::ch::CompletedFuture),
	$classEntry("sun.nio.ch.DatagramChannelImpl", ::sun::nio::ch::DatagramChannelImpl),
	$classEntry("sun.nio.ch.DatagramChannelImpl$AbstractSelectableChannels", ::sun::nio::ch::DatagramChannelImpl$AbstractSelectableChannels),
	$classEntry("sun.nio.ch.DatagramChannelImpl$DefaultOptionsHolder", ::sun::nio::ch::DatagramChannelImpl$DefaultOptionsHolder),
	$classEntry("sun.nio.ch.DatagramDispatcher", ::sun::nio::ch::DatagramDispatcher),
	$classEntry("sun.nio.ch.DatagramSocketAdaptor", ::sun::nio::ch::DatagramSocketAdaptor),
	$classEntry("sun.nio.ch.DatagramSocketAdaptor$DatagramPackets", ::sun::nio::ch::DatagramSocketAdaptor$DatagramPackets),
	$classEntry("sun.nio.ch.DatagramSocketAdaptor$DatagramSockets", ::sun::nio::ch::DatagramSocketAdaptor$DatagramSockets),
	$classEntry("sun.nio.ch.DatagramSocketAdaptor$NetworkInterfaces", ::sun::nio::ch::DatagramSocketAdaptor$NetworkInterfaces),
	$classEntry("sun.nio.ch.DefaultAsynchronousChannelProvider", ::sun::nio::ch::DefaultAsynchronousChannelProvider),
	$classEntry("sun.nio.ch.DefaultSelectorProvider", ::sun::nio::ch::DefaultSelectorProvider),
	$classEntry("sun.nio.ch.DirectBuffer", ::sun::nio::ch::DirectBuffer),
	$classEntry("sun.nio.ch.DummySocketImpl", ::sun::nio::ch::DummySocketImpl),
	$classEntry("sun.nio.ch.ExtendedSocketOption", ::sun::nio::ch::ExtendedSocketOption),
	$classEntry("sun.nio.ch.ExtendedSocketOption$1", ::sun::nio::ch::ExtendedSocketOption$1),
	$classEntry("sun.nio.ch.FileChannelImpl", ::sun::nio::ch::FileChannelImpl),
	$classEntry("sun.nio.ch.FileChannelImpl$1", ::sun::nio::ch::FileChannelImpl$1),
	$classEntry("sun.nio.ch.FileChannelImpl$2", ::sun::nio::ch::FileChannelImpl$2),
	$classEntry("sun.nio.ch.FileChannelImpl$Closer", ::sun::nio::ch::FileChannelImpl$Closer),
	$classEntry("sun.nio.ch.FileChannelImpl$DefaultUnmapper", ::sun::nio::ch::FileChannelImpl$DefaultUnmapper),
	$classEntry("sun.nio.ch.FileChannelImpl$SyncUnmapper", ::sun::nio::ch::FileChannelImpl$SyncUnmapper),
	$classEntry("sun.nio.ch.FileChannelImpl$Unmapper", ::sun::nio::ch::FileChannelImpl$Unmapper),
	$classEntry("sun.nio.ch.FileDispatcher", ::sun::nio::ch::FileDispatcher),
	$classEntry("sun.nio.ch.FileDispatcherImpl", ::sun::nio::ch::FileDispatcherImpl),
	$classEntry("sun.nio.ch.FileKey", ::sun::nio::ch::FileKey),
	$classEntry("sun.nio.ch.FileLockImpl", ::sun::nio::ch::FileLockImpl),
	$classEntry("sun.nio.ch.FileLockTable", ::sun::nio::ch::FileLockTable),
	$classEntry("sun.nio.ch.FileLockTable$FileLockReference", ::sun::nio::ch::FileLockTable$FileLockReference),
	$classEntry("sun.nio.ch.Groupable", ::sun::nio::ch::Groupable),
	$classEntry("sun.nio.ch.IOStatus", ::sun::nio::ch::IOStatus),
	$classEntry("sun.nio.ch.IOUtil", ::sun::nio::ch::IOUtil),
	$classEntry("sun.nio.ch.IOUtil$LinkedRunnable", ::sun::nio::ch::IOUtil$LinkedRunnable),
	$classEntry("sun.nio.ch.IOUtil$Releaser", ::sun::nio::ch::IOUtil$Releaser),
	$classEntry("sun.nio.ch.IOVecWrapper", ::sun::nio::ch::IOVecWrapper),
	$classEntry("sun.nio.ch.IOVecWrapper$Deallocator", ::sun::nio::ch::IOVecWrapper$Deallocator),
	$classEntry("sun.nio.ch.InheritedChannel", ::sun::nio::ch::InheritedChannel),
	$classEntry("sun.nio.ch.InheritedChannel$InheritedDatagramChannelImpl", ::sun::nio::ch::InheritedChannel$InheritedDatagramChannelImpl),
	$classEntry("sun.nio.ch.InheritedChannel$InheritedServerSocketChannelImpl", ::sun::nio::ch::InheritedChannel$InheritedServerSocketChannelImpl),
	$classEntry("sun.nio.ch.InheritedChannel$InheritedSocketChannelImpl", ::sun::nio::ch::InheritedChannel$InheritedSocketChannelImpl),
	$classEntry("sun.nio.ch.Interruptible", ::sun::nio::ch::Interruptible),
	$classEntry("sun.nio.ch.Invoker", ::sun::nio::ch::Invoker),
	$classEntry("sun.nio.ch.Invoker$1", ::sun::nio::ch::Invoker$1),
	$classEntry("sun.nio.ch.Invoker$2", ::sun::nio::ch::Invoker$2),
	$classEntry("sun.nio.ch.Invoker$3", ::sun::nio::ch::Invoker$3),
	$classEntry("sun.nio.ch.Invoker$GroupAndInvokeCount", ::sun::nio::ch::Invoker$GroupAndInvokeCount),
	$classEntry("sun.nio.ch.KQueue", ::sun::nio::ch::KQueue),
	$classEntry("sun.nio.ch.KQueuePort", ::sun::nio::ch::KQueuePort),
	$classEntry("sun.nio.ch.KQueuePort$Event", ::sun::nio::ch::KQueuePort$Event),
	$classEntry("sun.nio.ch.KQueuePort$EventHandlerTask", ::sun::nio::ch::KQueuePort$EventHandlerTask),
	$classEntry("sun.nio.ch.KQueueSelectorImpl", ::sun::nio::ch::KQueueSelectorImpl),
	$classEntry("sun.nio.ch.KQueueSelectorProvider", ::sun::nio::ch::KQueueSelectorProvider),
	$classEntry("sun.nio.ch.MembershipKeyImpl", ::sun::nio::ch::MembershipKeyImpl),
	$classEntry("sun.nio.ch.MembershipKeyImpl$Type4", ::sun::nio::ch::MembershipKeyImpl$Type4),
	$classEntry("sun.nio.ch.MembershipKeyImpl$Type6", ::sun::nio::ch::MembershipKeyImpl$Type6),
	$classEntry("sun.nio.ch.MembershipRegistry", ::sun::nio::ch::MembershipRegistry),
	$classEntry("sun.nio.ch.MembershipRegistry$ThrowingConsumer", ::sun::nio::ch::MembershipRegistry$ThrowingConsumer),
	$classEntry("sun.nio.ch.NativeDispatcher", ::sun::nio::ch::NativeDispatcher),
	$classEntry("sun.nio.ch.NativeObject", ::sun::nio::ch::NativeObject),
	$classEntry("sun.nio.ch.NativeSocketAddress", ::sun::nio::ch::NativeSocketAddress),
	$classEntry("sun.nio.ch.NativeThread", ::sun::nio::ch::NativeThread),
	$classEntry("sun.nio.ch.NativeThreadSet", ::sun::nio::ch::NativeThreadSet),
	$classEntry("sun.nio.ch.Net", ::sun::nio::ch::Net),
	$classEntry("sun.nio.ch.Net$1", ::sun::nio::ch::Net$1),
	$classEntry("sun.nio.ch.Net$2", ::sun::nio::ch::Net$2),
	$classEntry("sun.nio.ch.NioSocketImpl", ::sun::nio::ch::NioSocketImpl),
	$classEntry("sun.nio.ch.NioSocketImpl$1", ::sun::nio::ch::NioSocketImpl$1),
	$classEntry("sun.nio.ch.NioSocketImpl$2", ::sun::nio::ch::NioSocketImpl$2),
	$classEntry("sun.nio.ch.OptionKey", ::sun::nio::ch::OptionKey),
	$classEntry("sun.nio.ch.PendingFuture", ::sun::nio::ch::PendingFuture),
	$classEntry("sun.nio.ch.PipeImpl", ::sun::nio::ch::PipeImpl),
	$classEntry("sun.nio.ch.PollArrayWrapper", ::sun::nio::ch::PollArrayWrapper),
	$classEntry("sun.nio.ch.PollSelectorImpl", ::sun::nio::ch::PollSelectorImpl),
	$classEntry("sun.nio.ch.PollSelectorProvider", ::sun::nio::ch::PollSelectorProvider),
	$classEntry("sun.nio.ch.Port", ::sun::nio::ch::Port),
	$classEntry("sun.nio.ch.Port$1", ::sun::nio::ch::Port$1),
	$classEntry("sun.nio.ch.Port$PollableChannel", ::sun::nio::ch::Port$PollableChannel),
	$classEntry("sun.nio.ch.Reflect", ::sun::nio::ch::Reflect),
	$classEntry("sun.nio.ch.Reflect$1", ::sun::nio::ch::Reflect$1),
	$classEntry("sun.nio.ch.Reflect$ReflectionError", ::sun::nio::ch::Reflect$ReflectionError),
	$classEntry("sun.nio.ch.SelChImpl", ::sun::nio::ch::SelChImpl),
	$classEntry("sun.nio.ch.SelectionKeyImpl", ::sun::nio::ch::SelectionKeyImpl),
	$classEntry("sun.nio.ch.SelectorImpl", ::sun::nio::ch::SelectorImpl),
	$classEntry("sun.nio.ch.SelectorProviderImpl", ::sun::nio::ch::SelectorProviderImpl),
	$classEntry("sun.nio.ch.ServerSocketAdaptor", ::sun::nio::ch::ServerSocketAdaptor),
	$classEntry("sun.nio.ch.ServerSocketChannelImpl", ::sun::nio::ch::ServerSocketChannelImpl),
	$classEntry("sun.nio.ch.ServerSocketChannelImpl$DefaultOptionsHolder", ::sun::nio::ch::ServerSocketChannelImpl$DefaultOptionsHolder),
	$classEntry("sun.nio.ch.SimpleAsynchronousFileChannelImpl", ::sun::nio::ch::SimpleAsynchronousFileChannelImpl),
	$classEntry("sun.nio.ch.SimpleAsynchronousFileChannelImpl$1", ::sun::nio::ch::SimpleAsynchronousFileChannelImpl$1),
	$classEntry("sun.nio.ch.SimpleAsynchronousFileChannelImpl$2", ::sun::nio::ch::SimpleAsynchronousFileChannelImpl$2),
	$classEntry("sun.nio.ch.SimpleAsynchronousFileChannelImpl$3", ::sun::nio::ch::SimpleAsynchronousFileChannelImpl$3),
	$classEntry("sun.nio.ch.SimpleAsynchronousFileChannelImpl$DefaultExecutorHolder", ::sun::nio::ch::SimpleAsynchronousFileChannelImpl$DefaultExecutorHolder),
	$classEntry("sun.nio.ch.SinkChannelImpl", ::sun::nio::ch::SinkChannelImpl),
	$classEntry("sun.nio.ch.SocketAdaptor", ::sun::nio::ch::SocketAdaptor),
	$classEntry("sun.nio.ch.SocketAdaptor$1", ::sun::nio::ch::SocketAdaptor$1),
	$classEntry("sun.nio.ch.SocketAdaptor$2", ::sun::nio::ch::SocketAdaptor$2),
	$classEntry("sun.nio.ch.SocketChannelImpl", ::sun::nio::ch::SocketChannelImpl),
	$classEntry("sun.nio.ch.SocketChannelImpl$DefaultOptionsHolder", ::sun::nio::ch::SocketChannelImpl$DefaultOptionsHolder),
	$classEntry("sun.nio.ch.SocketDispatcher", ::sun::nio::ch::SocketDispatcher),
	$classEntry("sun.nio.ch.SocketOptionRegistry", ::sun::nio::ch::SocketOptionRegistry),
	$classEntry("sun.nio.ch.SocketOptionRegistry$LazyInitialization", ::sun::nio::ch::SocketOptionRegistry$LazyInitialization),
	$classEntry("sun.nio.ch.SocketOptionRegistry$RegistryKey", ::sun::nio::ch::SocketOptionRegistry$RegistryKey),
	$classEntry("sun.nio.ch.SourceChannelImpl", ::sun::nio::ch::SourceChannelImpl),
	$classEntry("sun.nio.ch.ThreadPool", ::sun::nio::ch::ThreadPool),
	$classEntry("sun.nio.ch.ThreadPool$DefaultThreadPoolHolder", ::sun::nio::ch::ThreadPool$DefaultThreadPoolHolder),
	$classEntry("sun.nio.ch.UnixAsynchronousServerSocketChannelImpl", ::sun::nio::ch::UnixAsynchronousServerSocketChannelImpl),
	$classEntry("sun.nio.ch.UnixAsynchronousServerSocketChannelImpl$1", ::sun::nio::ch::UnixAsynchronousServerSocketChannelImpl$1),
	$classEntry("sun.nio.ch.UnixAsynchronousSocketChannelImpl", ::sun::nio::ch::UnixAsynchronousSocketChannelImpl),
	$classEntry("sun.nio.ch.UnixAsynchronousSocketChannelImpl$1", ::sun::nio::ch::UnixAsynchronousSocketChannelImpl$1),
	$classEntry("sun.nio.ch.UnixAsynchronousSocketChannelImpl$2", ::sun::nio::ch::UnixAsynchronousSocketChannelImpl$2),
	$classEntry("sun.nio.ch.UnixAsynchronousSocketChannelImpl$OpType", ::sun::nio::ch::UnixAsynchronousSocketChannelImpl$OpType),
	$classEntry("sun.nio.ch.UnixDomainSockets", ::sun::nio::ch::UnixDomainSockets),
	$classEntry("sun.nio.ch.UnixDomainSocketsUtil", ::sun::nio::ch::UnixDomainSocketsUtil),
	$classEntry("sun.nio.ch.Util", ::sun::nio::ch::Util),
	$classEntry("sun.nio.ch.Util$1", ::sun::nio::ch::Util$1),
	$classEntry("sun.nio.ch.Util$2", ::sun::nio::ch::Util$2),
	$classEntry("sun.nio.ch.Util$3", ::sun::nio::ch::Util$3),
	$classEntry("sun.nio.ch.Util$4", ::sun::nio::ch::Util$4),
	$classEntry("sun.nio.ch.Util$BufferCache", ::sun::nio::ch::Util$BufferCache),
	$classEntry("sun.nio.cs.ArrayDecoder", ::sun::nio::cs::ArrayDecoder),
	$classEntry("sun.nio.cs.ArrayEncoder", ::sun::nio::cs::ArrayEncoder),
	$classEntry("sun.nio.cs.CESU_8", ::sun::nio::cs::CESU_8),
	$classEntry("sun.nio.cs.CESU_8$Decoder", ::sun::nio::cs::CESU_8$Decoder),
	$classEntry("sun.nio.cs.CESU_8$Encoder", ::sun::nio::cs::CESU_8$Encoder),
	$classEntry("sun.nio.cs.CharsetMapping", ::sun::nio::cs::CharsetMapping),
	$classEntry("sun.nio.cs.CharsetMapping$1", ::sun::nio::cs::CharsetMapping$1),
	$classEntry("sun.nio.cs.CharsetMapping$2", ::sun::nio::cs::CharsetMapping$2),
	$classEntry("sun.nio.cs.CharsetMapping$3", ::sun::nio::cs::CharsetMapping$3),
	$classEntry("sun.nio.cs.CharsetMapping$4", ::sun::nio::cs::CharsetMapping$4),
	$classEntry("sun.nio.cs.CharsetMapping$Entry", ::sun::nio::cs::CharsetMapping$Entry),
	$classEntry("sun.nio.cs.DelegatableDecoder", ::sun::nio::cs::DelegatableDecoder),
	$classEntry("sun.nio.cs.DoubleByte", ::sun::nio::cs::DoubleByte),
	$classEntry("sun.nio.cs.DoubleByte$Decoder", ::sun::nio::cs::DoubleByte$Decoder),
	$classEntry("sun.nio.cs.DoubleByte$Decoder_DBCSONLY", ::sun::nio::cs::DoubleByte$Decoder_DBCSONLY),
	$classEntry("sun.nio.cs.DoubleByte$Decoder_EBCDIC", ::sun::nio::cs::DoubleByte$Decoder_EBCDIC),
	$classEntry("sun.nio.cs.DoubleByte$Decoder_EUC_SIM", ::sun::nio::cs::DoubleByte$Decoder_EUC_SIM),
	$classEntry("sun.nio.cs.DoubleByte$Encoder", ::sun::nio::cs::DoubleByte$Encoder),
	$classEntry("sun.nio.cs.DoubleByte$Encoder_DBCSONLY", ::sun::nio::cs::DoubleByte$Encoder_DBCSONLY),
	$classEntry("sun.nio.cs.DoubleByte$Encoder_EBCDIC", ::sun::nio::cs::DoubleByte$Encoder_EBCDIC),
	$classEntry("sun.nio.cs.DoubleByte$Encoder_EUC_SIM", ::sun::nio::cs::DoubleByte$Encoder_EUC_SIM),
	$classEntry("sun.nio.cs.GB18030", ::sun::nio::cs::GB18030),
	$classEntry("sun.nio.cs.GB18030$Decoder", ::sun::nio::cs::GB18030$Decoder),
	$classEntry("sun.nio.cs.GB18030$Encoder", ::sun::nio::cs::GB18030$Encoder),
	$classEntry("sun.nio.cs.GBK", ::sun::nio::cs::GBK),
	$classEntry("sun.nio.cs.GBK$DecodeHolder", ::sun::nio::cs::GBK$DecodeHolder),
	$classEntry("sun.nio.cs.GBK$EncodeHolder", ::sun::nio::cs::GBK$EncodeHolder),
	$classEntry("sun.nio.cs.HKSCS", ::sun::nio::cs::HKSCS),
	$classEntry("sun.nio.cs.HKSCS$Decoder", ::sun::nio::cs::HKSCS$Decoder),
	$classEntry("sun.nio.cs.HKSCS$Encoder", ::sun::nio::cs::HKSCS$Encoder),
	$classEntry("sun.nio.cs.HKSCSMapping", ::sun::nio::cs::HKSCSMapping),
	$classEntry("sun.nio.cs.HKSCS_XPMapping", ::sun::nio::cs::HKSCS_XPMapping),
	$classEntry("sun.nio.cs.HistoricallyNamedCharset", ::sun::nio::cs::HistoricallyNamedCharset),
	$classEntry("sun.nio.cs.IBM437", ::sun::nio::cs::IBM437),
	$classEntry("sun.nio.cs.IBM437$Holder", ::sun::nio::cs::IBM437$Holder),
	$classEntry("sun.nio.cs.IBM737", ::sun::nio::cs::IBM737),
	$classEntry("sun.nio.cs.IBM737$Holder", ::sun::nio::cs::IBM737$Holder),
	$classEntry("sun.nio.cs.IBM775", ::sun::nio::cs::IBM775),
	$classEntry("sun.nio.cs.IBM775$Holder", ::sun::nio::cs::IBM775$Holder),
	$classEntry("sun.nio.cs.IBM850", ::sun::nio::cs::IBM850),
	$classEntry("sun.nio.cs.IBM850$Holder", ::sun::nio::cs::IBM850$Holder),
	$classEntry("sun.nio.cs.IBM852", ::sun::nio::cs::IBM852),
	$classEntry("sun.nio.cs.IBM852$Holder", ::sun::nio::cs::IBM852$Holder),
	$classEntry("sun.nio.cs.IBM855", ::sun::nio::cs::IBM855),
	$classEntry("sun.nio.cs.IBM855$Holder", ::sun::nio::cs::IBM855$Holder),
	$classEntry("sun.nio.cs.IBM857", ::sun::nio::cs::IBM857),
	$classEntry("sun.nio.cs.IBM857$Holder", ::sun::nio::cs::IBM857$Holder),
	$classEntry("sun.nio.cs.IBM858", ::sun::nio::cs::IBM858),
	$classEntry("sun.nio.cs.IBM858$Holder", ::sun::nio::cs::IBM858$Holder),
	$classEntry("sun.nio.cs.IBM862", ::sun::nio::cs::IBM862),
	$classEntry("sun.nio.cs.IBM862$Holder", ::sun::nio::cs::IBM862$Holder),
	$classEntry("sun.nio.cs.IBM866", ::sun::nio::cs::IBM866),
	$classEntry("sun.nio.cs.IBM866$Holder", ::sun::nio::cs::IBM866$Holder),
	$classEntry("sun.nio.cs.IBM874", ::sun::nio::cs::IBM874),
	$classEntry("sun.nio.cs.IBM874$Holder", ::sun::nio::cs::IBM874$Holder),
	$classEntry("sun.nio.cs.ISO_8859_1", ::sun::nio::cs::ISO_8859_1),
	$classEntry("sun.nio.cs.ISO_8859_1$Decoder", ::sun::nio::cs::ISO_8859_1$Decoder),
	$classEntry("sun.nio.cs.ISO_8859_1$Encoder", ::sun::nio::cs::ISO_8859_1$Encoder),
	$classEntry("sun.nio.cs.ISO_8859_13", ::sun::nio::cs::ISO_8859_13),
	$classEntry("sun.nio.cs.ISO_8859_13$Holder", ::sun::nio::cs::ISO_8859_13$Holder),
	$classEntry("sun.nio.cs.ISO_8859_15", ::sun::nio::cs::ISO_8859_15),
	$classEntry("sun.nio.cs.ISO_8859_15$Holder", ::sun::nio::cs::ISO_8859_15$Holder),
	$classEntry("sun.nio.cs.ISO_8859_16", ::sun::nio::cs::ISO_8859_16),
	$classEntry("sun.nio.cs.ISO_8859_16$Holder", ::sun::nio::cs::ISO_8859_16$Holder),
	$classEntry("sun.nio.cs.ISO_8859_2", ::sun::nio::cs::ISO_8859_2),
	$classEntry("sun.nio.cs.ISO_8859_2$Holder", ::sun::nio::cs::ISO_8859_2$Holder),
	$classEntry("sun.nio.cs.ISO_8859_4", ::sun::nio::cs::ISO_8859_4),
	$classEntry("sun.nio.cs.ISO_8859_4$Holder", ::sun::nio::cs::ISO_8859_4$Holder),
	$classEntry("sun.nio.cs.ISO_8859_5", ::sun::nio::cs::ISO_8859_5),
	$classEntry("sun.nio.cs.ISO_8859_5$Holder", ::sun::nio::cs::ISO_8859_5$Holder),
	$classEntry("sun.nio.cs.ISO_8859_7", ::sun::nio::cs::ISO_8859_7),
	$classEntry("sun.nio.cs.ISO_8859_7$Holder", ::sun::nio::cs::ISO_8859_7$Holder),
	$classEntry("sun.nio.cs.ISO_8859_9", ::sun::nio::cs::ISO_8859_9),
	$classEntry("sun.nio.cs.ISO_8859_9$Holder", ::sun::nio::cs::ISO_8859_9$Holder),
	$classEntry("sun.nio.cs.JIS_X_0201", ::sun::nio::cs::JIS_X_0201),
	$classEntry("sun.nio.cs.JIS_X_0201$Holder", ::sun::nio::cs::JIS_X_0201$Holder),
	$classEntry("sun.nio.cs.Johab", ::sun::nio::cs::Johab),
	$classEntry("sun.nio.cs.Johab$DecodeHolder", ::sun::nio::cs::Johab$DecodeHolder),
	$classEntry("sun.nio.cs.Johab$EncodeHolder", ::sun::nio::cs::Johab$EncodeHolder),
	$classEntry("sun.nio.cs.KOI8_R", ::sun::nio::cs::KOI8_R),
	$classEntry("sun.nio.cs.KOI8_R$Holder", ::sun::nio::cs::KOI8_R$Holder),
	$classEntry("sun.nio.cs.KOI8_U", ::sun::nio::cs::KOI8_U),
	$classEntry("sun.nio.cs.KOI8_U$Holder", ::sun::nio::cs::KOI8_U$Holder),
	$classEntry("sun.nio.cs.MS1250", ::sun::nio::cs::MS1250),
	$classEntry("sun.nio.cs.MS1250$Holder", ::sun::nio::cs::MS1250$Holder),
	$classEntry("sun.nio.cs.MS1251", ::sun::nio::cs::MS1251),
	$classEntry("sun.nio.cs.MS1251$Holder", ::sun::nio::cs::MS1251$Holder),
	$classEntry("sun.nio.cs.MS1252", ::sun::nio::cs::MS1252),
	$classEntry("sun.nio.cs.MS1252$Holder", ::sun::nio::cs::MS1252$Holder),
	$classEntry("sun.nio.cs.MS1253", ::sun::nio::cs::MS1253),
	$classEntry("sun.nio.cs.MS1253$Holder", ::sun::nio::cs::MS1253$Holder),
	$classEntry("sun.nio.cs.MS1254", ::sun::nio::cs::MS1254),
	$classEntry("sun.nio.cs.MS1254$Holder", ::sun::nio::cs::MS1254$Holder),
	$classEntry("sun.nio.cs.MS1255", ::sun::nio::cs::MS1255),
	$classEntry("sun.nio.cs.MS1255$Holder", ::sun::nio::cs::MS1255$Holder),
	$classEntry("sun.nio.cs.MS1256", ::sun::nio::cs::MS1256),
	$classEntry("sun.nio.cs.MS1256$Holder", ::sun::nio::cs::MS1256$Holder),
	$classEntry("sun.nio.cs.MS1257", ::sun::nio::cs::MS1257),
	$classEntry("sun.nio.cs.MS1257$Holder", ::sun::nio::cs::MS1257$Holder),
	$classEntry("sun.nio.cs.MS1258", ::sun::nio::cs::MS1258),
	$classEntry("sun.nio.cs.MS1258$Holder", ::sun::nio::cs::MS1258$Holder),
	$classEntry("sun.nio.cs.MS874", ::sun::nio::cs::MS874),
	$classEntry("sun.nio.cs.MS874$Holder", ::sun::nio::cs::MS874$Holder),
	$classEntry("sun.nio.cs.MS932", ::sun::nio::cs::MS932),
	$classEntry("sun.nio.cs.MS932$DecodeHolder", ::sun::nio::cs::MS932$DecodeHolder),
	$classEntry("sun.nio.cs.MS932$EncodeHolder", ::sun::nio::cs::MS932$EncodeHolder),
	$classEntry("sun.nio.cs.MS936", ::sun::nio::cs::MS936),
	$classEntry("sun.nio.cs.MS936$DecodeHolder", ::sun::nio::cs::MS936$DecodeHolder),
	$classEntry("sun.nio.cs.MS936$EncodeHolder", ::sun::nio::cs::MS936$EncodeHolder),
	$classEntry("sun.nio.cs.MS949", ::sun::nio::cs::MS949),
	$classEntry("sun.nio.cs.MS949$DecodeHolder", ::sun::nio::cs::MS949$DecodeHolder),
	$classEntry("sun.nio.cs.MS949$EncodeHolder", ::sun::nio::cs::MS949$EncodeHolder),
	$classEntry("sun.nio.cs.MS950", ::sun::nio::cs::MS950),
	$classEntry("sun.nio.cs.MS950$DecodeHolder", ::sun::nio::cs::MS950$DecodeHolder),
	$classEntry("sun.nio.cs.MS950$EncodeHolder", ::sun::nio::cs::MS950$EncodeHolder),
	$classEntry("sun.nio.cs.MS950_HKSCS", ::sun::nio::cs::MS950_HKSCS),
	$classEntry("sun.nio.cs.MS950_HKSCS$Decoder", ::sun::nio::cs::MS950_HKSCS$Decoder),
	$classEntry("sun.nio.cs.MS950_HKSCS$Encoder", ::sun::nio::cs::MS950_HKSCS$Encoder),
	$classEntry("sun.nio.cs.MS950_HKSCS_XP", ::sun::nio::cs::MS950_HKSCS_XP),
	$classEntry("sun.nio.cs.MS950_HKSCS_XP$Decoder", ::sun::nio::cs::MS950_HKSCS_XP$Decoder),
	$classEntry("sun.nio.cs.MS950_HKSCS_XP$Encoder", ::sun::nio::cs::MS950_HKSCS_XP$Encoder),
	$classEntry("sun.nio.cs.SJIS", ::sun::nio::cs::SJIS),
	$classEntry("sun.nio.cs.SJIS$DecodeHolder", ::sun::nio::cs::SJIS$DecodeHolder),
	$classEntry("sun.nio.cs.SJIS$EncodeHolder", ::sun::nio::cs::SJIS$EncodeHolder),
	$classEntry("sun.nio.cs.SingleByte", ::sun::nio::cs::SingleByte),
	$classEntry("sun.nio.cs.SingleByte$Decoder", ::sun::nio::cs::SingleByte$Decoder),
	$classEntry("sun.nio.cs.SingleByte$Encoder", ::sun::nio::cs::SingleByte$Encoder),
	$classEntry("sun.nio.cs.StandardCharsets", ::sun::nio::cs::StandardCharsets),
	$classEntry("sun.nio.cs.StandardCharsets$1", ::sun::nio::cs::StandardCharsets$1),
	$classEntry("sun.nio.cs.StandardCharsets$Aliases", ::sun::nio::cs::StandardCharsets$Aliases),
	$classEntry("sun.nio.cs.StandardCharsets$Cache", ::sun::nio::cs::StandardCharsets$Cache),
	$classEntry("sun.nio.cs.StandardCharsets$Classes", ::sun::nio::cs::StandardCharsets$Classes),
	$classEntry("sun.nio.cs.StreamDecoder", ::sun::nio::cs::StreamDecoder),
	$classEntry("sun.nio.cs.StreamEncoder", ::sun::nio::cs::StreamEncoder),
	$classEntry("sun.nio.cs.StringUTF16", ::sun::nio::cs::StringUTF16),
	$classEntry("sun.nio.cs.Surrogate", ::sun::nio::cs::Surrogate),
	$classEntry("sun.nio.cs.Surrogate$Generator", ::sun::nio::cs::Surrogate$Generator),
	$classEntry("sun.nio.cs.Surrogate$Parser", ::sun::nio::cs::Surrogate$Parser),
	$classEntry("sun.nio.cs.ThreadLocalCoders", ::sun::nio::cs::ThreadLocalCoders),
	$classEntry("sun.nio.cs.ThreadLocalCoders$1", ::sun::nio::cs::ThreadLocalCoders$1),
	$classEntry("sun.nio.cs.ThreadLocalCoders$2", ::sun::nio::cs::ThreadLocalCoders$2),
	$classEntry("sun.nio.cs.ThreadLocalCoders$Cache", ::sun::nio::cs::ThreadLocalCoders$Cache),
	$classEntry("sun.nio.cs.US_ASCII", ::sun::nio::cs::US_ASCII),
	$classEntry("sun.nio.cs.US_ASCII$Decoder", ::sun::nio::cs::US_ASCII$Decoder),
	$classEntry("sun.nio.cs.US_ASCII$Encoder", ::sun::nio::cs::US_ASCII$Encoder),
	$classEntry("sun.nio.cs.UTF_16", ::sun::nio::cs::UTF_16),
	$classEntry("sun.nio.cs.UTF_16$Decoder", ::sun::nio::cs::UTF_16$Decoder),
	$classEntry("sun.nio.cs.UTF_16$Encoder", ::sun::nio::cs::UTF_16$Encoder),
	$classEntry("sun.nio.cs.UTF_16BE", ::sun::nio::cs::UTF_16BE),
	$classEntry("sun.nio.cs.UTF_16BE$Decoder", ::sun::nio::cs::UTF_16BE$Decoder),
	$classEntry("sun.nio.cs.UTF_16BE$Encoder", ::sun::nio::cs::UTF_16BE$Encoder),
	$classEntry("sun.nio.cs.UTF_16LE", ::sun::nio::cs::UTF_16LE),
	$classEntry("sun.nio.cs.UTF_16LE$Decoder", ::sun::nio::cs::UTF_16LE$Decoder),
	$classEntry("sun.nio.cs.UTF_16LE$Encoder", ::sun::nio::cs::UTF_16LE$Encoder),
	$classEntry("sun.nio.cs.UTF_16LE_BOM", ::sun::nio::cs::UTF_16LE_BOM),
	$classEntry("sun.nio.cs.UTF_16LE_BOM$Decoder", ::sun::nio::cs::UTF_16LE_BOM$Decoder),
	$classEntry("sun.nio.cs.UTF_16LE_BOM$Encoder", ::sun::nio::cs::UTF_16LE_BOM$Encoder),
	$classEntry("sun.nio.cs.UTF_32", ::sun::nio::cs::UTF_32),
	$classEntry("sun.nio.cs.UTF_32BE", ::sun::nio::cs::UTF_32BE),
	$classEntry("sun.nio.cs.UTF_32BE_BOM", ::sun::nio::cs::UTF_32BE_BOM),
	$classEntry("sun.nio.cs.UTF_32Coder", ::sun::nio::cs::UTF_32Coder),
	$classEntry("sun.nio.cs.UTF_32Coder$Decoder", ::sun::nio::cs::UTF_32Coder$Decoder),
	$classEntry("sun.nio.cs.UTF_32Coder$Encoder", ::sun::nio::cs::UTF_32Coder$Encoder),
	$classEntry("sun.nio.cs.UTF_32LE", ::sun::nio::cs::UTF_32LE),
	$classEntry("sun.nio.cs.UTF_32LE_BOM", ::sun::nio::cs::UTF_32LE_BOM),
	$classEntry("sun.nio.cs.UTF_8", ::sun::nio::cs::UTF_8),
	$classEntry("sun.nio.cs.UTF_8$Decoder", ::sun::nio::cs::UTF_8$Decoder),
	$classEntry("sun.nio.cs.UTF_8$Encoder", ::sun::nio::cs::UTF_8$Encoder),
	$classEntry("sun.nio.cs.Unicode", ::sun::nio::cs::Unicode),
	$classEntry("sun.nio.cs.UnicodeDecoder", ::sun::nio::cs::UnicodeDecoder),
	$classEntry("sun.nio.cs.UnicodeEncoder", ::sun::nio::cs::UnicodeEncoder),
	$classEntry("sun.nio.fs.AbstractAclFileAttributeView", ::sun::nio::fs::AbstractAclFileAttributeView),
	$classEntry("sun.nio.fs.AbstractBasicFileAttributeView", ::sun::nio::fs::AbstractBasicFileAttributeView),
	$classEntry("sun.nio.fs.AbstractBasicFileAttributeView$AttributesBuilder", ::sun::nio::fs::AbstractBasicFileAttributeView$AttributesBuilder),
	$classEntry("sun.nio.fs.AbstractFileSystemProvider", ::sun::nio::fs::AbstractFileSystemProvider),
	$classEntry("sun.nio.fs.AbstractFileTypeDetector", ::sun::nio::fs::AbstractFileTypeDetector),
	$classEntry("sun.nio.fs.AbstractPoller", ::sun::nio::fs::AbstractPoller),
	$classEntry("sun.nio.fs.AbstractPoller$1", ::sun::nio::fs::AbstractPoller$1),
	$classEntry("sun.nio.fs.AbstractPoller$2", ::sun::nio::fs::AbstractPoller$2),
	$classEntry("sun.nio.fs.AbstractPoller$Request", ::sun::nio::fs::AbstractPoller$Request),
	$classEntry("sun.nio.fs.AbstractPoller$RequestType", ::sun::nio::fs::AbstractPoller$RequestType),
	$classEntry("sun.nio.fs.AbstractUserDefinedFileAttributeView", ::sun::nio::fs::AbstractUserDefinedFileAttributeView),
	$classEntry("sun.nio.fs.AbstractWatchKey", ::sun::nio::fs::AbstractWatchKey),
	$classEntry("sun.nio.fs.AbstractWatchKey$Event", ::sun::nio::fs::AbstractWatchKey$Event),
	$classEntry("sun.nio.fs.AbstractWatchKey$State", ::sun::nio::fs::AbstractWatchKey$State),
	$classEntry("sun.nio.fs.AbstractWatchService", ::sun::nio::fs::AbstractWatchService),
	$classEntry("sun.nio.fs.AbstractWatchService$1", ::sun::nio::fs::AbstractWatchService$1),
	$classEntry("sun.nio.fs.BasicFileAttributesHolder", ::sun::nio::fs::BasicFileAttributesHolder),
	$classEntry("sun.nio.fs.BsdFileStore", ::sun::nio::fs::BsdFileStore),
	$classEntry("sun.nio.fs.BsdFileSystem", ::sun::nio::fs::BsdFileSystem),
	$classEntry("sun.nio.fs.BsdFileSystem$SupportedFileFileAttributeViewsHolder", ::sun::nio::fs::BsdFileSystem$SupportedFileFileAttributeViewsHolder),
	$classEntry("sun.nio.fs.BsdFileSystemProvider", ::sun::nio::fs::BsdFileSystemProvider),
	$classEntry("sun.nio.fs.BsdNativeDispatcher", ::sun::nio::fs::BsdNativeDispatcher),
	$classEntry("sun.nio.fs.BsdUserDefinedFileAttributeView", ::sun::nio::fs::BsdUserDefinedFileAttributeView),
	$classEntry("sun.nio.fs.Cancellable", ::sun::nio::fs::Cancellable),
	$classEntry("sun.nio.fs.DefaultFileSystemProvider", ::sun::nio::fs::DefaultFileSystemProvider),
	$classEntry("sun.nio.fs.DefaultFileTypeDetector", ::sun::nio::fs::DefaultFileTypeDetector),
	$classEntry("sun.nio.fs.DynamicFileAttributeView", ::sun::nio::fs::DynamicFileAttributeView),
	$classEntry("sun.nio.fs.ExtendedOptions", ::sun::nio::fs::ExtendedOptions),
	$classEntry("sun.nio.fs.ExtendedOptions$InternalOption", ::sun::nio::fs::ExtendedOptions$InternalOption),
	$classEntry("sun.nio.fs.ExtendedOptions$Wrapper", ::sun::nio::fs::ExtendedOptions$Wrapper),
	$classEntry("sun.nio.fs.FileOwnerAttributeViewImpl", ::sun::nio::fs::FileOwnerAttributeViewImpl),
	$classEntry("sun.nio.fs.Globs", ::sun::nio::fs::Globs),
	$classEntry("sun.nio.fs.MacOSXFileSystem", ::sun::nio::fs::MacOSXFileSystem),
	$classEntry("sun.nio.fs.MacOSXFileSystemProvider", ::sun::nio::fs::MacOSXFileSystemProvider),
	$classEntry("sun.nio.fs.MacOSXNativeDispatcher", ::sun::nio::fs::MacOSXNativeDispatcher),
	$classEntry("sun.nio.fs.MimeTypesFileTypeDetector", ::sun::nio::fs::MimeTypesFileTypeDetector),
	$classEntry("sun.nio.fs.MimeTypesFileTypeDetector$1", ::sun::nio::fs::MimeTypesFileTypeDetector$1),
	$classEntry("sun.nio.fs.NativeBuffer", ::sun::nio::fs::NativeBuffer),
	$classEntry("sun.nio.fs.NativeBuffer$Deallocator", ::sun::nio::fs::NativeBuffer$Deallocator),
	$classEntry("sun.nio.fs.NativeBuffers", ::sun::nio::fs::NativeBuffers),
	$classEntry("sun.nio.fs.NativeBuffers$1", ::sun::nio::fs::NativeBuffers$1),
	$classEntry("sun.nio.fs.PollingWatchService", ::sun::nio::fs::PollingWatchService),
	$classEntry("sun.nio.fs.PollingWatchService$1", ::sun::nio::fs::PollingWatchService$1),
	$classEntry("sun.nio.fs.PollingWatchService$2", ::sun::nio::fs::PollingWatchService$2),
	$classEntry("sun.nio.fs.PollingWatchService$3", ::sun::nio::fs::PollingWatchService$3),
	$classEntry("sun.nio.fs.PollingWatchService$CacheEntry", ::sun::nio::fs::PollingWatchService$CacheEntry),
	$classEntry("sun.nio.fs.PollingWatchService$PollingWatchKey", ::sun::nio::fs::PollingWatchService$PollingWatchKey),
	$classEntry("sun.nio.fs.PollingWatchService$PollingWatchKey$1", ::sun::nio::fs::PollingWatchService$PollingWatchKey$1),
	$classEntry("sun.nio.fs.Reflect", ::sun::nio::fs::Reflect),
	$classEntry("sun.nio.fs.Reflect$1", ::sun::nio::fs::Reflect$1),
	$classEntry("sun.nio.fs.UTIFileTypeDetector", ::sun::nio::fs::UTIFileTypeDetector),
	$classEntry("sun.nio.fs.UnixChannelFactory", ::sun::nio::fs::UnixChannelFactory),
	$classEntry("sun.nio.fs.UnixChannelFactory$1", ::sun::nio::fs::UnixChannelFactory$1),
	$classEntry("sun.nio.fs.UnixChannelFactory$Flags", ::sun::nio::fs::UnixChannelFactory$Flags),
	$classEntry("sun.nio.fs.UnixConstants", ::sun::nio::fs::UnixConstants),
	$classEntry("sun.nio.fs.UnixCopyFile", ::sun::nio::fs::UnixCopyFile),
	$classEntry("sun.nio.fs.UnixCopyFile$1", ::sun::nio::fs::UnixCopyFile$1),
	$classEntry("sun.nio.fs.UnixCopyFile$Flags", ::sun::nio::fs::UnixCopyFile$Flags),
	$classEntry("sun.nio.fs.UnixDirectoryStream", ::sun::nio::fs::UnixDirectoryStream),
	$classEntry("sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator", ::sun::nio::fs::UnixDirectoryStream$UnixDirectoryIterator),
	$classEntry("sun.nio.fs.UnixException", ::sun::nio::fs::UnixException),
	$classEntry("sun.nio.fs.UnixFileAttributeViews", ::sun::nio::fs::UnixFileAttributeViews),
	$classEntry("sun.nio.fs.UnixFileAttributeViews$Basic", ::sun::nio::fs::UnixFileAttributeViews$Basic),
	$classEntry("sun.nio.fs.UnixFileAttributeViews$Posix", ::sun::nio::fs::UnixFileAttributeViews$Posix),
	$classEntry("sun.nio.fs.UnixFileAttributeViews$Unix", ::sun::nio::fs::UnixFileAttributeViews$Unix),
	$classEntry("sun.nio.fs.UnixFileAttributes", ::sun::nio::fs::UnixFileAttributes),
	$classEntry("sun.nio.fs.UnixFileAttributes$UnixAsBasicFileAttributes", ::sun::nio::fs::UnixFileAttributes$UnixAsBasicFileAttributes),
	$classEntry("sun.nio.fs.UnixFileKey", ::sun::nio::fs::UnixFileKey),
	$classEntry("sun.nio.fs.UnixFileModeAttribute", ::sun::nio::fs::UnixFileModeAttribute),
	$classEntry("sun.nio.fs.UnixFileModeAttribute$1", ::sun::nio::fs::UnixFileModeAttribute$1),
	$classEntry("sun.nio.fs.UnixFileStore", ::sun::nio::fs::UnixFileStore),
	$classEntry("sun.nio.fs.UnixFileStore$1", ::sun::nio::fs::UnixFileStore$1),
	$classEntry("sun.nio.fs.UnixFileStore$FeatureStatus", ::sun::nio::fs::UnixFileStore$FeatureStatus),
	$classEntry("sun.nio.fs.UnixFileStoreAttributes", ::sun::nio::fs::UnixFileStoreAttributes),
	$classEntry("sun.nio.fs.UnixFileSystem", ::sun::nio::fs::UnixFileSystem),
	$classEntry("sun.nio.fs.UnixFileSystem$1", ::sun::nio::fs::UnixFileSystem$1),
	$classEntry("sun.nio.fs.UnixFileSystem$2", ::sun::nio::fs::UnixFileSystem$2),
	$classEntry("sun.nio.fs.UnixFileSystem$3", ::sun::nio::fs::UnixFileSystem$3),
	$classEntry("sun.nio.fs.UnixFileSystem$FileStoreIterator", ::sun::nio::fs::UnixFileSystem$FileStoreIterator),
	$classEntry("sun.nio.fs.UnixFileSystem$LookupService", ::sun::nio::fs::UnixFileSystem$LookupService),
	$classEntry("sun.nio.fs.UnixFileSystem$LookupService$1", ::sun::nio::fs::UnixFileSystem$LookupService$1),
	$classEntry("sun.nio.fs.UnixFileSystemProvider", ::sun::nio::fs::UnixFileSystemProvider),
	$classEntry("sun.nio.fs.UnixFileSystemProvider$1", ::sun::nio::fs::UnixFileSystemProvider$1),
	$classEntry("sun.nio.fs.UnixFileSystemProvider$2", ::sun::nio::fs::UnixFileSystemProvider$2),
	$classEntry("sun.nio.fs.UnixFileSystemProvider$3", ::sun::nio::fs::UnixFileSystemProvider$3),
	$classEntry("sun.nio.fs.UnixMountEntry", ::sun::nio::fs::UnixMountEntry),
	$classEntry("sun.nio.fs.UnixNativeDispatcher", ::sun::nio::fs::UnixNativeDispatcher),
	$classEntry("sun.nio.fs.UnixPath", ::sun::nio::fs::UnixPath),
	$classEntry("sun.nio.fs.UnixSecureDirectoryStream", ::sun::nio::fs::UnixSecureDirectoryStream),
	$classEntry("sun.nio.fs.UnixSecureDirectoryStream$BasicFileAttributeViewImpl", ::sun::nio::fs::UnixSecureDirectoryStream$BasicFileAttributeViewImpl),
	$classEntry("sun.nio.fs.UnixSecureDirectoryStream$PosixFileAttributeViewImpl", ::sun::nio::fs::UnixSecureDirectoryStream$PosixFileAttributeViewImpl),
	$classEntry("sun.nio.fs.UnixUriUtils", ::sun::nio::fs::UnixUriUtils),
	$classEntry("sun.nio.fs.UnixUserDefinedFileAttributeView", ::sun::nio::fs::UnixUserDefinedFileAttributeView),
	$classEntry("sun.nio.fs.UnixUserPrincipals", ::sun::nio::fs::UnixUserPrincipals),
	$classEntry("sun.nio.fs.UnixUserPrincipals$Group", ::sun::nio::fs::UnixUserPrincipals$Group),
	$classEntry("sun.nio.fs.UnixUserPrincipals$User", ::sun::nio::fs::UnixUserPrincipals$User),
	$classEntry("sun.nio.fs.Util", ::sun::nio::fs::Util),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory", ::sun::reflect::annotation::AnnotatedTypeFactory),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedArrayTypeImpl", ::sun::reflect::annotation::AnnotatedTypeFactory$AnnotatedArrayTypeImpl),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl", ::sun::reflect::annotation::AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedTypeBaseImpl", ::sun::reflect::annotation::AnnotatedTypeFactory$AnnotatedTypeBaseImpl),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedTypeVariableImpl", ::sun::reflect::annotation::AnnotatedTypeFactory$AnnotatedTypeVariableImpl),
	$classEntry("sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedWildcardTypeImpl", ::sun::reflect::annotation::AnnotatedTypeFactory$AnnotatedWildcardTypeImpl),
	$classEntry("sun.reflect.annotation.AnnotationInvocationHandler", ::sun::reflect::annotation::AnnotationInvocationHandler),
	$classEntry("sun.reflect.annotation.AnnotationInvocationHandler$1", ::sun::reflect::annotation::AnnotationInvocationHandler$1),
	$classEntry("sun.reflect.annotation.AnnotationInvocationHandler$UnsafeAccessor", ::sun::reflect::annotation::AnnotationInvocationHandler$UnsafeAccessor),
	$classEntry("sun.reflect.annotation.AnnotationParser", ::sun::reflect::annotation::AnnotationParser),
	$classEntry("sun.reflect.annotation.AnnotationParser$1", ::sun::reflect::annotation::AnnotationParser$1),
	$classEntry("sun.reflect.annotation.AnnotationSupport", ::sun::reflect::annotation::AnnotationSupport),
	$classEntry("sun.reflect.annotation.AnnotationSupport$1", ::sun::reflect::annotation::AnnotationSupport$1),
	$classEntry("sun.reflect.annotation.AnnotationType", ::sun::reflect::annotation::AnnotationType),
	$classEntry("sun.reflect.annotation.AnnotationType$1", ::sun::reflect::annotation::AnnotationType$1),
	$classEntry("sun.reflect.annotation.AnnotationTypeMismatchExceptionProxy", ::sun::reflect::annotation::AnnotationTypeMismatchExceptionProxy),
	$classEntry("sun.reflect.annotation.EnumConstantNotPresentExceptionProxy", ::sun::reflect::annotation::EnumConstantNotPresentExceptionProxy),
	$classEntry("sun.reflect.annotation.ExceptionProxy", ::sun::reflect::annotation::ExceptionProxy),
	$classEntry("sun.reflect.annotation.TypeAnnotation", ::sun::reflect::annotation::TypeAnnotation),
	$classEntry("sun.reflect.annotation.TypeAnnotation$LocationInfo", ::sun::reflect::annotation::TypeAnnotation$LocationInfo),
	$classEntry("sun.reflect.annotation.TypeAnnotation$LocationInfo$Location", ::sun::reflect::annotation::TypeAnnotation$LocationInfo$Location),
	$classEntry("sun.reflect.annotation.TypeAnnotation$TypeAnnotationTarget", ::sun::reflect::annotation::TypeAnnotation$TypeAnnotationTarget),
	$classEntry("sun.reflect.annotation.TypeAnnotation$TypeAnnotationTargetInfo", ::sun::reflect::annotation::TypeAnnotation$TypeAnnotationTargetInfo),
	$classEntry("sun.reflect.annotation.TypeAnnotationParser", ::sun::reflect::annotation::TypeAnnotationParser),
	$classEntry("sun.reflect.annotation.TypeNotPresentExceptionProxy", ::sun::reflect::annotation::TypeNotPresentExceptionProxy),
	$classEntry("sun.reflect.generics.factory.CoreReflectionFactory", ::sun::reflect::generics::factory::CoreReflectionFactory),
	$classEntry("sun.reflect.generics.factory.GenericsFactory", ::sun::reflect::generics::factory::GenericsFactory),
	$classEntry("sun.reflect.generics.parser.SignatureParser", ::sun::reflect::generics::parser::SignatureParser),
	$classEntry("sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl", ::sun::reflect::generics::reflectiveObjects::GenericArrayTypeImpl),
	$classEntry("sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator", ::sun::reflect::generics::reflectiveObjects::LazyReflectiveObjectGenerator),
	$classEntry("sun.reflect.generics.reflectiveObjects.NotImplementedException", ::sun::reflect::generics::reflectiveObjects::NotImplementedException),
	$classEntry("sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl", ::sun::reflect::generics::reflectiveObjects::ParameterizedTypeImpl),
	$classEntry("sun.reflect.generics.reflectiveObjects.TypeVariableImpl", ::sun::reflect::generics::reflectiveObjects::TypeVariableImpl),
	$classEntry("sun.reflect.generics.reflectiveObjects.WildcardTypeImpl", ::sun::reflect::generics::reflectiveObjects::WildcardTypeImpl),
	$classEntry("sun.reflect.generics.repository.AbstractRepository", ::sun::reflect::generics::repository::AbstractRepository),
	$classEntry("sun.reflect.generics.repository.ClassRepository", ::sun::reflect::generics::repository::ClassRepository),
	$classEntry("sun.reflect.generics.repository.ConstructorRepository", ::sun::reflect::generics::repository::ConstructorRepository),
	$classEntry("sun.reflect.generics.repository.FieldRepository", ::sun::reflect::generics::repository::FieldRepository),
	$classEntry("sun.reflect.generics.repository.GenericDeclRepository", ::sun::reflect::generics::repository::GenericDeclRepository),
	$classEntry("sun.reflect.generics.repository.MethodRepository", ::sun::reflect::generics::repository::MethodRepository),
	$classEntry("sun.reflect.generics.scope.AbstractScope", ::sun::reflect::generics::scope::AbstractScope),
	$classEntry("sun.reflect.generics.scope.ClassScope", ::sun::reflect::generics::scope::ClassScope),
	$classEntry("sun.reflect.generics.scope.ConstructorScope", ::sun::reflect::generics::scope::ConstructorScope),
	$classEntry("sun.reflect.generics.scope.DummyScope", ::sun::reflect::generics::scope::DummyScope),
	$classEntry("sun.reflect.generics.scope.MethodScope", ::sun::reflect::generics::scope::MethodScope),
	$classEntry("sun.reflect.generics.scope.Scope", ::sun::reflect::generics::scope::Scope),
	$classEntry("sun.reflect.generics.tree.ArrayTypeSignature", ::sun::reflect::generics::tree::ArrayTypeSignature),
	$classEntry("sun.reflect.generics.tree.BaseType", ::sun::reflect::generics::tree::BaseType),
	$classEntry("sun.reflect.generics.tree.BooleanSignature", ::sun::reflect::generics::tree::BooleanSignature),
	$classEntry("sun.reflect.generics.tree.BottomSignature", ::sun::reflect::generics::tree::BottomSignature),
	$classEntry("sun.reflect.generics.tree.ByteSignature", ::sun::reflect::generics::tree::ByteSignature),
	$classEntry("sun.reflect.generics.tree.CharSignature", ::sun::reflect::generics::tree::CharSignature),
	$classEntry("sun.reflect.generics.tree.ClassSignature", ::sun::reflect::generics::tree::ClassSignature),
	$classEntry("sun.reflect.generics.tree.ClassTypeSignature", ::sun::reflect::generics::tree::ClassTypeSignature),
	$classEntry("sun.reflect.generics.tree.DoubleSignature", ::sun::reflect::generics::tree::DoubleSignature),
	$classEntry("sun.reflect.generics.tree.FieldTypeSignature", ::sun::reflect::generics::tree::FieldTypeSignature),
	$classEntry("sun.reflect.generics.tree.FloatSignature", ::sun::reflect::generics::tree::FloatSignature),
	$classEntry("sun.reflect.generics.tree.FormalTypeParameter", ::sun::reflect::generics::tree::FormalTypeParameter),
	$classEntry("sun.reflect.generics.tree.IntSignature", ::sun::reflect::generics::tree::IntSignature),
	$classEntry("sun.reflect.generics.tree.LongSignature", ::sun::reflect::generics::tree::LongSignature),
	$classEntry("sun.reflect.generics.tree.MethodTypeSignature", ::sun::reflect::generics::tree::MethodTypeSignature),
	$classEntry("sun.reflect.generics.tree.ReturnType", ::sun::reflect::generics::tree::ReturnType),
	$classEntry("sun.reflect.generics.tree.ShortSignature", ::sun::reflect::generics::tree::ShortSignature),
	$classEntry("sun.reflect.generics.tree.Signature", ::sun::reflect::generics::tree::Signature),
	$classEntry("sun.reflect.generics.tree.SimpleClassTypeSignature", ::sun::reflect::generics::tree::SimpleClassTypeSignature),
	$classEntry("sun.reflect.generics.tree.Tree", ::sun::reflect::generics::tree::Tree),
	$classEntry("sun.reflect.generics.tree.TypeArgument", ::sun::reflect::generics::tree::TypeArgument),
	$classEntry("sun.reflect.generics.tree.TypeSignature", ::sun::reflect::generics::tree::TypeSignature),
	$classEntry("sun.reflect.generics.tree.TypeTree", ::sun::reflect::generics::tree::TypeTree),
	$classEntry("sun.reflect.generics.tree.TypeVariableSignature", ::sun::reflect::generics::tree::TypeVariableSignature),
	$classEntry("sun.reflect.generics.tree.VoidDescriptor", ::sun::reflect::generics::tree::VoidDescriptor),
	$classEntry("sun.reflect.generics.tree.Wildcard", ::sun::reflect::generics::tree::Wildcard),
	$classEntry("sun.reflect.generics.visitor.Reifier", ::sun::reflect::generics::visitor::Reifier),
	$classEntry("sun.reflect.generics.visitor.TypeTreeVisitor", ::sun::reflect::generics::visitor::TypeTreeVisitor),
	$classEntry("sun.reflect.generics.visitor.Visitor", ::sun::reflect::generics::visitor::Visitor),
	$classEntry("sun.reflect.misc.ConstructorUtil", ::sun::reflect::misc::ConstructorUtil),
	$classEntry("sun.reflect.misc.FieldUtil", ::sun::reflect::misc::FieldUtil),
	$classEntry("sun.reflect.misc.MethodUtil", ::sun::reflect::misc::MethodUtil),
	$classEntry("sun.reflect.misc.MethodUtil$1", ::sun::reflect::misc::MethodUtil$1),
	$classEntry("sun.reflect.misc.MethodUtil$Signature", ::sun::reflect::misc::MethodUtil$Signature),
	$classEntry("sun.reflect.misc.ReflectUtil", ::sun::reflect::misc::ReflectUtil),
	$classEntry("sun.reflect.misc.Trampoline", ::sun::reflect::misc::Trampoline),
	$classEntry("sun.security.action.GetBooleanAction", ::sun::security::action::GetBooleanAction),
	$classEntry("sun.security.action.GetIntegerAction", ::sun::security::action::GetIntegerAction),
	$classEntry("sun.security.action.GetLongAction", ::sun::security::action::GetLongAction),
	$classEntry("sun.security.action.GetPropertyAction", ::sun::security::action::GetPropertyAction),
	$classEntry("sun.security.action.GetPropertyAction$1", ::sun::security::action::GetPropertyAction$1),
	$classEntry("sun.security.action.OpenFileInputStreamAction", ::sun::security::action::OpenFileInputStreamAction),
	$classEntry("sun.security.action.PutAllAction", ::sun::security::action::PutAllAction),
	$classEntry("sun.security.internal.interfaces.TlsMasterSecret", ::sun::security::internal::interfaces::TlsMasterSecret),
	$classEntry("sun.security.internal.spec.TlsKeyMaterialParameterSpec", ::sun::security::internal::spec::TlsKeyMaterialParameterSpec),
	$classEntry("sun.security.internal.spec.TlsKeyMaterialSpec", ::sun::security::internal::spec::TlsKeyMaterialSpec),
	$classEntry("sun.security.internal.spec.TlsMasterSecretParameterSpec", ::sun::security::internal::spec::TlsMasterSecretParameterSpec),
	$classEntry("sun.security.internal.spec.TlsPrfParameterSpec", ::sun::security::internal::spec::TlsPrfParameterSpec),
	$classEntry("sun.security.internal.spec.TlsRsaPremasterSecretParameterSpec", ::sun::security::internal::spec::TlsRsaPremasterSecretParameterSpec),
	$classEntry("sun.security.jca.GetInstance", ::sun::security::jca::GetInstance),
	$classEntry("sun.security.jca.GetInstance$Instance", ::sun::security::jca::GetInstance$Instance),
	$classEntry("sun.security.jca.JCAUtil", ::sun::security::jca::JCAUtil),
	$classEntry("sun.security.jca.JCAUtil$CachedSecureRandomHolder", ::sun::security::jca::JCAUtil$CachedSecureRandomHolder),
	$classEntry("sun.security.jca.ProviderConfig", ::sun::security::jca::ProviderConfig),
	$classEntry("sun.security.jca.ProviderConfig$1", ::sun::security::jca::ProviderConfig$1),
	$classEntry("sun.security.jca.ProviderConfig$2", ::sun::security::jca::ProviderConfig$2),
	$classEntry("sun.security.jca.ProviderConfig$3", ::sun::security::jca::ProviderConfig$3),
	$classEntry("sun.security.jca.ProviderConfig$4", ::sun::security::jca::ProviderConfig$4),
	$classEntry("sun.security.jca.ProviderConfig$ProviderLoader", ::sun::security::jca::ProviderConfig$ProviderLoader),
	$classEntry("sun.security.jca.ProviderConfig$ProviderLoader$1", ::sun::security::jca::ProviderConfig$ProviderLoader$1),
	$classEntry("sun.security.jca.ProviderList", ::sun::security::jca::ProviderList),
	$classEntry("sun.security.jca.ProviderList$1", ::sun::security::jca::ProviderList$1),
	$classEntry("sun.security.jca.ProviderList$2", ::sun::security::jca::ProviderList$2),
	$classEntry("sun.security.jca.ProviderList$3", ::sun::security::jca::ProviderList$3),
	$classEntry("sun.security.jca.ProviderList$PreferredEntry", ::sun::security::jca::ProviderList$PreferredEntry),
	$classEntry("sun.security.jca.ProviderList$PreferredList", ::sun::security::jca::ProviderList$PreferredList),
	$classEntry("sun.security.jca.ProviderList$ServiceList", ::sun::security::jca::ProviderList$ServiceList),
	$classEntry("sun.security.jca.ProviderList$ServiceList$1", ::sun::security::jca::ProviderList$ServiceList$1),
	$classEntry("sun.security.jca.Providers", ::sun::security::jca::Providers),
	$classEntry("sun.security.jca.ServiceId", ::sun::security::jca::ServiceId),
	$classEntry("sun.security.pkcs.ContentInfo", ::sun::security::pkcs::ContentInfo),
	$classEntry("sun.security.pkcs.ESSCertId", ::sun::security::pkcs::ESSCertId),
	$classEntry("sun.security.pkcs.EncryptedPrivateKeyInfo", ::sun::security::pkcs::EncryptedPrivateKeyInfo),
	$classEntry("sun.security.pkcs.PKCS7", ::sun::security::pkcs::PKCS7),
	$classEntry("sun.security.pkcs.PKCS7$SecureRandomHolder", ::sun::security::pkcs::PKCS7$SecureRandomHolder),
	$classEntry("sun.security.pkcs.PKCS8Key", ::sun::security::pkcs::PKCS8Key),
	$classEntry("sun.security.pkcs.PKCS9Attribute", ::sun::security::pkcs::PKCS9Attribute),
	$classEntry("sun.security.pkcs.PKCS9Attributes", ::sun::security::pkcs::PKCS9Attributes),
	$classEntry("sun.security.pkcs.ParsingException", ::sun::security::pkcs::ParsingException),
	$classEntry("sun.security.pkcs.SignerInfo", ::sun::security::pkcs::SignerInfo),
	$classEntry("sun.security.pkcs.SigningCertificateInfo", ::sun::security::pkcs::SigningCertificateInfo),
	$classEntry("sun.security.pkcs10.PKCS10", ::sun::security::pkcs10::PKCS10),
	$classEntry("sun.security.pkcs10.PKCS10Attribute", ::sun::security::pkcs10::PKCS10Attribute),
	$classEntry("sun.security.pkcs10.PKCS10Attributes", ::sun::security::pkcs10::PKCS10Attributes),
	$classEntry("sun.security.pkcs12.MacData", ::sun::security::pkcs12::MacData),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore", ::sun::security::pkcs12::PKCS12KeyStore),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$1", ::sun::security::pkcs12::PKCS12KeyStore$1),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$CertEntry", ::sun::security::pkcs12::PKCS12KeyStore$CertEntry),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12", ::sun::security::pkcs12::PKCS12KeyStore$DualFormatPKCS12),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$Entry", ::sun::security::pkcs12::PKCS12KeyStore$Entry),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$KeyEntry", ::sun::security::pkcs12::PKCS12KeyStore$KeyEntry),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$PrivateKeyEntry", ::sun::security::pkcs12::PKCS12KeyStore$PrivateKeyEntry),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$RetryWithZero", ::sun::security::pkcs12::PKCS12KeyStore$RetryWithZero),
	$classEntry("sun.security.pkcs12.PKCS12KeyStore$SecretKeyEntry", ::sun::security::pkcs12::PKCS12KeyStore$SecretKeyEntry),
	$classEntry("sun.security.provider.AbstractDrbg", ::sun::security::provider::AbstractDrbg),
	$classEntry("sun.security.provider.AbstractDrbg$NonceProvider", ::sun::security::provider::AbstractDrbg$NonceProvider),
	$classEntry("sun.security.provider.AbstractDrbg$SeederHolder", ::sun::security::provider::AbstractDrbg$SeederHolder),
	$classEntry("sun.security.provider.AbstractHashDrbg", ::sun::security::provider::AbstractHashDrbg),
	$classEntry("sun.security.provider.ByteArrayAccess", ::sun::security::provider::ByteArrayAccess),
	$classEntry("sun.security.provider.ByteArrayAccess$BE", ::sun::security::provider::ByteArrayAccess$BE),
	$classEntry("sun.security.provider.ByteArrayAccess$LE", ::sun::security::provider::ByteArrayAccess$LE),
	$classEntry("sun.security.provider.ConfigFile", ::sun::security::provider::ConfigFile),
	$classEntry("sun.security.provider.ConfigFile$Spi", ::sun::security::provider::ConfigFile$Spi),
	$classEntry("sun.security.provider.ConfigFile$Spi$1", ::sun::security::provider::ConfigFile$Spi$1),
	$classEntry("sun.security.provider.ConfigFile$Spi$2", ::sun::security::provider::ConfigFile$Spi$2),
	$classEntry("sun.security.provider.CtrDrbg", ::sun::security::provider::CtrDrbg),
	$classEntry("sun.security.provider.DRBG", ::sun::security::provider::DRBG),
	$classEntry("sun.security.provider.DSA", ::sun::security::provider::DSA),
	$classEntry("sun.security.provider.DSA$Raw", ::sun::security::provider::DSA$Raw),
	$classEntry("sun.security.provider.DSA$Raw$NullDigest20", ::sun::security::provider::DSA$Raw$NullDigest20),
	$classEntry("sun.security.provider.DSA$RawDSA", ::sun::security::provider::DSA$RawDSA),
	$classEntry("sun.security.provider.DSA$RawDSAinP1363Format", ::sun::security::provider::DSA$RawDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA1withDSA", ::sun::security::provider::DSA$SHA1withDSA),
	$classEntry("sun.security.provider.DSA$SHA1withDSAinP1363Format", ::sun::security::provider::DSA$SHA1withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA224withDSA", ::sun::security::provider::DSA$SHA224withDSA),
	$classEntry("sun.security.provider.DSA$SHA224withDSAinP1363Format", ::sun::security::provider::DSA$SHA224withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA256withDSA", ::sun::security::provider::DSA$SHA256withDSA),
	$classEntry("sun.security.provider.DSA$SHA256withDSAinP1363Format", ::sun::security::provider::DSA$SHA256withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA384withDSA", ::sun::security::provider::DSA$SHA384withDSA),
	$classEntry("sun.security.provider.DSA$SHA384withDSAinP1363Format", ::sun::security::provider::DSA$SHA384withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA3_224withDSA", ::sun::security::provider::DSA$SHA3_224withDSA),
	$classEntry("sun.security.provider.DSA$SHA3_224withDSAinP1363Format", ::sun::security::provider::DSA$SHA3_224withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA3_256withDSA", ::sun::security::provider::DSA$SHA3_256withDSA),
	$classEntry("sun.security.provider.DSA$SHA3_256withDSAinP1363Format", ::sun::security::provider::DSA$SHA3_256withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA3_384withDSA", ::sun::security::provider::DSA$SHA3_384withDSA),
	$classEntry("sun.security.provider.DSA$SHA3_384withDSAinP1363Format", ::sun::security::provider::DSA$SHA3_384withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA3_512withDSA", ::sun::security::provider::DSA$SHA3_512withDSA),
	$classEntry("sun.security.provider.DSA$SHA3_512withDSAinP1363Format", ::sun::security::provider::DSA$SHA3_512withDSAinP1363Format),
	$classEntry("sun.security.provider.DSA$SHA512withDSA", ::sun::security::provider::DSA$SHA512withDSA),
	$classEntry("sun.security.provider.DSA$SHA512withDSAinP1363Format", ::sun::security::provider::DSA$SHA512withDSAinP1363Format),
	$classEntry("sun.security.provider.DSAKeyFactory", ::sun::security::provider::DSAKeyFactory),
	$classEntry("sun.security.provider.DSAKeyPairGenerator", ::sun::security::provider::DSAKeyPairGenerator),
	$classEntry("sun.security.provider.DSAKeyPairGenerator$Current", ::sun::security::provider::DSAKeyPairGenerator$Current),
	$classEntry("sun.security.provider.DSAKeyPairGenerator$Legacy", ::sun::security::provider::DSAKeyPairGenerator$Legacy),
	$classEntry("sun.security.provider.DSAParameterGenerator", ::sun::security::provider::DSAParameterGenerator),
	$classEntry("sun.security.provider.DSAParameters", ::sun::security::provider::DSAParameters),
	$classEntry("sun.security.provider.DSAPrivateKey", ::sun::security::provider::DSAPrivateKey),
	$classEntry("sun.security.provider.DSAPublicKey", ::sun::security::provider::DSAPublicKey),
	$classEntry("sun.security.provider.DSAPublicKeyImpl", ::sun::security::provider::DSAPublicKeyImpl),
	$classEntry("sun.security.provider.DigestBase", ::sun::security::provider::DigestBase),
	$classEntry("sun.security.provider.DomainKeyStore", ::sun::security::provider::DomainKeyStore),
	$classEntry("sun.security.provider.DomainKeyStore$1", ::sun::security::provider::DomainKeyStore$1),
	$classEntry("sun.security.provider.DomainKeyStore$DKS", ::sun::security::provider::DomainKeyStore$DKS),
	$classEntry("sun.security.provider.DomainKeyStore$KeyStoreBuilderComponents", ::sun::security::provider::DomainKeyStore$KeyStoreBuilderComponents),
	$classEntry("sun.security.provider.EntropySource", ::sun::security::provider::EntropySource),
	$classEntry("sun.security.provider.FileInputStreamPool", ::sun::security::provider::FileInputStreamPool),
	$classEntry("sun.security.provider.FileInputStreamPool$StreamRef", ::sun::security::provider::FileInputStreamPool$StreamRef),
	$classEntry("sun.security.provider.FileInputStreamPool$UnclosableInputStream", ::sun::security::provider::FileInputStreamPool$UnclosableInputStream),
	$classEntry("sun.security.provider.HashDrbg", ::sun::security::provider::HashDrbg),
	$classEntry("sun.security.provider.HmacDrbg", ::sun::security::provider::HmacDrbg),
	$classEntry("sun.security.provider.JavaKeyStore", ::sun::security::provider::JavaKeyStore),
	$classEntry("sun.security.provider.JavaKeyStore$CaseExactJKS", ::sun::security::provider::JavaKeyStore$CaseExactJKS),
	$classEntry("sun.security.provider.JavaKeyStore$DualFormatJKS", ::sun::security::provider::JavaKeyStore$DualFormatJKS),
	$classEntry("sun.security.provider.JavaKeyStore$JKS", ::sun::security::provider::JavaKeyStore$JKS),
	$classEntry("sun.security.provider.JavaKeyStore$KeyEntry", ::sun::security::provider::JavaKeyStore$KeyEntry),
	$classEntry("sun.security.provider.JavaKeyStore$TrustedCertEntry", ::sun::security::provider::JavaKeyStore$TrustedCertEntry),
	$classEntry("sun.security.provider.KeyProtector", ::sun::security::provider::KeyProtector),
	$classEntry("sun.security.provider.MD2", ::sun::security::provider::MD2),
	$classEntry("sun.security.provider.MD4", ::sun::security::provider::MD4),
	$classEntry("sun.security.provider.MD4$1", ::sun::security::provider::MD4$1),
	$classEntry("sun.security.provider.MD4$2", ::sun::security::provider::MD4$2),
	$classEntry("sun.security.provider.MD5", ::sun::security::provider::MD5),
	$classEntry("sun.security.provider.MoreDrbgParameters", ::sun::security::provider::MoreDrbgParameters),
	$classEntry("sun.security.provider.NativePRNG", ::sun::security::provider::NativePRNG),
	$classEntry("sun.security.provider.NativePRNG$1", ::sun::security::provider::NativePRNG$1),
	$classEntry("sun.security.provider.NativePRNG$2", ::sun::security::provider::NativePRNG$2),
	$classEntry("sun.security.provider.NativePRNG$Blocking", ::sun::security::provider::NativePRNG$Blocking),
	$classEntry("sun.security.provider.NativePRNG$NonBlocking", ::sun::security::provider::NativePRNG$NonBlocking),
	$classEntry("sun.security.provider.NativePRNG$RandomIO", ::sun::security::provider::NativePRNG$RandomIO),
	$classEntry("sun.security.provider.NativePRNG$RandomIO$1", ::sun::security::provider::NativePRNG$RandomIO$1),
	$classEntry("sun.security.provider.NativePRNG$Variant", ::sun::security::provider::NativePRNG$Variant),
	$classEntry("sun.security.provider.NativeSeedGenerator", ::sun::security::provider::NativeSeedGenerator),
	$classEntry("sun.security.provider.ParameterCache", ::sun::security::provider::ParameterCache),
	$classEntry("sun.security.provider.PolicyFile", ::sun::security::provider::PolicyFile),
	$classEntry("sun.security.provider.PolicyFile$1", ::sun::security::provider::PolicyFile$1),
	$classEntry("sun.security.provider.PolicyFile$2", ::sun::security::provider::PolicyFile$2),
	$classEntry("sun.security.provider.PolicyFile$3", ::sun::security::provider::PolicyFile$3),
	$classEntry("sun.security.provider.PolicyFile$4", ::sun::security::provider::PolicyFile$4),
	$classEntry("sun.security.provider.PolicyFile$5", ::sun::security::provider::PolicyFile$5),
	$classEntry("sun.security.provider.PolicyFile$6", ::sun::security::provider::PolicyFile$6),
	$classEntry("sun.security.provider.PolicyFile$7", ::sun::security::provider::PolicyFile$7),
	$classEntry("sun.security.provider.PolicyFile$8", ::sun::security::provider::PolicyFile$8),
	$classEntry("sun.security.provider.PolicyFile$PolicyEntry", ::sun::security::provider::PolicyFile$PolicyEntry),
	$classEntry("sun.security.provider.PolicyFile$PolicyInfo", ::sun::security::provider::PolicyFile$PolicyInfo),
	$classEntry("sun.security.provider.PolicyFile$SelfPermission", ::sun::security::provider::PolicyFile$SelfPermission),
	$classEntry("sun.security.provider.PolicyParser", ::sun::security::provider::PolicyParser),
	$classEntry("sun.security.provider.PolicyParser$DomainEntry", ::sun::security::provider::PolicyParser$DomainEntry),
	$classEntry("sun.security.provider.PolicyParser$GrantEntry", ::sun::security::provider::PolicyParser$GrantEntry),
	$classEntry("sun.security.provider.PolicyParser$KeyStoreEntry", ::sun::security::provider::PolicyParser$KeyStoreEntry),
	$classEntry("sun.security.provider.PolicyParser$ParsingException", ::sun::security::provider::PolicyParser$ParsingException),
	$classEntry("sun.security.provider.PolicyParser$PermissionEntry", ::sun::security::provider::PolicyParser$PermissionEntry),
	$classEntry("sun.security.provider.PolicyParser$PrincipalEntry", ::sun::security::provider::PolicyParser$PrincipalEntry),
	$classEntry("sun.security.provider.PolicySpiFile", ::sun::security::provider::PolicySpiFile),
	$classEntry("sun.security.provider.SHA", ::sun::security::provider::SHA),
	$classEntry("sun.security.provider.SHA2", ::sun::security::provider::SHA2),
	$classEntry("sun.security.provider.SHA2$SHA224", ::sun::security::provider::SHA2$SHA224),
	$classEntry("sun.security.provider.SHA2$SHA256", ::sun::security::provider::SHA2$SHA256),
	$classEntry("sun.security.provider.SHA3", ::sun::security::provider::SHA3),
	$classEntry("sun.security.provider.SHA3$SHA224", ::sun::security::provider::SHA3$SHA224),
	$classEntry("sun.security.provider.SHA3$SHA256", ::sun::security::provider::SHA3$SHA256),
	$classEntry("sun.security.provider.SHA3$SHA384", ::sun::security::provider::SHA3$SHA384),
	$classEntry("sun.security.provider.SHA3$SHA512", ::sun::security::provider::SHA3$SHA512),
	$classEntry("sun.security.provider.SHA5", ::sun::security::provider::SHA5),
	$classEntry("sun.security.provider.SHA5$SHA384", ::sun::security::provider::SHA5$SHA384),
	$classEntry("sun.security.provider.SHA5$SHA512", ::sun::security::provider::SHA5$SHA512),
	$classEntry("sun.security.provider.SHA5$SHA512_224", ::sun::security::provider::SHA5$SHA512_224),
	$classEntry("sun.security.provider.SHA5$SHA512_256", ::sun::security::provider::SHA5$SHA512_256),
	$classEntry("sun.security.provider.SHAKE256", ::sun::security::provider::SHAKE256),
	$classEntry("sun.security.provider.SecureRandom", ::sun::security::provider::SecureRandom),
	$classEntry("sun.security.provider.SecureRandom$SeederHolder", ::sun::security::provider::SecureRandom$SeederHolder),
	$classEntry("sun.security.provider.SeedGenerator", ::sun::security::provider::SeedGenerator),
	$classEntry("sun.security.provider.SeedGenerator$1", ::sun::security::provider::SeedGenerator$1),
	$classEntry("sun.security.provider.SeedGenerator$ThreadedSeedGenerator", ::sun::security::provider::SeedGenerator$ThreadedSeedGenerator),
	$classEntry("sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1", ::sun::security::provider::SeedGenerator$ThreadedSeedGenerator$1),
	$classEntry("sun.security.provider.SeedGenerator$ThreadedSeedGenerator$BogusThread", ::sun::security::provider::SeedGenerator$ThreadedSeedGenerator$BogusThread),
	$classEntry("sun.security.provider.SeedGenerator$URLSeedGenerator", ::sun::security::provider::SeedGenerator$URLSeedGenerator),
	$classEntry("sun.security.provider.SeedGenerator$URLSeedGenerator$1", ::sun::security::provider::SeedGenerator$URLSeedGenerator$1),
	$classEntry("sun.security.provider.SubjectCodeSource", ::sun::security::provider::SubjectCodeSource),
	$classEntry("sun.security.provider.SubjectCodeSource$1", ::sun::security::provider::SubjectCodeSource$1),
	$classEntry("sun.security.provider.SubjectCodeSource$2", ::sun::security::provider::SubjectCodeSource$2),
	$classEntry("sun.security.provider.Sun", ::sun::security::provider::Sun),
	$classEntry("sun.security.provider.Sun$1", ::sun::security::provider::Sun$1),
	$classEntry("sun.security.provider.SunEntries", ::sun::security::provider::SunEntries),
	$classEntry("sun.security.provider.SunEntries$1", ::sun::security::provider::SunEntries$1),
	$classEntry("sun.security.provider.VerificationProvider", ::sun::security::provider::VerificationProvider),
	$classEntry("sun.security.provider.VerificationProvider$1", ::sun::security::provider::VerificationProvider$1),
	$classEntry("sun.security.provider.X509Factory", ::sun::security::provider::X509Factory),
	$classEntry("sun.security.provider.certpath.AdaptableX509CertSelector", ::sun::security::provider::certpath::AdaptableX509CertSelector),
	$classEntry("sun.security.provider.certpath.AdjacencyList", ::sun::security::provider::certpath::AdjacencyList),
	$classEntry("sun.security.provider.certpath.AlgorithmChecker", ::sun::security::provider::certpath::AlgorithmChecker),
	$classEntry("sun.security.provider.certpath.BasicChecker", ::sun::security::provider::certpath::BasicChecker),
	$classEntry("sun.security.provider.certpath.BuildStep", ::sun::security::provider::certpath::BuildStep),
	$classEntry("sun.security.provider.certpath.Builder", ::sun::security::provider::certpath::Builder),
	$classEntry("sun.security.provider.certpath.CertId", ::sun::security::provider::certpath::CertId),
	$classEntry("sun.security.provider.certpath.CertPathConstraintsParameters", ::sun::security::provider::certpath::CertPathConstraintsParameters),
	$classEntry("sun.security.provider.certpath.CertPathHelper", ::sun::security::provider::certpath::CertPathHelper),
	$classEntry("sun.security.provider.certpath.CollectionCertStore", ::sun::security::provider::certpath::CollectionCertStore),
	$classEntry("sun.security.provider.certpath.ConstraintsChecker", ::sun::security::provider::certpath::ConstraintsChecker),
	$classEntry("sun.security.provider.certpath.DistributionPointFetcher", ::sun::security::provider::certpath::DistributionPointFetcher),
	$classEntry("sun.security.provider.certpath.ForwardBuilder", ::sun::security::provider::certpath::ForwardBuilder),
	$classEntry("sun.security.provider.certpath.ForwardBuilder$PKIXCertComparator", ::sun::security::provider::certpath::ForwardBuilder$PKIXCertComparator),
	$classEntry("sun.security.provider.certpath.ForwardState", ::sun::security::provider::certpath::ForwardState),
	$classEntry("sun.security.provider.certpath.IndexedCollectionCertStore", ::sun::security::provider::certpath::IndexedCollectionCertStore),
	$classEntry("sun.security.provider.certpath.KeyChecker", ::sun::security::provider::certpath::KeyChecker),
	$classEntry("sun.security.provider.certpath.OCSP", ::sun::security::provider::certpath::OCSP),
	$classEntry("sun.security.provider.certpath.OCSP$RevocationStatus", ::sun::security::provider::certpath::OCSP$RevocationStatus),
	$classEntry("sun.security.provider.certpath.OCSP$RevocationStatus$CertStatus", ::sun::security::provider::certpath::OCSP$RevocationStatus$CertStatus),
	$classEntry("sun.security.provider.certpath.OCSPNonceExtension", ::sun::security::provider::certpath::OCSPNonceExtension),
	$classEntry("sun.security.provider.certpath.OCSPRequest", ::sun::security::provider::certpath::OCSPRequest),
	$classEntry("sun.security.provider.certpath.OCSPResponse", ::sun::security::provider::certpath::OCSPResponse),
	$classEntry("sun.security.provider.certpath.OCSPResponse$1", ::sun::security::provider::certpath::OCSPResponse$1),
	$classEntry("sun.security.provider.certpath.OCSPResponse$IssuerInfo", ::sun::security::provider::certpath::OCSPResponse$IssuerInfo),
	$classEntry("sun.security.provider.certpath.OCSPResponse$ResponseStatus", ::sun::security::provider::certpath::OCSPResponse$ResponseStatus),
	$classEntry("sun.security.provider.certpath.OCSPResponse$SingleResponse", ::sun::security::provider::certpath::OCSPResponse$SingleResponse),
	$classEntry("sun.security.provider.certpath.PKIX", ::sun::security::provider::certpath::PKIX),
	$classEntry("sun.security.provider.certpath.PKIX$BuilderParams", ::sun::security::provider::certpath::PKIX$BuilderParams),
	$classEntry("sun.security.provider.certpath.PKIX$CertStoreComparator", ::sun::security::provider::certpath::PKIX$CertStoreComparator),
	$classEntry("sun.security.provider.certpath.PKIX$CertStoreTypeException", ::sun::security::provider::certpath::PKIX$CertStoreTypeException),
	$classEntry("sun.security.provider.certpath.PKIX$ValidatorParams", ::sun::security::provider::certpath::PKIX$ValidatorParams),
	$classEntry("sun.security.provider.certpath.PKIXCertPathValidator", ::sun::security::provider::certpath::PKIXCertPathValidator),
	$classEntry("sun.security.provider.certpath.PKIXExtendedParameters", ::sun::security::provider::certpath::PKIXExtendedParameters),
	$classEntry("sun.security.provider.certpath.PKIXMasterCertPathValidator", ::sun::security::provider::certpath::PKIXMasterCertPathValidator),
	$classEntry("sun.security.provider.certpath.PolicyChecker", ::sun::security::provider::certpath::PolicyChecker),
	$classEntry("sun.security.provider.certpath.PolicyNodeImpl", ::sun::security::provider::certpath::PolicyNodeImpl),
	$classEntry("sun.security.provider.certpath.ResponderId", ::sun::security::provider::certpath::ResponderId),
	$classEntry("sun.security.provider.certpath.ResponderId$1", ::sun::security::provider::certpath::ResponderId$1),
	$classEntry("sun.security.provider.certpath.ResponderId$Type", ::sun::security::provider::certpath::ResponderId$Type),
	$classEntry("sun.security.provider.certpath.RevocationChecker", ::sun::security::provider::certpath::RevocationChecker),
	$classEntry("sun.security.provider.certpath.RevocationChecker$1", ::sun::security::provider::certpath::RevocationChecker$1),
	$classEntry("sun.security.provider.certpath.RevocationChecker$2", ::sun::security::provider::certpath::RevocationChecker$2),
	$classEntry("sun.security.provider.certpath.RevocationChecker$Mode", ::sun::security::provider::certpath::RevocationChecker$Mode),
	$classEntry("sun.security.provider.certpath.RevocationChecker$RejectKeySelector", ::sun::security::provider::certpath::RevocationChecker$RejectKeySelector),
	$classEntry("sun.security.provider.certpath.RevocationChecker$RevocationProperties", ::sun::security::provider::certpath::RevocationChecker$RevocationProperties),
	$classEntry("sun.security.provider.certpath.State", ::sun::security::provider::certpath::State),
	$classEntry("sun.security.provider.certpath.SunCertPathBuilder", ::sun::security::provider::certpath::SunCertPathBuilder),
	$classEntry("sun.security.provider.certpath.SunCertPathBuilderException", ::sun::security::provider::certpath::SunCertPathBuilderException),
	$classEntry("sun.security.provider.certpath.SunCertPathBuilderResult", ::sun::security::provider::certpath::SunCertPathBuilderResult),
	$classEntry("sun.security.provider.certpath.URICertStore", ::sun::security::provider::certpath::URICertStore),
	$classEntry("sun.security.provider.certpath.URICertStore$UCS", ::sun::security::provider::certpath::URICertStore$UCS),
	$classEntry("sun.security.provider.certpath.UntrustedChecker", ::sun::security::provider::certpath::UntrustedChecker),
	$classEntry("sun.security.provider.certpath.Vertex", ::sun::security::provider::certpath::Vertex),
	$classEntry("sun.security.provider.certpath.X509CertPath", ::sun::security::provider::certpath::X509CertPath),
	$classEntry("sun.security.provider.certpath.X509CertificatePair", ::sun::security::provider::certpath::X509CertificatePair),
	$classEntry("sun.security.provider.certpath.ssl.SSLServerCertStore", ::sun::security::provider::certpath::ssl::SSLServerCertStore),
	$classEntry("sun.security.provider.certpath.ssl.SSLServerCertStore$1", ::sun::security::provider::certpath::ssl::SSLServerCertStore$1),
	$classEntry("sun.security.provider.certpath.ssl.SSLServerCertStore$CS", ::sun::security::provider::certpath::ssl::SSLServerCertStore$CS),
	$classEntry("sun.security.provider.certpath.ssl.SSLServerCertStore$GetChainTrustManager", ::sun::security::provider::certpath::ssl::SSLServerCertStore$GetChainTrustManager),
	$classEntry("sun.security.rsa.MGF1", ::sun::security::rsa::MGF1),
	$classEntry("sun.security.rsa.PSSParameters", ::sun::security::rsa::PSSParameters),
	$classEntry("sun.security.rsa.RSACore", ::sun::security::rsa::RSACore),
	$classEntry("sun.security.rsa.RSACore$BlindingParameters", ::sun::security::rsa::RSACore$BlindingParameters),
	$classEntry("sun.security.rsa.RSACore$BlindingRandomPair", ::sun::security::rsa::RSACore$BlindingRandomPair),
	$classEntry("sun.security.rsa.RSAKeyFactory", ::sun::security::rsa::RSAKeyFactory),
	$classEntry("sun.security.rsa.RSAKeyFactory$Legacy", ::sun::security::rsa::RSAKeyFactory$Legacy),
	$classEntry("sun.security.rsa.RSAKeyFactory$PSS", ::sun::security::rsa::RSAKeyFactory$PSS),
	$classEntry("sun.security.rsa.RSAKeyPairGenerator", ::sun::security::rsa::RSAKeyPairGenerator),
	$classEntry("sun.security.rsa.RSAKeyPairGenerator$Legacy", ::sun::security::rsa::RSAKeyPairGenerator$Legacy),
	$classEntry("sun.security.rsa.RSAKeyPairGenerator$PSS", ::sun::security::rsa::RSAKeyPairGenerator$PSS),
	$classEntry("sun.security.rsa.RSAPSSSignature", ::sun::security::rsa::RSAPSSSignature),
	$classEntry("sun.security.rsa.RSAPadding", ::sun::security::rsa::RSAPadding),
	$classEntry("sun.security.rsa.RSAPrivateCrtKeyImpl", ::sun::security::rsa::RSAPrivateCrtKeyImpl),
	$classEntry("sun.security.rsa.RSAPrivateKeyImpl", ::sun::security::rsa::RSAPrivateKeyImpl),
	$classEntry("sun.security.rsa.RSAPublicKeyImpl", ::sun::security::rsa::RSAPublicKeyImpl),
	$classEntry("sun.security.rsa.RSASignature", ::sun::security::rsa::RSASignature),
	$classEntry("sun.security.rsa.RSASignature$MD2withRSA", ::sun::security::rsa::RSASignature$MD2withRSA),
	$classEntry("sun.security.rsa.RSASignature$MD5withRSA", ::sun::security::rsa::RSASignature$MD5withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA1withRSA", ::sun::security::rsa::RSASignature$SHA1withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA224withRSA", ::sun::security::rsa::RSASignature$SHA224withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA256withRSA", ::sun::security::rsa::RSASignature$SHA256withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA384withRSA", ::sun::security::rsa::RSASignature$SHA384withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA3_224withRSA", ::sun::security::rsa::RSASignature$SHA3_224withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA3_256withRSA", ::sun::security::rsa::RSASignature$SHA3_256withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA3_384withRSA", ::sun::security::rsa::RSASignature$SHA3_384withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA3_512withRSA", ::sun::security::rsa::RSASignature$SHA3_512withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA512_224withRSA", ::sun::security::rsa::RSASignature$SHA512_224withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA512_256withRSA", ::sun::security::rsa::RSASignature$SHA512_256withRSA),
	$classEntry("sun.security.rsa.RSASignature$SHA512withRSA", ::sun::security::rsa::RSASignature$SHA512withRSA),
	$classEntry("sun.security.rsa.RSAUtil", ::sun::security::rsa::RSAUtil),
	$classEntry("sun.security.rsa.RSAUtil$KeyType", ::sun::security::rsa::RSAUtil$KeyType),
	$classEntry("sun.security.rsa.SunRsaSign", ::sun::security::rsa::SunRsaSign),
	$classEntry("sun.security.rsa.SunRsaSign$1", ::sun::security::rsa::SunRsaSign$1),
	$classEntry("sun.security.rsa.SunRsaSignEntries", ::sun::security::rsa::SunRsaSignEntries),
	$classEntry("sun.security.ssl.AbstractKeyManagerWrapper", ::sun::security::ssl::AbstractKeyManagerWrapper),
	$classEntry("sun.security.ssl.AbstractTrustManagerWrapper", ::sun::security::ssl::AbstractTrustManagerWrapper),
	$classEntry("sun.security.ssl.Alert", ::sun::security::ssl::Alert),
	$classEntry("sun.security.ssl.Alert$AlertConsumer", ::sun::security::ssl::Alert$AlertConsumer),
	$classEntry("sun.security.ssl.Alert$AlertMessage", ::sun::security::ssl::Alert$AlertMessage),
	$classEntry("sun.security.ssl.Alert$Level", ::sun::security::ssl::Alert$Level),
	$classEntry("sun.security.ssl.AlpnExtension", ::sun::security::ssl::AlpnExtension),
	$classEntry("sun.security.ssl.AlpnExtension$AlpnSpec", ::sun::security::ssl::AlpnExtension$AlpnSpec),
	$classEntry("sun.security.ssl.AlpnExtension$AlpnStringizer", ::sun::security::ssl::AlpnExtension$AlpnStringizer),
	$classEntry("sun.security.ssl.AlpnExtension$CHAlpnAbsence", ::sun::security::ssl::AlpnExtension$CHAlpnAbsence),
	$classEntry("sun.security.ssl.AlpnExtension$CHAlpnConsumer", ::sun::security::ssl::AlpnExtension$CHAlpnConsumer),
	$classEntry("sun.security.ssl.AlpnExtension$CHAlpnProducer", ::sun::security::ssl::AlpnExtension$CHAlpnProducer),
	$classEntry("sun.security.ssl.AlpnExtension$SHAlpnAbsence", ::sun::security::ssl::AlpnExtension$SHAlpnAbsence),
	$classEntry("sun.security.ssl.AlpnExtension$SHAlpnConsumer", ::sun::security::ssl::AlpnExtension$SHAlpnConsumer),
	$classEntry("sun.security.ssl.AlpnExtension$SHAlpnProducer", ::sun::security::ssl::AlpnExtension$SHAlpnProducer),
	$classEntry("sun.security.ssl.Authenticator", ::sun::security::ssl::Authenticator),
	$classEntry("sun.security.ssl.Authenticator$1", ::sun::security::ssl::Authenticator$1),
	$classEntry("sun.security.ssl.Authenticator$DTLS10Authenticator", ::sun::security::ssl::Authenticator$DTLS10Authenticator),
	$classEntry("sun.security.ssl.Authenticator$DTLS10Mac", ::sun::security::ssl::Authenticator$DTLS10Mac),
	$classEntry("sun.security.ssl.Authenticator$DTLS13Authenticator", ::sun::security::ssl::Authenticator$DTLS13Authenticator),
	$classEntry("sun.security.ssl.Authenticator$DTLSAuthenticator", ::sun::security::ssl::Authenticator$DTLSAuthenticator),
	$classEntry("sun.security.ssl.Authenticator$DTLSNullAuthenticator", ::sun::security::ssl::Authenticator$DTLSNullAuthenticator),
	$classEntry("sun.security.ssl.Authenticator$DTLSNullMac", ::sun::security::ssl::Authenticator$DTLSNullMac),
	$classEntry("sun.security.ssl.Authenticator$MAC", ::sun::security::ssl::Authenticator$MAC),
	$classEntry("sun.security.ssl.Authenticator$MacImpl", ::sun::security::ssl::Authenticator$MacImpl),
	$classEntry("sun.security.ssl.Authenticator$SSL30Authenticator", ::sun::security::ssl::Authenticator$SSL30Authenticator),
	$classEntry("sun.security.ssl.Authenticator$SSL30Mac", ::sun::security::ssl::Authenticator$SSL30Mac),
	$classEntry("sun.security.ssl.Authenticator$SSLAuthenticator", ::sun::security::ssl::Authenticator$SSLAuthenticator),
	$classEntry("sun.security.ssl.Authenticator$SSLNullAuthenticator", ::sun::security::ssl::Authenticator$SSLNullAuthenticator),
	$classEntry("sun.security.ssl.Authenticator$SSLNullMac", ::sun::security::ssl::Authenticator$SSLNullMac),
	$classEntry("sun.security.ssl.Authenticator$TLS10Authenticator", ::sun::security::ssl::Authenticator$TLS10Authenticator),
	$classEntry("sun.security.ssl.Authenticator$TLS10Mac", ::sun::security::ssl::Authenticator$TLS10Mac),
	$classEntry("sun.security.ssl.Authenticator$TLS13Authenticator", ::sun::security::ssl::Authenticator$TLS13Authenticator),
	$classEntry("sun.security.ssl.BaseSSLSocketImpl", ::sun::security::ssl::BaseSSLSocketImpl),
	$classEntry("sun.security.ssl.CertSignAlgsExtension", ::sun::security::ssl::CertSignAlgsExtension),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CHCertSignatureSchemesConsumer", ::sun::security::ssl::CertSignAlgsExtension$CHCertSignatureSchemesConsumer),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CHCertSignatureSchemesProducer", ::sun::security::ssl::CertSignAlgsExtension$CHCertSignatureSchemesProducer),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CHCertSignatureSchemesUpdate", ::sun::security::ssl::CertSignAlgsExtension$CHCertSignatureSchemesUpdate),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CRCertSignatureSchemesConsumer", ::sun::security::ssl::CertSignAlgsExtension$CRCertSignatureSchemesConsumer),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CRCertSignatureSchemesProducer", ::sun::security::ssl::CertSignAlgsExtension$CRCertSignatureSchemesProducer),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CRCertSignatureSchemesUpdate", ::sun::security::ssl::CertSignAlgsExtension$CRCertSignatureSchemesUpdate),
	$classEntry("sun.security.ssl.CertSignAlgsExtension$CertSignatureSchemesStringizer", ::sun::security::ssl::CertSignAlgsExtension$CertSignatureSchemesStringizer),
	$classEntry("sun.security.ssl.CertStatusExtension", ::sun::security::ssl::CertStatusExtension),
	$classEntry("sun.security.ssl.CertStatusExtension$CHCertStatusReqConsumer", ::sun::security::ssl::CertStatusExtension$CHCertStatusReqConsumer),
	$classEntry("sun.security.ssl.CertStatusExtension$CHCertStatusReqProducer", ::sun::security::ssl::CertStatusExtension$CHCertStatusReqProducer),
	$classEntry("sun.security.ssl.CertStatusExtension$CHCertStatusReqV2Consumer", ::sun::security::ssl::CertStatusExtension$CHCertStatusReqV2Consumer),
	$classEntry("sun.security.ssl.CertStatusExtension$CHCertStatusReqV2Producer", ::sun::security::ssl::CertStatusExtension$CHCertStatusReqV2Producer),
	$classEntry("sun.security.ssl.CertStatusExtension$CTCertStatusResponseConsumer", ::sun::security::ssl::CertStatusExtension$CTCertStatusResponseConsumer),
	$classEntry("sun.security.ssl.CertStatusExtension$CTCertStatusResponseProducer", ::sun::security::ssl::CertStatusExtension$CTCertStatusResponseProducer),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequest", ::sun::security::ssl::CertStatusExtension$CertStatusRequest),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequestSpec", ::sun::security::ssl::CertStatusExtension$CertStatusRequestSpec),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequestStringizer", ::sun::security::ssl::CertStatusExtension$CertStatusRequestStringizer),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequestType", ::sun::security::ssl::CertStatusExtension$CertStatusRequestType),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequestV2Spec", ::sun::security::ssl::CertStatusExtension$CertStatusRequestV2Spec),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRequestsStringizer", ::sun::security::ssl::CertStatusExtension$CertStatusRequestsStringizer),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusRespStringizer", ::sun::security::ssl::CertStatusExtension$CertStatusRespStringizer),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusResponse", ::sun::security::ssl::CertStatusExtension$CertStatusResponse),
	$classEntry("sun.security.ssl.CertStatusExtension$CertStatusResponseSpec", ::sun::security::ssl::CertStatusExtension$CertStatusResponseSpec),
	$classEntry("sun.security.ssl.CertStatusExtension$OCSPStatusRequest", ::sun::security::ssl::CertStatusExtension$OCSPStatusRequest),
	$classEntry("sun.security.ssl.CertStatusExtension$OCSPStatusResponse", ::sun::security::ssl::CertStatusExtension$OCSPStatusResponse),
	$classEntry("sun.security.ssl.CertStatusExtension$SHCertStatusReqConsumer", ::sun::security::ssl::CertStatusExtension$SHCertStatusReqConsumer),
	$classEntry("sun.security.ssl.CertStatusExtension$SHCertStatusReqProducer", ::sun::security::ssl::CertStatusExtension$SHCertStatusReqProducer),
	$classEntry("sun.security.ssl.CertStatusExtension$SHCertStatusReqV2Consumer", ::sun::security::ssl::CertStatusExtension$SHCertStatusReqV2Consumer),
	$classEntry("sun.security.ssl.CertStatusExtension$SHCertStatusReqV2Producer", ::sun::security::ssl::CertStatusExtension$SHCertStatusReqV2Producer),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension", ::sun::security::ssl::CertificateAuthoritiesExtension),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CHCertificateAuthoritiesConsumer", ::sun::security::ssl::CertificateAuthoritiesExtension$CHCertificateAuthoritiesConsumer),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CHCertificateAuthoritiesProducer", ::sun::security::ssl::CertificateAuthoritiesExtension$CHCertificateAuthoritiesProducer),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CRCertificateAuthoritiesConsumer", ::sun::security::ssl::CertificateAuthoritiesExtension$CRCertificateAuthoritiesConsumer),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CRCertificateAuthoritiesProducer", ::sun::security::ssl::CertificateAuthoritiesExtension$CRCertificateAuthoritiesProducer),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CertificateAuthoritiesSpec", ::sun::security::ssl::CertificateAuthoritiesExtension$CertificateAuthoritiesSpec),
	$classEntry("sun.security.ssl.CertificateAuthoritiesExtension$CertificateAuthoritiesStringizer", ::sun::security::ssl::CertificateAuthoritiesExtension$CertificateAuthoritiesStringizer),
	$classEntry("sun.security.ssl.CertificateMessage", ::sun::security::ssl::CertificateMessage),
	$classEntry("sun.security.ssl.CertificateMessage$CertificateEntry", ::sun::security::ssl::CertificateMessage$CertificateEntry),
	$classEntry("sun.security.ssl.CertificateMessage$T12CertificateConsumer", ::sun::security::ssl::CertificateMessage$T12CertificateConsumer),
	$classEntry("sun.security.ssl.CertificateMessage$T12CertificateMessage", ::sun::security::ssl::CertificateMessage$T12CertificateMessage),
	$classEntry("sun.security.ssl.CertificateMessage$T12CertificateProducer", ::sun::security::ssl::CertificateMessage$T12CertificateProducer),
	$classEntry("sun.security.ssl.CertificateMessage$T13CertificateConsumer", ::sun::security::ssl::CertificateMessage$T13CertificateConsumer),
	$classEntry("sun.security.ssl.CertificateMessage$T13CertificateMessage", ::sun::security::ssl::CertificateMessage$T13CertificateMessage),
	$classEntry("sun.security.ssl.CertificateMessage$T13CertificateProducer", ::sun::security::ssl::CertificateMessage$T13CertificateProducer),
	$classEntry("sun.security.ssl.CertificateRequest", ::sun::security::ssl::CertificateRequest),
	$classEntry("sun.security.ssl.CertificateRequest$ClientCertificateType", ::sun::security::ssl::CertificateRequest$ClientCertificateType),
	$classEntry("sun.security.ssl.CertificateRequest$T10CertificateRequestConsumer", ::sun::security::ssl::CertificateRequest$T10CertificateRequestConsumer),
	$classEntry("sun.security.ssl.CertificateRequest$T10CertificateRequestMessage", ::sun::security::ssl::CertificateRequest$T10CertificateRequestMessage),
	$classEntry("sun.security.ssl.CertificateRequest$T10CertificateRequestProducer", ::sun::security::ssl::CertificateRequest$T10CertificateRequestProducer),
	$classEntry("sun.security.ssl.CertificateRequest$T12CertificateRequestConsumer", ::sun::security::ssl::CertificateRequest$T12CertificateRequestConsumer),
	$classEntry("sun.security.ssl.CertificateRequest$T12CertificateRequestMessage", ::sun::security::ssl::CertificateRequest$T12CertificateRequestMessage),
	$classEntry("sun.security.ssl.CertificateRequest$T12CertificateRequestProducer", ::sun::security::ssl::CertificateRequest$T12CertificateRequestProducer),
	$classEntry("sun.security.ssl.CertificateRequest$T13CertificateRequestConsumer", ::sun::security::ssl::CertificateRequest$T13CertificateRequestConsumer),
	$classEntry("sun.security.ssl.CertificateRequest$T13CertificateRequestMessage", ::sun::security::ssl::CertificateRequest$T13CertificateRequestMessage),
	$classEntry("sun.security.ssl.CertificateRequest$T13CertificateRequestProducer", ::sun::security::ssl::CertificateRequest$T13CertificateRequestProducer),
	$classEntry("sun.security.ssl.CertificateStatus", ::sun::security::ssl::CertificateStatus),
	$classEntry("sun.security.ssl.CertificateStatus$CertificateStatusAbsence", ::sun::security::ssl::CertificateStatus$CertificateStatusAbsence),
	$classEntry("sun.security.ssl.CertificateStatus$CertificateStatusConsumer", ::sun::security::ssl::CertificateStatus$CertificateStatusConsumer),
	$classEntry("sun.security.ssl.CertificateStatus$CertificateStatusMessage", ::sun::security::ssl::CertificateStatus$CertificateStatusMessage),
	$classEntry("sun.security.ssl.CertificateStatus$CertificateStatusProducer", ::sun::security::ssl::CertificateStatus$CertificateStatusProducer),
	$classEntry("sun.security.ssl.CertificateVerify", ::sun::security::ssl::CertificateVerify),
	$classEntry("sun.security.ssl.CertificateVerify$S30CertificateVerifyConsumer", ::sun::security::ssl::CertificateVerify$S30CertificateVerifyConsumer),
	$classEntry("sun.security.ssl.CertificateVerify$S30CertificateVerifyMessage", ::sun::security::ssl::CertificateVerify$S30CertificateVerifyMessage),
	$classEntry("sun.security.ssl.CertificateVerify$S30CertificateVerifyProducer", ::sun::security::ssl::CertificateVerify$S30CertificateVerifyProducer),
	$classEntry("sun.security.ssl.CertificateVerify$T10CertificateVerifyConsumer", ::sun::security::ssl::CertificateVerify$T10CertificateVerifyConsumer),
	$classEntry("sun.security.ssl.CertificateVerify$T10CertificateVerifyMessage", ::sun::security::ssl::CertificateVerify$T10CertificateVerifyMessage),
	$classEntry("sun.security.ssl.CertificateVerify$T10CertificateVerifyProducer", ::sun::security::ssl::CertificateVerify$T10CertificateVerifyProducer),
	$classEntry("sun.security.ssl.CertificateVerify$T12CertificateVerifyConsumer", ::sun::security::ssl::CertificateVerify$T12CertificateVerifyConsumer),
	$classEntry("sun.security.ssl.CertificateVerify$T12CertificateVerifyMessage", ::sun::security::ssl::CertificateVerify$T12CertificateVerifyMessage),
	$classEntry("sun.security.ssl.CertificateVerify$T12CertificateVerifyProducer", ::sun::security::ssl::CertificateVerify$T12CertificateVerifyProducer),
	$classEntry("sun.security.ssl.CertificateVerify$T13CertificateVerifyConsumer", ::sun::security::ssl::CertificateVerify$T13CertificateVerifyConsumer),
	$classEntry("sun.security.ssl.CertificateVerify$T13CertificateVerifyMessage", ::sun::security::ssl::CertificateVerify$T13CertificateVerifyMessage),
	$classEntry("sun.security.ssl.CertificateVerify$T13CertificateVerifyProducer", ::sun::security::ssl::CertificateVerify$T13CertificateVerifyProducer),
	$classEntry("sun.security.ssl.ChangeCipherSpec", ::sun::security::ssl::ChangeCipherSpec),
	$classEntry("sun.security.ssl.ChangeCipherSpec$T10ChangeCipherSpecConsumer", ::sun::security::ssl::ChangeCipherSpec$T10ChangeCipherSpecConsumer),
	$classEntry("sun.security.ssl.ChangeCipherSpec$T10ChangeCipherSpecProducer", ::sun::security::ssl::ChangeCipherSpec$T10ChangeCipherSpecProducer),
	$classEntry("sun.security.ssl.ChangeCipherSpec$T13ChangeCipherSpecConsumer", ::sun::security::ssl::ChangeCipherSpec$T13ChangeCipherSpecConsumer),
	$classEntry("sun.security.ssl.CipherSuite", ::sun::security::ssl::CipherSuite),
	$classEntry("sun.security.ssl.CipherSuite$1", ::sun::security::ssl::CipherSuite$1),
	$classEntry("sun.security.ssl.CipherSuite$HashAlg", ::sun::security::ssl::CipherSuite$HashAlg),
	$classEntry("sun.security.ssl.CipherSuite$KeyExchange", ::sun::security::ssl::CipherSuite$KeyExchange),
	$classEntry("sun.security.ssl.CipherSuite$MacAlg", ::sun::security::ssl::CipherSuite$MacAlg),
	$classEntry("sun.security.ssl.CipherType", ::sun::security::ssl::CipherType),
	$classEntry("sun.security.ssl.Ciphertext", ::sun::security::ssl::Ciphertext),
	$classEntry("sun.security.ssl.ClientAuthType", ::sun::security::ssl::ClientAuthType),
	$classEntry("sun.security.ssl.ClientHandshakeContext", ::sun::security::ssl::ClientHandshakeContext),
	$classEntry("sun.security.ssl.ClientHello", ::sun::security::ssl::ClientHello),
	$classEntry("sun.security.ssl.ClientHello$1", ::sun::security::ssl::ClientHello$1),
	$classEntry("sun.security.ssl.ClientHello$ClientHelloConsumer", ::sun::security::ssl::ClientHello$ClientHelloConsumer),
	$classEntry("sun.security.ssl.ClientHello$ClientHelloKickstartProducer", ::sun::security::ssl::ClientHello$ClientHelloKickstartProducer),
	$classEntry("sun.security.ssl.ClientHello$ClientHelloMessage", ::sun::security::ssl::ClientHello$ClientHelloMessage),
	$classEntry("sun.security.ssl.ClientHello$ClientHelloProducer", ::sun::security::ssl::ClientHello$ClientHelloProducer),
	$classEntry("sun.security.ssl.ClientHello$D12ClientHelloConsumer", ::sun::security::ssl::ClientHello$D12ClientHelloConsumer),
	$classEntry("sun.security.ssl.ClientHello$D13ClientHelloConsumer", ::sun::security::ssl::ClientHello$D13ClientHelloConsumer),
	$classEntry("sun.security.ssl.ClientHello$T12ClientHelloConsumer", ::sun::security::ssl::ClientHello$T12ClientHelloConsumer),
	$classEntry("sun.security.ssl.ClientHello$T13ClientHelloConsumer", ::sun::security::ssl::ClientHello$T13ClientHelloConsumer),
	$classEntry("sun.security.ssl.ClientKeyExchange", ::sun::security::ssl::ClientKeyExchange),
	$classEntry("sun.security.ssl.ClientKeyExchange$ClientKeyExchangeConsumer", ::sun::security::ssl::ClientKeyExchange$ClientKeyExchangeConsumer),
	$classEntry("sun.security.ssl.ClientKeyExchange$ClientKeyExchangeProducer", ::sun::security::ssl::ClientKeyExchange$ClientKeyExchangeProducer),
	$classEntry("sun.security.ssl.ConnectionContext", ::sun::security::ssl::ConnectionContext),
	$classEntry("sun.security.ssl.ContentType", ::sun::security::ssl::ContentType),
	$classEntry("sun.security.ssl.CookieExtension", ::sun::security::ssl::CookieExtension),
	$classEntry("sun.security.ssl.CookieExtension$CHCookieConsumer", ::sun::security::ssl::CookieExtension$CHCookieConsumer),
	$classEntry("sun.security.ssl.CookieExtension$CHCookieProducer", ::sun::security::ssl::CookieExtension$CHCookieProducer),
	$classEntry("sun.security.ssl.CookieExtension$CHCookieUpdate", ::sun::security::ssl::CookieExtension$CHCookieUpdate),
	$classEntry("sun.security.ssl.CookieExtension$CookieSpec", ::sun::security::ssl::CookieExtension$CookieSpec),
	$classEntry("sun.security.ssl.CookieExtension$CookieStringizer", ::sun::security::ssl::CookieExtension$CookieStringizer),
	$classEntry("sun.security.ssl.CookieExtension$HRRCookieConsumer", ::sun::security::ssl::CookieExtension$HRRCookieConsumer),
	$classEntry("sun.security.ssl.CookieExtension$HRRCookieProducer", ::sun::security::ssl::CookieExtension$HRRCookieProducer),
	$classEntry("sun.security.ssl.CookieExtension$HRRCookieReproducer", ::sun::security::ssl::CookieExtension$HRRCookieReproducer),
	$classEntry("sun.security.ssl.DHClientKeyExchange", ::sun::security::ssl::DHClientKeyExchange),
	$classEntry("sun.security.ssl.DHClientKeyExchange$DHClientKeyExchangeConsumer", ::sun::security::ssl::DHClientKeyExchange$DHClientKeyExchangeConsumer),
	$classEntry("sun.security.ssl.DHClientKeyExchange$DHClientKeyExchangeMessage", ::sun::security::ssl::DHClientKeyExchange$DHClientKeyExchangeMessage),
	$classEntry("sun.security.ssl.DHClientKeyExchange$DHClientKeyExchangeProducer", ::sun::security::ssl::DHClientKeyExchange$DHClientKeyExchangeProducer),
	$classEntry("sun.security.ssl.DHKeyExchange", ::sun::security::ssl::DHKeyExchange),
	$classEntry("sun.security.ssl.DHKeyExchange$DHECredentials", ::sun::security::ssl::DHKeyExchange$DHECredentials),
	$classEntry("sun.security.ssl.DHKeyExchange$DHEKAGenerator", ::sun::security::ssl::DHKeyExchange$DHEKAGenerator),
	$classEntry("sun.security.ssl.DHKeyExchange$DHEPossession", ::sun::security::ssl::DHKeyExchange$DHEPossession),
	$classEntry("sun.security.ssl.DHKeyExchange$DHEPossessionGenerator", ::sun::security::ssl::DHKeyExchange$DHEPossessionGenerator),
	$classEntry("sun.security.ssl.DHServerKeyExchange", ::sun::security::ssl::DHServerKeyExchange),
	$classEntry("sun.security.ssl.DHServerKeyExchange$DHServerKeyExchangeConsumer", ::sun::security::ssl::DHServerKeyExchange$DHServerKeyExchangeConsumer),
	$classEntry("sun.security.ssl.DHServerKeyExchange$DHServerKeyExchangeMessage", ::sun::security::ssl::DHServerKeyExchange$DHServerKeyExchangeMessage),
	$classEntry("sun.security.ssl.DHServerKeyExchange$DHServerKeyExchangeProducer", ::sun::security::ssl::DHServerKeyExchange$DHServerKeyExchangeProducer),
	$classEntry("sun.security.ssl.DTLSInputRecord", ::sun::security::ssl::DTLSInputRecord),
	$classEntry("sun.security.ssl.DTLSInputRecord$DTLSReassembler", ::sun::security::ssl::DTLSInputRecord$DTLSReassembler),
	$classEntry("sun.security.ssl.DTLSInputRecord$HandshakeFlight", ::sun::security::ssl::DTLSInputRecord$HandshakeFlight),
	$classEntry("sun.security.ssl.DTLSInputRecord$HandshakeFragment", ::sun::security::ssl::DTLSInputRecord$HandshakeFragment),
	$classEntry("sun.security.ssl.DTLSInputRecord$HoleDescriptor", ::sun::security::ssl::DTLSInputRecord$HoleDescriptor),
	$classEntry("sun.security.ssl.DTLSInputRecord$RecordFragment", ::sun::security::ssl::DTLSInputRecord$RecordFragment),
	$classEntry("sun.security.ssl.DTLSOutputRecord", ::sun::security::ssl::DTLSOutputRecord),
	$classEntry("sun.security.ssl.DTLSOutputRecord$DTLSFragmenter", ::sun::security::ssl::DTLSOutputRecord$DTLSFragmenter),
	$classEntry("sun.security.ssl.DTLSOutputRecord$HandshakeMemo", ::sun::security::ssl::DTLSOutputRecord$HandshakeMemo),
	$classEntry("sun.security.ssl.DTLSOutputRecord$RecordMemo", ::sun::security::ssl::DTLSOutputRecord$RecordMemo),
	$classEntry("sun.security.ssl.DTLSRecord", ::sun::security::ssl::DTLSRecord),
	$classEntry("sun.security.ssl.DummyX509KeyManager", ::sun::security::ssl::DummyX509KeyManager),
	$classEntry("sun.security.ssl.DummyX509TrustManager", ::sun::security::ssl::DummyX509TrustManager),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange", ::sun::security::ssl::ECDHClientKeyExchange),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange$ECDHClientKeyExchangeConsumer", ::sun::security::ssl::ECDHClientKeyExchange$ECDHClientKeyExchangeConsumer),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange$ECDHClientKeyExchangeMessage", ::sun::security::ssl::ECDHClientKeyExchange$ECDHClientKeyExchangeMessage),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange$ECDHClientKeyExchangeProducer", ::sun::security::ssl::ECDHClientKeyExchange$ECDHClientKeyExchangeProducer),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange$ECDHEClientKeyExchangeConsumer", ::sun::security::ssl::ECDHClientKeyExchange$ECDHEClientKeyExchangeConsumer),
	$classEntry("sun.security.ssl.ECDHClientKeyExchange$ECDHEClientKeyExchangeProducer", ::sun::security::ssl::ECDHClientKeyExchange$ECDHEClientKeyExchangeProducer),
	$classEntry("sun.security.ssl.ECDHKeyExchange", ::sun::security::ssl::ECDHKeyExchange),
	$classEntry("sun.security.ssl.ECDHKeyExchange$1", ::sun::security::ssl::ECDHKeyExchange$1),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHECredentials", ::sun::security::ssl::ECDHKeyExchange$ECDHECredentials),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHEKAGenerator", ::sun::security::ssl::ECDHKeyExchange$ECDHEKAGenerator),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHEPossession", ::sun::security::ssl::ECDHKeyExchange$ECDHEPossession),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHEPossessionGenerator", ::sun::security::ssl::ECDHKeyExchange$ECDHEPossessionGenerator),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHEXDHKAGenerator", ::sun::security::ssl::ECDHKeyExchange$ECDHEXDHKAGenerator),
	$classEntry("sun.security.ssl.ECDHKeyExchange$ECDHKAGenerator", ::sun::security::ssl::ECDHKeyExchange$ECDHKAGenerator),
	$classEntry("sun.security.ssl.ECDHServerKeyExchange", ::sun::security::ssl::ECDHServerKeyExchange),
	$classEntry("sun.security.ssl.ECDHServerKeyExchange$ECDHServerKeyExchangeConsumer", ::sun::security::ssl::ECDHServerKeyExchange$ECDHServerKeyExchangeConsumer),
	$classEntry("sun.security.ssl.ECDHServerKeyExchange$ECDHServerKeyExchangeMessage", ::sun::security::ssl::ECDHServerKeyExchange$ECDHServerKeyExchangeMessage),
	$classEntry("sun.security.ssl.ECDHServerKeyExchange$ECDHServerKeyExchangeProducer", ::sun::security::ssl::ECDHServerKeyExchange$ECDHServerKeyExchangeProducer),
	$classEntry("sun.security.ssl.ECPointFormatsExtension", ::sun::security::ssl::ECPointFormatsExtension),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$CHECPointFormatsConsumer", ::sun::security::ssl::ECPointFormatsExtension$CHECPointFormatsConsumer),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$CHECPointFormatsProducer", ::sun::security::ssl::ECPointFormatsExtension$CHECPointFormatsProducer),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$ECPointFormat", ::sun::security::ssl::ECPointFormatsExtension$ECPointFormat),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$ECPointFormatsSpec", ::sun::security::ssl::ECPointFormatsExtension$ECPointFormatsSpec),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$ECPointFormatsStringizer", ::sun::security::ssl::ECPointFormatsExtension$ECPointFormatsStringizer),
	$classEntry("sun.security.ssl.ECPointFormatsExtension$SHECPointFormatsConsumer", ::sun::security::ssl::ECPointFormatsExtension$SHECPointFormatsConsumer),
	$classEntry("sun.security.ssl.EncryptedExtensions", ::sun::security::ssl::EncryptedExtensions),
	$classEntry("sun.security.ssl.EncryptedExtensions$EncryptedExtensionsConsumer", ::sun::security::ssl::EncryptedExtensions$EncryptedExtensionsConsumer),
	$classEntry("sun.security.ssl.EncryptedExtensions$EncryptedExtensionsMessage", ::sun::security::ssl::EncryptedExtensions$EncryptedExtensionsMessage),
	$classEntry("sun.security.ssl.EncryptedExtensions$EncryptedExtensionsProducer", ::sun::security::ssl::EncryptedExtensions$EncryptedExtensionsProducer),
	$classEntry("sun.security.ssl.EphemeralKeyManager", ::sun::security::ssl::EphemeralKeyManager),
	$classEntry("sun.security.ssl.EphemeralKeyManager$EphemeralKeyPair", ::sun::security::ssl::EphemeralKeyManager$EphemeralKeyPair),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension", ::sun::security::ssl::ExtendedMasterSecretExtension),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$CHExtendedMasterSecretAbsence", ::sun::security::ssl::ExtendedMasterSecretExtension$CHExtendedMasterSecretAbsence),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$CHExtendedMasterSecretConsumer", ::sun::security::ssl::ExtendedMasterSecretExtension$CHExtendedMasterSecretConsumer),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$CHExtendedMasterSecretProducer", ::sun::security::ssl::ExtendedMasterSecretExtension$CHExtendedMasterSecretProducer),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$ExtendedMasterSecretSpec", ::sun::security::ssl::ExtendedMasterSecretExtension$ExtendedMasterSecretSpec),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$ExtendedMasterSecretStringizer", ::sun::security::ssl::ExtendedMasterSecretExtension$ExtendedMasterSecretStringizer),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$SHExtendedMasterSecretAbsence", ::sun::security::ssl::ExtendedMasterSecretExtension$SHExtendedMasterSecretAbsence),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$SHExtendedMasterSecretConsumer", ::sun::security::ssl::ExtendedMasterSecretExtension$SHExtendedMasterSecretConsumer),
	$classEntry("sun.security.ssl.ExtendedMasterSecretExtension$SHExtendedMasterSecretProducer", ::sun::security::ssl::ExtendedMasterSecretExtension$SHExtendedMasterSecretProducer),
	$classEntry("sun.security.ssl.Finished", ::sun::security::ssl::Finished),
	$classEntry("sun.security.ssl.Finished$1", ::sun::security::ssl::Finished$1),
	$classEntry("sun.security.ssl.Finished$FinishedMessage", ::sun::security::ssl::Finished$FinishedMessage),
	$classEntry("sun.security.ssl.Finished$S30VerifyDataGenerator", ::sun::security::ssl::Finished$S30VerifyDataGenerator),
	$classEntry("sun.security.ssl.Finished$T10VerifyDataGenerator", ::sun::security::ssl::Finished$T10VerifyDataGenerator),
	$classEntry("sun.security.ssl.Finished$T12FinishedConsumer", ::sun::security::ssl::Finished$T12FinishedConsumer),
	$classEntry("sun.security.ssl.Finished$T12FinishedProducer", ::sun::security::ssl::Finished$T12FinishedProducer),
	$classEntry("sun.security.ssl.Finished$T12VerifyDataGenerator", ::sun::security::ssl::Finished$T12VerifyDataGenerator),
	$classEntry("sun.security.ssl.Finished$T13FinishedConsumer", ::sun::security::ssl::Finished$T13FinishedConsumer),
	$classEntry("sun.security.ssl.Finished$T13FinishedProducer", ::sun::security::ssl::Finished$T13FinishedProducer),
	$classEntry("sun.security.ssl.Finished$T13VerifyDataGenerator", ::sun::security::ssl::Finished$T13VerifyDataGenerator),
	$classEntry("sun.security.ssl.Finished$VerifyDataGenerator", ::sun::security::ssl::Finished$VerifyDataGenerator),
	$classEntry("sun.security.ssl.Finished$VerifyDataScheme", ::sun::security::ssl::Finished$VerifyDataScheme),
	$classEntry("sun.security.ssl.HKDF", ::sun::security::ssl::HKDF),
	$classEntry("sun.security.ssl.HandshakeAbsence", ::sun::security::ssl::HandshakeAbsence),
	$classEntry("sun.security.ssl.HandshakeConsumer", ::sun::security::ssl::HandshakeConsumer),
	$classEntry("sun.security.ssl.HandshakeContext", ::sun::security::ssl::HandshakeContext),
	$classEntry("sun.security.ssl.HandshakeHash", ::sun::security::ssl::HandshakeHash),
	$classEntry("sun.security.ssl.HandshakeHash$CacheOnlyHash", ::sun::security::ssl::HandshakeHash$CacheOnlyHash),
	$classEntry("sun.security.ssl.HandshakeHash$CloneableHash", ::sun::security::ssl::HandshakeHash$CloneableHash),
	$classEntry("sun.security.ssl.HandshakeHash$NonCloneableHash", ::sun::security::ssl::HandshakeHash$NonCloneableHash),
	$classEntry("sun.security.ssl.HandshakeHash$S30HandshakeHash", ::sun::security::ssl::HandshakeHash$S30HandshakeHash),
	$classEntry("sun.security.ssl.HandshakeHash$T10HandshakeHash", ::sun::security::ssl::HandshakeHash$T10HandshakeHash),
	$classEntry("sun.security.ssl.HandshakeHash$T12HandshakeHash", ::sun::security::ssl::HandshakeHash$T12HandshakeHash),
	$classEntry("sun.security.ssl.HandshakeHash$T13HandshakeHash", ::sun::security::ssl::HandshakeHash$T13HandshakeHash),
	$classEntry("sun.security.ssl.HandshakeHash$TranscriptHash", ::sun::security::ssl::HandshakeHash$TranscriptHash),
	$classEntry("sun.security.ssl.HandshakeOutStream", ::sun::security::ssl::HandshakeOutStream),
	$classEntry("sun.security.ssl.HandshakeProducer", ::sun::security::ssl::HandshakeProducer),
	$classEntry("sun.security.ssl.HelloCookieManager", ::sun::security::ssl::HelloCookieManager),
	$classEntry("sun.security.ssl.HelloCookieManager$Builder", ::sun::security::ssl::HelloCookieManager$Builder),
	$classEntry("sun.security.ssl.HelloCookieManager$D10HelloCookieManager", ::sun::security::ssl::HelloCookieManager$D10HelloCookieManager),
	$classEntry("sun.security.ssl.HelloCookieManager$D13HelloCookieManager", ::sun::security::ssl::HelloCookieManager$D13HelloCookieManager),
	$classEntry("sun.security.ssl.HelloCookieManager$T13HelloCookieManager", ::sun::security::ssl::HelloCookieManager$T13HelloCookieManager),
	$classEntry("sun.security.ssl.HelloRequest", ::sun::security::ssl::HelloRequest),
	$classEntry("sun.security.ssl.HelloRequest$HelloRequestConsumer", ::sun::security::ssl::HelloRequest$HelloRequestConsumer),
	$classEntry("sun.security.ssl.HelloRequest$HelloRequestKickstartProducer", ::sun::security::ssl::HelloRequest$HelloRequestKickstartProducer),
	$classEntry("sun.security.ssl.HelloRequest$HelloRequestMessage", ::sun::security::ssl::HelloRequest$HelloRequestMessage),
	$classEntry("sun.security.ssl.HelloRequest$HelloRequestProducer", ::sun::security::ssl::HelloRequest$HelloRequestProducer),
	$classEntry("sun.security.ssl.HelloVerifyRequest", ::sun::security::ssl::HelloVerifyRequest),
	$classEntry("sun.security.ssl.HelloVerifyRequest$HelloVerifyRequestConsumer", ::sun::security::ssl::HelloVerifyRequest$HelloVerifyRequestConsumer),
	$classEntry("sun.security.ssl.HelloVerifyRequest$HelloVerifyRequestMessage", ::sun::security::ssl::HelloVerifyRequest$HelloVerifyRequestMessage),
	$classEntry("sun.security.ssl.HelloVerifyRequest$HelloVerifyRequestProducer", ::sun::security::ssl::HelloVerifyRequest$HelloVerifyRequestProducer),
	$classEntry("sun.security.ssl.InputRecord", ::sun::security::ssl::InputRecord),
	$classEntry("sun.security.ssl.JsseJce", ::sun::security::ssl::JsseJce),
	$classEntry("sun.security.ssl.JsseJce$EcAvailability", ::sun::security::ssl::JsseJce$EcAvailability),
	$classEntry("sun.security.ssl.KAKeyDerivation", ::sun::security::ssl::KAKeyDerivation),
	$classEntry("sun.security.ssl.KeyManagerFactoryImpl", ::sun::security::ssl::KeyManagerFactoryImpl),
	$classEntry("sun.security.ssl.KeyManagerFactoryImpl$SunX509", ::sun::security::ssl::KeyManagerFactoryImpl$SunX509),
	$classEntry("sun.security.ssl.KeyManagerFactoryImpl$X509", ::sun::security::ssl::KeyManagerFactoryImpl$X509),
	$classEntry("sun.security.ssl.KeyShareExtension", ::sun::security::ssl::KeyShareExtension),
	$classEntry("sun.security.ssl.KeyShareExtension$CHKeyShareConsumer", ::sun::security::ssl::KeyShareExtension$CHKeyShareConsumer),
	$classEntry("sun.security.ssl.KeyShareExtension$CHKeyShareOnTradeAbsence", ::sun::security::ssl::KeyShareExtension$CHKeyShareOnTradeAbsence),
	$classEntry("sun.security.ssl.KeyShareExtension$CHKeyShareProducer", ::sun::security::ssl::KeyShareExtension$CHKeyShareProducer),
	$classEntry("sun.security.ssl.KeyShareExtension$CHKeyShareSpec", ::sun::security::ssl::KeyShareExtension$CHKeyShareSpec),
	$classEntry("sun.security.ssl.KeyShareExtension$CHKeyShareStringizer", ::sun::security::ssl::KeyShareExtension$CHKeyShareStringizer),
	$classEntry("sun.security.ssl.KeyShareExtension$HRRKeyShareConsumer", ::sun::security::ssl::KeyShareExtension$HRRKeyShareConsumer),
	$classEntry("sun.security.ssl.KeyShareExtension$HRRKeyShareProducer", ::sun::security::ssl::KeyShareExtension$HRRKeyShareProducer),
	$classEntry("sun.security.ssl.KeyShareExtension$HRRKeyShareReproducer", ::sun::security::ssl::KeyShareExtension$HRRKeyShareReproducer),
	$classEntry("sun.security.ssl.KeyShareExtension$HRRKeyShareSpec", ::sun::security::ssl::KeyShareExtension$HRRKeyShareSpec),
	$classEntry("sun.security.ssl.KeyShareExtension$HRRKeyShareStringizer", ::sun::security::ssl::KeyShareExtension$HRRKeyShareStringizer),
	$classEntry("sun.security.ssl.KeyShareExtension$KeyShareEntry", ::sun::security::ssl::KeyShareExtension$KeyShareEntry),
	$classEntry("sun.security.ssl.KeyShareExtension$SHKeyShareAbsence", ::sun::security::ssl::KeyShareExtension$SHKeyShareAbsence),
	$classEntry("sun.security.ssl.KeyShareExtension$SHKeyShareConsumer", ::sun::security::ssl::KeyShareExtension$SHKeyShareConsumer),
	$classEntry("sun.security.ssl.KeyShareExtension$SHKeyShareProducer", ::sun::security::ssl::KeyShareExtension$SHKeyShareProducer),
	$classEntry("sun.security.ssl.KeyShareExtension$SHKeyShareSpec", ::sun::security::ssl::KeyShareExtension$SHKeyShareSpec),
	$classEntry("sun.security.ssl.KeyShareExtension$SHKeyShareStringizer", ::sun::security::ssl::KeyShareExtension$SHKeyShareStringizer),
	$classEntry("sun.security.ssl.KeyUpdate", ::sun::security::ssl::KeyUpdate),
	$classEntry("sun.security.ssl.KeyUpdate$KeyUpdateConsumer", ::sun::security::ssl::KeyUpdate$KeyUpdateConsumer),
	$classEntry("sun.security.ssl.KeyUpdate$KeyUpdateKickstartProducer", ::sun::security::ssl::KeyUpdate$KeyUpdateKickstartProducer),
	$classEntry("sun.security.ssl.KeyUpdate$KeyUpdateMessage", ::sun::security::ssl::KeyUpdate$KeyUpdateMessage),
	$classEntry("sun.security.ssl.KeyUpdate$KeyUpdateProducer", ::sun::security::ssl::KeyUpdate$KeyUpdateProducer),
	$classEntry("sun.security.ssl.KeyUpdate$KeyUpdateRequest", ::sun::security::ssl::KeyUpdate$KeyUpdateRequest),
	$classEntry("sun.security.ssl.MaxFragExtension", ::sun::security::ssl::MaxFragExtension),
	$classEntry("sun.security.ssl.MaxFragExtension$CHMaxFragmentLengthConsumer", ::sun::security::ssl::MaxFragExtension$CHMaxFragmentLengthConsumer),
	$classEntry("sun.security.ssl.MaxFragExtension$CHMaxFragmentLengthProducer", ::sun::security::ssl::MaxFragExtension$CHMaxFragmentLengthProducer),
	$classEntry("sun.security.ssl.MaxFragExtension$EEMaxFragmentLengthConsumer", ::sun::security::ssl::MaxFragExtension$EEMaxFragmentLengthConsumer),
	$classEntry("sun.security.ssl.MaxFragExtension$EEMaxFragmentLengthProducer", ::sun::security::ssl::MaxFragExtension$EEMaxFragmentLengthProducer),
	$classEntry("sun.security.ssl.MaxFragExtension$EEMaxFragmentLengthUpdate", ::sun::security::ssl::MaxFragExtension$EEMaxFragmentLengthUpdate),
	$classEntry("sun.security.ssl.MaxFragExtension$MaxFragLenEnum", ::sun::security::ssl::MaxFragExtension$MaxFragLenEnum),
	$classEntry("sun.security.ssl.MaxFragExtension$MaxFragLenSpec", ::sun::security::ssl::MaxFragExtension$MaxFragLenSpec),
	$classEntry("sun.security.ssl.MaxFragExtension$MaxFragLenStringizer", ::sun::security::ssl::MaxFragExtension$MaxFragLenStringizer),
	$classEntry("sun.security.ssl.MaxFragExtension$SHMaxFragmentLengthConsumer", ::sun::security::ssl::MaxFragExtension$SHMaxFragmentLengthConsumer),
	$classEntry("sun.security.ssl.MaxFragExtension$SHMaxFragmentLengthProducer", ::sun::security::ssl::MaxFragExtension$SHMaxFragmentLengthProducer),
	$classEntry("sun.security.ssl.MaxFragExtension$SHMaxFragmentLengthUpdate", ::sun::security::ssl::MaxFragExtension$SHMaxFragmentLengthUpdate),
	$classEntry("sun.security.ssl.NamedGroup", ::sun::security::ssl::NamedGroup),
	$classEntry("sun.security.ssl.NamedGroup$ECDHEScheme", ::sun::security::ssl::NamedGroup$ECDHEScheme),
	$classEntry("sun.security.ssl.NamedGroup$ExceptionSupplier", ::sun::security::ssl::NamedGroup$ExceptionSupplier),
	$classEntry("sun.security.ssl.NamedGroup$FFDHEScheme", ::sun::security::ssl::NamedGroup$FFDHEScheme),
	$classEntry("sun.security.ssl.NamedGroup$NamedGroupScheme", ::sun::security::ssl::NamedGroup$NamedGroupScheme),
	$classEntry("sun.security.ssl.NamedGroup$NamedGroupSpec", ::sun::security::ssl::NamedGroup$NamedGroupSpec),
	$classEntry("sun.security.ssl.NamedGroup$XDHScheme", ::sun::security::ssl::NamedGroup$XDHScheme),
	$classEntry("sun.security.ssl.NamedGroupCredentials", ::sun::security::ssl::NamedGroupCredentials),
	$classEntry("sun.security.ssl.NamedGroupPossession", ::sun::security::ssl::NamedGroupPossession),
	$classEntry("sun.security.ssl.NewSessionTicket", ::sun::security::ssl::NewSessionTicket),
	$classEntry("sun.security.ssl.NewSessionTicket$NewSessionTicketMessage", ::sun::security::ssl::NewSessionTicket$NewSessionTicketMessage),
	$classEntry("sun.security.ssl.NewSessionTicket$T12NewSessionTicketConsumer", ::sun::security::ssl::NewSessionTicket$T12NewSessionTicketConsumer),
	$classEntry("sun.security.ssl.NewSessionTicket$T12NewSessionTicketMessage", ::sun::security::ssl::NewSessionTicket$T12NewSessionTicketMessage),
	$classEntry("sun.security.ssl.NewSessionTicket$T12NewSessionTicketProducer", ::sun::security::ssl::NewSessionTicket$T12NewSessionTicketProducer),
	$classEntry("sun.security.ssl.NewSessionTicket$T13NewSessionTicketConsumer", ::sun::security::ssl::NewSessionTicket$T13NewSessionTicketConsumer),
	$classEntry("sun.security.ssl.NewSessionTicket$T13NewSessionTicketMessage", ::sun::security::ssl::NewSessionTicket$T13NewSessionTicketMessage),
	$classEntry("sun.security.ssl.NewSessionTicket$T13NewSessionTicketProducer", ::sun::security::ssl::NewSessionTicket$T13NewSessionTicketProducer),
	$classEntry("sun.security.ssl.OutputRecord", ::sun::security::ssl::OutputRecord),
	$classEntry("sun.security.ssl.OutputRecord$T13PaddingHolder", ::sun::security::ssl::OutputRecord$T13PaddingHolder),
	$classEntry("sun.security.ssl.Plaintext", ::sun::security::ssl::Plaintext),
	$classEntry("sun.security.ssl.PostHandshakeContext", ::sun::security::ssl::PostHandshakeContext),
	$classEntry("sun.security.ssl.PreSharedKeyExtension", ::sun::security::ssl::PreSharedKeyExtension),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyConsumer", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyConsumer),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyOnLoadAbsence", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyOnLoadAbsence),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyOnTradeAbsence", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyOnTradeAbsence),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyProducer", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyProducer),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeySpec", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeySpec),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyStringizer", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyStringizer),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$CHPreSharedKeyUpdate", ::sun::security::ssl::PreSharedKeyExtension$CHPreSharedKeyUpdate),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$PartialClientHelloMessage", ::sun::security::ssl::PreSharedKeyExtension$PartialClientHelloMessage),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$PskIdentity", ::sun::security::ssl::PreSharedKeyExtension$PskIdentity),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$SHPreSharedKeyAbsence", ::sun::security::ssl::PreSharedKeyExtension$SHPreSharedKeyAbsence),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$SHPreSharedKeyConsumer", ::sun::security::ssl::PreSharedKeyExtension$SHPreSharedKeyConsumer),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$SHPreSharedKeyProducer", ::sun::security::ssl::PreSharedKeyExtension$SHPreSharedKeyProducer),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$SHPreSharedKeySpec", ::sun::security::ssl::PreSharedKeyExtension$SHPreSharedKeySpec),
	$classEntry("sun.security.ssl.PreSharedKeyExtension$SHPreSharedKeyStringizer", ::sun::security::ssl::PreSharedKeyExtension$SHPreSharedKeyStringizer),
	$classEntry("sun.security.ssl.PredefinedDHParameterSpecs", ::sun::security::ssl::PredefinedDHParameterSpecs),
	$classEntry("sun.security.ssl.PredefinedDHParameterSpecs$1", ::sun::security::ssl::PredefinedDHParameterSpecs$1),
	$classEntry("sun.security.ssl.ProtocolVersion", ::sun::security::ssl::ProtocolVersion),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension", ::sun::security::ssl::PskKeyExchangeModesExtension),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeMode", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeMode),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesConsumer", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesConsumer),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesOnLoadAbsence", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesOnLoadAbsence),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesOnTradeAbsence", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesOnTradeAbsence),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesProducer", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesProducer),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesSpec", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesSpec),
	$classEntry("sun.security.ssl.PskKeyExchangeModesExtension$PskKeyExchangeModesStringizer", ::sun::security::ssl::PskKeyExchangeModesExtension$PskKeyExchangeModesStringizer),
	$classEntry("sun.security.ssl.RSAClientKeyExchange", ::sun::security::ssl::RSAClientKeyExchange),
	$classEntry("sun.security.ssl.RSAClientKeyExchange$RSAClientKeyExchangeConsumer", ::sun::security::ssl::RSAClientKeyExchange$RSAClientKeyExchangeConsumer),
	$classEntry("sun.security.ssl.RSAClientKeyExchange$RSAClientKeyExchangeMessage", ::sun::security::ssl::RSAClientKeyExchange$RSAClientKeyExchangeMessage),
	$classEntry("sun.security.ssl.RSAClientKeyExchange$RSAClientKeyExchangeProducer", ::sun::security::ssl::RSAClientKeyExchange$RSAClientKeyExchangeProducer),
	$classEntry("sun.security.ssl.RSAKeyExchange", ::sun::security::ssl::RSAKeyExchange),
	$classEntry("sun.security.ssl.RSAKeyExchange$EphemeralRSACredentials", ::sun::security::ssl::RSAKeyExchange$EphemeralRSACredentials),
	$classEntry("sun.security.ssl.RSAKeyExchange$EphemeralRSAPossession", ::sun::security::ssl::RSAKeyExchange$EphemeralRSAPossession),
	$classEntry("sun.security.ssl.RSAKeyExchange$EphemeralRSAPossessionGenerator", ::sun::security::ssl::RSAKeyExchange$EphemeralRSAPossessionGenerator),
	$classEntry("sun.security.ssl.RSAKeyExchange$RSAKAGenerator", ::sun::security::ssl::RSAKeyExchange$RSAKAGenerator),
	$classEntry("sun.security.ssl.RSAKeyExchange$RSAKAGenerator$RSAKAKeyDerivation", ::sun::security::ssl::RSAKeyExchange$RSAKAGenerator$RSAKAKeyDerivation),
	$classEntry("sun.security.ssl.RSAKeyExchange$RSAPremasterSecret", ::sun::security::ssl::RSAKeyExchange$RSAPremasterSecret),
	$classEntry("sun.security.ssl.RSAServerKeyExchange", ::sun::security::ssl::RSAServerKeyExchange),
	$classEntry("sun.security.ssl.RSAServerKeyExchange$RSAServerKeyExchangeConsumer", ::sun::security::ssl::RSAServerKeyExchange$RSAServerKeyExchangeConsumer),
	$classEntry("sun.security.ssl.RSAServerKeyExchange$RSAServerKeyExchangeMessage", ::sun::security::ssl::RSAServerKeyExchange$RSAServerKeyExchangeMessage),
	$classEntry("sun.security.ssl.RSAServerKeyExchange$RSAServerKeyExchangeProducer", ::sun::security::ssl::RSAServerKeyExchange$RSAServerKeyExchangeProducer),
	$classEntry("sun.security.ssl.RSASignature", ::sun::security::ssl::RSASignature),
	$classEntry("sun.security.ssl.RandomCookie", ::sun::security::ssl::RandomCookie),
	$classEntry("sun.security.ssl.Record", ::sun::security::ssl::Record),
	$classEntry("sun.security.ssl.RenegoInfoExtension", ::sun::security::ssl::RenegoInfoExtension),
	$classEntry("sun.security.ssl.RenegoInfoExtension$CHRenegotiationInfoAbsence", ::sun::security::ssl::RenegoInfoExtension$CHRenegotiationInfoAbsence),
	$classEntry("sun.security.ssl.RenegoInfoExtension$CHRenegotiationInfoConsumer", ::sun::security::ssl::RenegoInfoExtension$CHRenegotiationInfoConsumer),
	$classEntry("sun.security.ssl.RenegoInfoExtension$CHRenegotiationInfoProducer", ::sun::security::ssl::RenegoInfoExtension$CHRenegotiationInfoProducer),
	$classEntry("sun.security.ssl.RenegoInfoExtension$RenegotiationInfoSpec", ::sun::security::ssl::RenegoInfoExtension$RenegotiationInfoSpec),
	$classEntry("sun.security.ssl.RenegoInfoExtension$RenegotiationInfoStringizer", ::sun::security::ssl::RenegoInfoExtension$RenegotiationInfoStringizer),
	$classEntry("sun.security.ssl.RenegoInfoExtension$SHRenegotiationInfoAbsence", ::sun::security::ssl::RenegoInfoExtension$SHRenegotiationInfoAbsence),
	$classEntry("sun.security.ssl.RenegoInfoExtension$SHRenegotiationInfoConsumer", ::sun::security::ssl::RenegoInfoExtension$SHRenegotiationInfoConsumer),
	$classEntry("sun.security.ssl.RenegoInfoExtension$SHRenegotiationInfoProducer", ::sun::security::ssl::RenegoInfoExtension$SHRenegotiationInfoProducer),
	$classEntry("sun.security.ssl.SSLAlgorithmConstraints", ::sun::security::ssl::SSLAlgorithmConstraints),
	$classEntry("sun.security.ssl.SSLAlgorithmConstraints$SupportedSignatureAlgorithmConstraints", ::sun::security::ssl::SSLAlgorithmConstraints$SupportedSignatureAlgorithmConstraints),
	$classEntry("sun.security.ssl.SSLAlgorithmDecomposer", ::sun::security::ssl::SSLAlgorithmDecomposer),
	$classEntry("sun.security.ssl.SSLAlgorithmDecomposer$1", ::sun::security::ssl::SSLAlgorithmDecomposer$1),
	$classEntry("sun.security.ssl.SSLAuthentication", ::sun::security::ssl::SSLAuthentication),
	$classEntry("sun.security.ssl.SSLBasicKeyDerivation", ::sun::security::ssl::SSLBasicKeyDerivation),
	$classEntry("sun.security.ssl.SSLBasicKeyDerivation$SecretSizeSpec", ::sun::security::ssl::SSLBasicKeyDerivation$SecretSizeSpec),
	$classEntry("sun.security.ssl.SSLCipher", ::sun::security::ssl::SSLCipher),
	$classEntry("sun.security.ssl.SSLCipher$1", ::sun::security::ssl::SSLCipher$1),
	$classEntry("sun.security.ssl.SSLCipher$NullReadCipherGenerator", ::sun::security::ssl::SSLCipher$NullReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$NullReadCipherGenerator$NullReadCipher", ::sun::security::ssl::SSLCipher$NullReadCipherGenerator$NullReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$NullWriteCipherGenerator", ::sun::security::ssl::SSLCipher$NullWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$NullWriteCipherGenerator$NullWriteCipher", ::sun::security::ssl::SSLCipher$NullWriteCipherGenerator$NullWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$ReadCipherGenerator", ::sun::security::ssl::SSLCipher$ReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$SSLReadCipher", ::sun::security::ssl::SSLCipher$SSLReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$SSLWriteCipher", ::sun::security::ssl::SSLCipher$SSLWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$StreamReadCipherGenerator", ::sun::security::ssl::SSLCipher$StreamReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$StreamReadCipherGenerator$StreamReadCipher", ::sun::security::ssl::SSLCipher$StreamReadCipherGenerator$StreamReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$StreamWriteCipherGenerator", ::sun::security::ssl::SSLCipher$StreamWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$StreamWriteCipherGenerator$StreamWriteCipher", ::sun::security::ssl::SSLCipher$StreamWriteCipherGenerator$StreamWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T10BlockReadCipherGenerator", ::sun::security::ssl::SSLCipher$T10BlockReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T10BlockReadCipherGenerator$BlockReadCipher", ::sun::security::ssl::SSLCipher$T10BlockReadCipherGenerator$BlockReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T10BlockWriteCipherGenerator", ::sun::security::ssl::SSLCipher$T10BlockWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T10BlockWriteCipherGenerator$BlockWriteCipher", ::sun::security::ssl::SSLCipher$T10BlockWriteCipherGenerator$BlockWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T11BlockReadCipherGenerator", ::sun::security::ssl::SSLCipher$T11BlockReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T11BlockReadCipherGenerator$BlockReadCipher", ::sun::security::ssl::SSLCipher$T11BlockReadCipherGenerator$BlockReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T11BlockWriteCipherGenerator", ::sun::security::ssl::SSLCipher$T11BlockWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T11BlockWriteCipherGenerator$BlockWriteCipher", ::sun::security::ssl::SSLCipher$T11BlockWriteCipherGenerator$BlockWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T12CC20P1305ReadCipherGenerator", ::sun::security::ssl::SSLCipher$T12CC20P1305ReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T12CC20P1305ReadCipherGenerator$CC20P1305ReadCipher", ::sun::security::ssl::SSLCipher$T12CC20P1305ReadCipherGenerator$CC20P1305ReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T12CC20P1305WriteCipherGenerator", ::sun::security::ssl::SSLCipher$T12CC20P1305WriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T12CC20P1305WriteCipherGenerator$CC20P1305WriteCipher", ::sun::security::ssl::SSLCipher$T12CC20P1305WriteCipherGenerator$CC20P1305WriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T12GcmReadCipherGenerator", ::sun::security::ssl::SSLCipher$T12GcmReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T12GcmReadCipherGenerator$GcmReadCipher", ::sun::security::ssl::SSLCipher$T12GcmReadCipherGenerator$GcmReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T12GcmWriteCipherGenerator", ::sun::security::ssl::SSLCipher$T12GcmWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T12GcmWriteCipherGenerator$GcmWriteCipher", ::sun::security::ssl::SSLCipher$T12GcmWriteCipherGenerator$GcmWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T13CC20P1305ReadCipherGenerator", ::sun::security::ssl::SSLCipher$T13CC20P1305ReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T13CC20P1305ReadCipherGenerator$CC20P1305ReadCipher", ::sun::security::ssl::SSLCipher$T13CC20P1305ReadCipherGenerator$CC20P1305ReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T13CC20P1305WriteCipherGenerator", ::sun::security::ssl::SSLCipher$T13CC20P1305WriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T13CC20P1305WriteCipherGenerator$CC20P1305WriteCipher", ::sun::security::ssl::SSLCipher$T13CC20P1305WriteCipherGenerator$CC20P1305WriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$T13GcmReadCipherGenerator", ::sun::security::ssl::SSLCipher$T13GcmReadCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher", ::sun::security::ssl::SSLCipher$T13GcmReadCipherGenerator$GcmReadCipher),
	$classEntry("sun.security.ssl.SSLCipher$T13GcmWriteCipherGenerator", ::sun::security::ssl::SSLCipher$T13GcmWriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLCipher$T13GcmWriteCipherGenerator$GcmWriteCipher", ::sun::security::ssl::SSLCipher$T13GcmWriteCipherGenerator$GcmWriteCipher),
	$classEntry("sun.security.ssl.SSLCipher$WriteCipherGenerator", ::sun::security::ssl::SSLCipher$WriteCipherGenerator),
	$classEntry("sun.security.ssl.SSLConfiguration", ::sun::security::ssl::SSLConfiguration),
	$classEntry("sun.security.ssl.SSLConfiguration$1", ::sun::security::ssl::SSLConfiguration$1),
	$classEntry("sun.security.ssl.SSLConfiguration$CustomizedClientSignatureSchemes", ::sun::security::ssl::SSLConfiguration$CustomizedClientSignatureSchemes),
	$classEntry("sun.security.ssl.SSLConfiguration$CustomizedServerSignatureSchemes", ::sun::security::ssl::SSLConfiguration$CustomizedServerSignatureSchemes),
	$classEntry("sun.security.ssl.SSLConsumer", ::sun::security::ssl::SSLConsumer),
	$classEntry("sun.security.ssl.SSLContextImpl", ::sun::security::ssl::SSLContextImpl),
	$classEntry("sun.security.ssl.SSLContextImpl$AbstractDTLSContext", ::sun::security::ssl::SSLContextImpl$AbstractDTLSContext),
	$classEntry("sun.security.ssl.SSLContextImpl$AbstractTLSContext", ::sun::security::ssl::SSLContextImpl$AbstractTLSContext),
	$classEntry("sun.security.ssl.SSLContextImpl$CustomizedDTLSContext", ::sun::security::ssl::SSLContextImpl$CustomizedDTLSContext),
	$classEntry("sun.security.ssl.SSLContextImpl$CustomizedSSLProtocols", ::sun::security::ssl::SSLContextImpl$CustomizedSSLProtocols),
	$classEntry("sun.security.ssl.SSLContextImpl$CustomizedTLSContext", ::sun::security::ssl::SSLContextImpl$CustomizedTLSContext),
	$classEntry("sun.security.ssl.SSLContextImpl$DTLS10Context", ::sun::security::ssl::SSLContextImpl$DTLS10Context),
	$classEntry("sun.security.ssl.SSLContextImpl$DTLS12Context", ::sun::security::ssl::SSLContextImpl$DTLS12Context),
	$classEntry("sun.security.ssl.SSLContextImpl$DTLSContext", ::sun::security::ssl::SSLContextImpl$DTLSContext),
	$classEntry("sun.security.ssl.SSLContextImpl$DefaultManagersHolder", ::sun::security::ssl::SSLContextImpl$DefaultManagersHolder),
	$classEntry("sun.security.ssl.SSLContextImpl$DefaultManagersHolder$1", ::sun::security::ssl::SSLContextImpl$DefaultManagersHolder$1),
	$classEntry("sun.security.ssl.SSLContextImpl$DefaultManagersHolder$2", ::sun::security::ssl::SSLContextImpl$DefaultManagersHolder$2),
	$classEntry("sun.security.ssl.SSLContextImpl$DefaultSSLContext", ::sun::security::ssl::SSLContextImpl$DefaultSSLContext),
	$classEntry("sun.security.ssl.SSLContextImpl$DefaultSSLContextHolder", ::sun::security::ssl::SSLContextImpl$DefaultSSLContextHolder),
	$classEntry("sun.security.ssl.SSLContextImpl$TLS10Context", ::sun::security::ssl::SSLContextImpl$TLS10Context),
	$classEntry("sun.security.ssl.SSLContextImpl$TLS11Context", ::sun::security::ssl::SSLContextImpl$TLS11Context),
	$classEntry("sun.security.ssl.SSLContextImpl$TLS12Context", ::sun::security::ssl::SSLContextImpl$TLS12Context),
	$classEntry("sun.security.ssl.SSLContextImpl$TLS13Context", ::sun::security::ssl::SSLContextImpl$TLS13Context),
	$classEntry("sun.security.ssl.SSLContextImpl$TLSContext", ::sun::security::ssl::SSLContextImpl$TLSContext),
	$classEntry("sun.security.ssl.SSLCredentials", ::sun::security::ssl::SSLCredentials),
	$classEntry("sun.security.ssl.SSLEngineImpl", ::sun::security::ssl::SSLEngineImpl),
	$classEntry("sun.security.ssl.SSLEngineImpl$DelegatedTask", ::sun::security::ssl::SSLEngineImpl$DelegatedTask),
	$classEntry("sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction", ::sun::security::ssl::SSLEngineImpl$DelegatedTask$DelegatedAction),
	$classEntry("sun.security.ssl.SSLEngineInputRecord", ::sun::security::ssl::SSLEngineInputRecord),
	$classEntry("sun.security.ssl.SSLEngineOutputRecord", ::sun::security::ssl::SSLEngineOutputRecord),
	$classEntry("sun.security.ssl.SSLEngineOutputRecord$HandshakeFragment", ::sun::security::ssl::SSLEngineOutputRecord$HandshakeFragment),
	$classEntry("sun.security.ssl.SSLEngineOutputRecord$HandshakeMemo", ::sun::security::ssl::SSLEngineOutputRecord$HandshakeMemo),
	$classEntry("sun.security.ssl.SSLEngineOutputRecord$RecordMemo", ::sun::security::ssl::SSLEngineOutputRecord$RecordMemo),
	$classEntry("sun.security.ssl.SSLExtension", ::sun::security::ssl::SSLExtension),
	$classEntry("sun.security.ssl.SSLExtension$ClientExtensions", ::sun::security::ssl::SSLExtension$ClientExtensions),
	$classEntry("sun.security.ssl.SSLExtension$ExtensionConsumer", ::sun::security::ssl::SSLExtension$ExtensionConsumer),
	$classEntry("sun.security.ssl.SSLExtension$SSLExtensionSpec", ::sun::security::ssl::SSLExtension$SSLExtensionSpec),
	$classEntry("sun.security.ssl.SSLExtension$ServerExtensions", ::sun::security::ssl::SSLExtension$ServerExtensions),
	$classEntry("sun.security.ssl.SSLExtensions", ::sun::security::ssl::SSLExtensions),
	$classEntry("sun.security.ssl.SSLHandshake", ::sun::security::ssl::SSLHandshake),
	$classEntry("sun.security.ssl.SSLHandshake$HandshakeMessage", ::sun::security::ssl::SSLHandshake$HandshakeMessage),
	$classEntry("sun.security.ssl.SSLHandshakeBinding", ::sun::security::ssl::SSLHandshakeBinding),
	$classEntry("sun.security.ssl.SSLKeyAgreement", ::sun::security::ssl::SSLKeyAgreement),
	$classEntry("sun.security.ssl.SSLKeyAgreementGenerator", ::sun::security::ssl::SSLKeyAgreementGenerator),
	$classEntry("sun.security.ssl.SSLKeyDerivation", ::sun::security::ssl::SSLKeyDerivation),
	$classEntry("sun.security.ssl.SSLKeyDerivationGenerator", ::sun::security::ssl::SSLKeyDerivationGenerator),
	$classEntry("sun.security.ssl.SSLKeyExchange", ::sun::security::ssl::SSLKeyExchange),
	$classEntry("sun.security.ssl.SSLKeyExchange$1", ::sun::security::ssl::SSLKeyExchange$1),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHANON", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHANON),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHANONExport", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHANONExport),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHEDSS", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHEDSS),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHEDSSExport", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHEDSSExport),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHERSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHERSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHERSAExport", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHERSAExport),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExDHERSAOrPSS", ::sun::security::ssl::SSLKeyExchange$SSLKeyExDHERSAOrPSS),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHANON", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHANON),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHECDSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHECDSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHEECDSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHEECDSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHERSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHERSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHERSAOrPSS", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHERSAOrPSS),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExECDHRSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExECDHRSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExRSA", ::sun::security::ssl::SSLKeyExchange$SSLKeyExRSA),
	$classEntry("sun.security.ssl.SSLKeyExchange$SSLKeyExRSAExport", ::sun::security::ssl::SSLKeyExchange$SSLKeyExRSAExport),
	$classEntry("sun.security.ssl.SSLKeyExchange$T12KeyAgreement", ::sun::security::ssl::SSLKeyExchange$T12KeyAgreement),
	$classEntry("sun.security.ssl.SSLKeyExchange$T13KeyAgreement", ::sun::security::ssl::SSLKeyExchange$T13KeyAgreement),
	$classEntry("sun.security.ssl.SSLLogger", ::sun::security::ssl::SSLLogger),
	$classEntry("sun.security.ssl.SSLLogger$SSLConsoleLogger", ::sun::security::ssl::SSLLogger$SSLConsoleLogger),
	$classEntry("sun.security.ssl.SSLLogger$SSLSimpleFormatter", ::sun::security::ssl::SSLLogger$SSLSimpleFormatter),
	$classEntry("sun.security.ssl.SSLMasterKeyDerivation", ::sun::security::ssl::SSLMasterKeyDerivation),
	$classEntry("sun.security.ssl.SSLMasterKeyDerivation$1", ::sun::security::ssl::SSLMasterKeyDerivation$1),
	$classEntry("sun.security.ssl.SSLMasterKeyDerivation$LegacyMasterKeyDerivation", ::sun::security::ssl::SSLMasterKeyDerivation$LegacyMasterKeyDerivation),
	$classEntry("sun.security.ssl.SSLPossession", ::sun::security::ssl::SSLPossession),
	$classEntry("sun.security.ssl.SSLPossessionGenerator", ::sun::security::ssl::SSLPossessionGenerator),
	$classEntry("sun.security.ssl.SSLProducer", ::sun::security::ssl::SSLProducer),
	$classEntry("sun.security.ssl.SSLRecord", ::sun::security::ssl::SSLRecord),
	$classEntry("sun.security.ssl.SSLSecretDerivation", ::sun::security::ssl::SSLSecretDerivation),
	$classEntry("sun.security.ssl.SSLSecretDerivation$SecretSchedule", ::sun::security::ssl::SSLSecretDerivation$SecretSchedule),
	$classEntry("sun.security.ssl.SSLServerSocketFactoryImpl", ::sun::security::ssl::SSLServerSocketFactoryImpl),
	$classEntry("sun.security.ssl.SSLServerSocketImpl", ::sun::security::ssl::SSLServerSocketImpl),
	$classEntry("sun.security.ssl.SSLSessionContextImpl", ::sun::security::ssl::SSLSessionContextImpl),
	$classEntry("sun.security.ssl.SSLSessionContextImpl$SessionCacheVisitor", ::sun::security::ssl::SSLSessionContextImpl$SessionCacheVisitor),
	$classEntry("sun.security.ssl.SSLSessionImpl", ::sun::security::ssl::SSLSessionImpl),
	$classEntry("sun.security.ssl.SSLSocketFactoryImpl", ::sun::security::ssl::SSLSocketFactoryImpl),
	$classEntry("sun.security.ssl.SSLSocketImpl", ::sun::security::ssl::SSLSocketImpl),
	$classEntry("sun.security.ssl.SSLSocketImpl$AppInputStream", ::sun::security::ssl::SSLSocketImpl$AppInputStream),
	$classEntry("sun.security.ssl.SSLSocketImpl$AppOutputStream", ::sun::security::ssl::SSLSocketImpl$AppOutputStream),
	$classEntry("sun.security.ssl.SSLSocketInputRecord", ::sun::security::ssl::SSLSocketInputRecord),
	$classEntry("sun.security.ssl.SSLSocketOutputRecord", ::sun::security::ssl::SSLSocketOutputRecord),
	$classEntry("sun.security.ssl.SSLStringizer", ::sun::security::ssl::SSLStringizer),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation", ::sun::security::ssl::SSLTrafficKeyDerivation),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$1", ::sun::security::ssl::SSLTrafficKeyDerivation$1),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$KeySchedule", ::sun::security::ssl::SSLTrafficKeyDerivation$KeySchedule),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$LegacyTrafficKeyDerivation", ::sun::security::ssl::SSLTrafficKeyDerivation$LegacyTrafficKeyDerivation),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$S30TrafficKeyDerivationGenerator", ::sun::security::ssl::SSLTrafficKeyDerivation$S30TrafficKeyDerivationGenerator),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$T10TrafficKeyDerivationGenerator", ::sun::security::ssl::SSLTrafficKeyDerivation$T10TrafficKeyDerivationGenerator),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$T12TrafficKeyDerivationGenerator", ::sun::security::ssl::SSLTrafficKeyDerivation$T12TrafficKeyDerivationGenerator),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$T13TrafficKeyDerivation", ::sun::security::ssl::SSLTrafficKeyDerivation$T13TrafficKeyDerivation),
	$classEntry("sun.security.ssl.SSLTrafficKeyDerivation$T13TrafficKeyDerivationGenerator", ::sun::security::ssl::SSLTrafficKeyDerivation$T13TrafficKeyDerivationGenerator),
	$classEntry("sun.security.ssl.SSLTransport", ::sun::security::ssl::SSLTransport),
	$classEntry("sun.security.ssl.SecureKey", ::sun::security::ssl::SecureKey),
	$classEntry("sun.security.ssl.ServerHandshakeContext", ::sun::security::ssl::ServerHandshakeContext),
	$classEntry("sun.security.ssl.ServerHello", ::sun::security::ssl::ServerHello),
	$classEntry("sun.security.ssl.ServerHello$ServerHelloConsumer", ::sun::security::ssl::ServerHello$ServerHelloConsumer),
	$classEntry("sun.security.ssl.ServerHello$ServerHelloMessage", ::sun::security::ssl::ServerHello$ServerHelloMessage),
	$classEntry("sun.security.ssl.ServerHello$T12ServerHelloConsumer", ::sun::security::ssl::ServerHello$T12ServerHelloConsumer),
	$classEntry("sun.security.ssl.ServerHello$T12ServerHelloProducer", ::sun::security::ssl::ServerHello$T12ServerHelloProducer),
	$classEntry("sun.security.ssl.ServerHello$T12ServerHelloProducer$KeyExchangeProperties", ::sun::security::ssl::ServerHello$T12ServerHelloProducer$KeyExchangeProperties),
	$classEntry("sun.security.ssl.ServerHello$T13HelloRetryRequestConsumer", ::sun::security::ssl::ServerHello$T13HelloRetryRequestConsumer),
	$classEntry("sun.security.ssl.ServerHello$T13HelloRetryRequestProducer", ::sun::security::ssl::ServerHello$T13HelloRetryRequestProducer),
	$classEntry("sun.security.ssl.ServerHello$T13HelloRetryRequestReproducer", ::sun::security::ssl::ServerHello$T13HelloRetryRequestReproducer),
	$classEntry("sun.security.ssl.ServerHello$T13ServerHelloConsumer", ::sun::security::ssl::ServerHello$T13ServerHelloConsumer),
	$classEntry("sun.security.ssl.ServerHello$T13ServerHelloProducer", ::sun::security::ssl::ServerHello$T13ServerHelloProducer),
	$classEntry("sun.security.ssl.ServerHelloDone", ::sun::security::ssl::ServerHelloDone),
	$classEntry("sun.security.ssl.ServerHelloDone$ServerHelloDoneConsumer", ::sun::security::ssl::ServerHelloDone$ServerHelloDoneConsumer),
	$classEntry("sun.security.ssl.ServerHelloDone$ServerHelloDoneMessage", ::sun::security::ssl::ServerHelloDone$ServerHelloDoneMessage),
	$classEntry("sun.security.ssl.ServerHelloDone$ServerHelloDoneProducer", ::sun::security::ssl::ServerHelloDone$ServerHelloDoneProducer),
	$classEntry("sun.security.ssl.ServerKeyExchange", ::sun::security::ssl::ServerKeyExchange),
	$classEntry("sun.security.ssl.ServerKeyExchange$ServerKeyExchangeConsumer", ::sun::security::ssl::ServerKeyExchange$ServerKeyExchangeConsumer),
	$classEntry("sun.security.ssl.ServerKeyExchange$ServerKeyExchangeProducer", ::sun::security::ssl::ServerKeyExchange$ServerKeyExchangeProducer),
	$classEntry("sun.security.ssl.ServerNameExtension", ::sun::security::ssl::ServerNameExtension),
	$classEntry("sun.security.ssl.ServerNameExtension$CHServerNameConsumer", ::sun::security::ssl::ServerNameExtension$CHServerNameConsumer),
	$classEntry("sun.security.ssl.ServerNameExtension$CHServerNameProducer", ::sun::security::ssl::ServerNameExtension$CHServerNameProducer),
	$classEntry("sun.security.ssl.ServerNameExtension$CHServerNamesSpec", ::sun::security::ssl::ServerNameExtension$CHServerNamesSpec),
	$classEntry("sun.security.ssl.ServerNameExtension$CHServerNamesSpec$UnknownServerName", ::sun::security::ssl::ServerNameExtension$CHServerNamesSpec$UnknownServerName),
	$classEntry("sun.security.ssl.ServerNameExtension$CHServerNamesStringizer", ::sun::security::ssl::ServerNameExtension$CHServerNamesStringizer),
	$classEntry("sun.security.ssl.ServerNameExtension$EEServerNameConsumer", ::sun::security::ssl::ServerNameExtension$EEServerNameConsumer),
	$classEntry("sun.security.ssl.ServerNameExtension$EEServerNameProducer", ::sun::security::ssl::ServerNameExtension$EEServerNameProducer),
	$classEntry("sun.security.ssl.ServerNameExtension$SHServerNameConsumer", ::sun::security::ssl::ServerNameExtension$SHServerNameConsumer),
	$classEntry("sun.security.ssl.ServerNameExtension$SHServerNameProducer", ::sun::security::ssl::ServerNameExtension$SHServerNameProducer),
	$classEntry("sun.security.ssl.ServerNameExtension$SHServerNamesSpec", ::sun::security::ssl::ServerNameExtension$SHServerNamesSpec),
	$classEntry("sun.security.ssl.ServerNameExtension$SHServerNamesStringizer", ::sun::security::ssl::ServerNameExtension$SHServerNamesStringizer),
	$classEntry("sun.security.ssl.SessionId", ::sun::security::ssl::SessionId),
	$classEntry("sun.security.ssl.SessionTicketExtension", ::sun::security::ssl::SessionTicketExtension),
	$classEntry("sun.security.ssl.SessionTicketExtension$KeyState", ::sun::security::ssl::SessionTicketExtension$KeyState),
	$classEntry("sun.security.ssl.SessionTicketExtension$SessionTicketSpec", ::sun::security::ssl::SessionTicketExtension$SessionTicketSpec),
	$classEntry("sun.security.ssl.SessionTicketExtension$SessionTicketStringizer", ::sun::security::ssl::SessionTicketExtension$SessionTicketStringizer),
	$classEntry("sun.security.ssl.SessionTicketExtension$StatelessKey", ::sun::security::ssl::SessionTicketExtension$StatelessKey),
	$classEntry("sun.security.ssl.SessionTicketExtension$T12CHSessionTicketConsumer", ::sun::security::ssl::SessionTicketExtension$T12CHSessionTicketConsumer),
	$classEntry("sun.security.ssl.SessionTicketExtension$T12CHSessionTicketProducer", ::sun::security::ssl::SessionTicketExtension$T12CHSessionTicketProducer),
	$classEntry("sun.security.ssl.SessionTicketExtension$T12SHSessionTicketConsumer", ::sun::security::ssl::SessionTicketExtension$T12SHSessionTicketConsumer),
	$classEntry("sun.security.ssl.SessionTicketExtension$T12SHSessionTicketProducer", ::sun::security::ssl::SessionTicketExtension$T12SHSessionTicketProducer),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension", ::sun::security::ssl::SignatureAlgorithmsExtension),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CHSignatureSchemesConsumer", ::sun::security::ssl::SignatureAlgorithmsExtension$CHSignatureSchemesConsumer),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CHSignatureSchemesOnLoadAbsence", ::sun::security::ssl::SignatureAlgorithmsExtension$CHSignatureSchemesOnLoadAbsence),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CHSignatureSchemesOnTradeAbsence", ::sun::security::ssl::SignatureAlgorithmsExtension$CHSignatureSchemesOnTradeAbsence),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CHSignatureSchemesProducer", ::sun::security::ssl::SignatureAlgorithmsExtension$CHSignatureSchemesProducer),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CHSignatureSchemesUpdate", ::sun::security::ssl::SignatureAlgorithmsExtension$CHSignatureSchemesUpdate),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CRSignatureSchemesAbsence", ::sun::security::ssl::SignatureAlgorithmsExtension$CRSignatureSchemesAbsence),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CRSignatureSchemesConsumer", ::sun::security::ssl::SignatureAlgorithmsExtension$CRSignatureSchemesConsumer),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CRSignatureSchemesProducer", ::sun::security::ssl::SignatureAlgorithmsExtension$CRSignatureSchemesProducer),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$CRSignatureSchemesUpdate", ::sun::security::ssl::SignatureAlgorithmsExtension$CRSignatureSchemesUpdate),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$SignatureSchemesSpec", ::sun::security::ssl::SignatureAlgorithmsExtension$SignatureSchemesSpec),
	$classEntry("sun.security.ssl.SignatureAlgorithmsExtension$SignatureSchemesStringizer", ::sun::security::ssl::SignatureAlgorithmsExtension$SignatureSchemesStringizer),
	$classEntry("sun.security.ssl.SignatureScheme", ::sun::security::ssl::SignatureScheme),
	$classEntry("sun.security.ssl.SignatureScheme$SigAlgParamSpec", ::sun::security::ssl::SignatureScheme$SigAlgParamSpec),
	$classEntry("sun.security.ssl.StatusResponseManager", ::sun::security::ssl::StatusResponseManager),
	$classEntry("sun.security.ssl.StatusResponseManager$1", ::sun::security::ssl::StatusResponseManager$1),
	$classEntry("sun.security.ssl.StatusResponseManager$OCSPFetchCall", ::sun::security::ssl::StatusResponseManager$OCSPFetchCall),
	$classEntry("sun.security.ssl.StatusResponseManager$ResponseCacheEntry", ::sun::security::ssl::StatusResponseManager$ResponseCacheEntry),
	$classEntry("sun.security.ssl.StatusResponseManager$StaplingParameters", ::sun::security::ssl::StatusResponseManager$StaplingParameters),
	$classEntry("sun.security.ssl.StatusResponseManager$StatusInfo", ::sun::security::ssl::StatusResponseManager$StatusInfo),
	$classEntry("sun.security.ssl.SunJSSE", ::sun::security::ssl::SunJSSE),
	$classEntry("sun.security.ssl.SunX509KeyManagerImpl", ::sun::security::ssl::SunX509KeyManagerImpl),
	$classEntry("sun.security.ssl.SunX509KeyManagerImpl$X509Credentials", ::sun::security::ssl::SunX509KeyManagerImpl$X509Credentials),
	$classEntry("sun.security.ssl.SupportedGroupsExtension", ::sun::security::ssl::SupportedGroupsExtension),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$CHSupportedGroupsConsumer", ::sun::security::ssl::SupportedGroupsExtension$CHSupportedGroupsConsumer),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$CHSupportedGroupsOnTradeAbsence", ::sun::security::ssl::SupportedGroupsExtension$CHSupportedGroupsOnTradeAbsence),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$CHSupportedGroupsProducer", ::sun::security::ssl::SupportedGroupsExtension$CHSupportedGroupsProducer),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$EESupportedGroupsConsumer", ::sun::security::ssl::SupportedGroupsExtension$EESupportedGroupsConsumer),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$EESupportedGroupsProducer", ::sun::security::ssl::SupportedGroupsExtension$EESupportedGroupsProducer),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$SupportedGroups", ::sun::security::ssl::SupportedGroupsExtension$SupportedGroups),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$SupportedGroupsSpec", ::sun::security::ssl::SupportedGroupsExtension$SupportedGroupsSpec),
	$classEntry("sun.security.ssl.SupportedGroupsExtension$SupportedGroupsStringizer", ::sun::security::ssl::SupportedGroupsExtension$SupportedGroupsStringizer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension", ::sun::security::ssl::SupportedVersionsExtension),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$CHSupportedVersionsConsumer", ::sun::security::ssl::SupportedVersionsExtension$CHSupportedVersionsConsumer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$CHSupportedVersionsProducer", ::sun::security::ssl::SupportedVersionsExtension$CHSupportedVersionsProducer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$CHSupportedVersionsSpec", ::sun::security::ssl::SupportedVersionsExtension$CHSupportedVersionsSpec),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$CHSupportedVersionsStringizer", ::sun::security::ssl::SupportedVersionsExtension$CHSupportedVersionsStringizer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$HRRSupportedVersionsConsumer", ::sun::security::ssl::SupportedVersionsExtension$HRRSupportedVersionsConsumer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$HRRSupportedVersionsProducer", ::sun::security::ssl::SupportedVersionsExtension$HRRSupportedVersionsProducer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$HRRSupportedVersionsReproducer", ::sun::security::ssl::SupportedVersionsExtension$HRRSupportedVersionsReproducer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$SHSupportedVersionsConsumer", ::sun::security::ssl::SupportedVersionsExtension$SHSupportedVersionsConsumer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$SHSupportedVersionsProducer", ::sun::security::ssl::SupportedVersionsExtension$SHSupportedVersionsProducer),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$SHSupportedVersionsSpec", ::sun::security::ssl::SupportedVersionsExtension$SHSupportedVersionsSpec),
	$classEntry("sun.security.ssl.SupportedVersionsExtension$SHSupportedVersionsStringizer", ::sun::security::ssl::SupportedVersionsExtension$SHSupportedVersionsStringizer),
	$classEntry("sun.security.ssl.TransportContext", ::sun::security::ssl::TransportContext),
	$classEntry("sun.security.ssl.TransportContext$1", ::sun::security::ssl::TransportContext$1),
	$classEntry("sun.security.ssl.TransportContext$NotifyHandshake", ::sun::security::ssl::TransportContext$NotifyHandshake),
	$classEntry("sun.security.ssl.TransportContext$NotifyHandshake$1", ::sun::security::ssl::TransportContext$NotifyHandshake$1),
	$classEntry("sun.security.ssl.TrustManagerFactoryImpl", ::sun::security::ssl::TrustManagerFactoryImpl),
	$classEntry("sun.security.ssl.TrustManagerFactoryImpl$1", ::sun::security::ssl::TrustManagerFactoryImpl$1),
	$classEntry("sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory", ::sun::security::ssl::TrustManagerFactoryImpl$PKIXFactory),
	$classEntry("sun.security.ssl.TrustManagerFactoryImpl$SimpleFactory", ::sun::security::ssl::TrustManagerFactoryImpl$SimpleFactory),
	$classEntry("sun.security.ssl.TrustStoreManager", ::sun::security::ssl::TrustStoreManager),
	$classEntry("sun.security.ssl.TrustStoreManager$TrustAnchorManager", ::sun::security::ssl::TrustStoreManager$TrustAnchorManager),
	$classEntry("sun.security.ssl.TrustStoreManager$TrustStoreDescriptor", ::sun::security::ssl::TrustStoreManager$TrustStoreDescriptor),
	$classEntry("sun.security.ssl.TrustStoreManager$TrustStoreDescriptor$1", ::sun::security::ssl::TrustStoreManager$TrustStoreDescriptor$1),
	$classEntry("sun.security.ssl.Utilities", ::sun::security::ssl::Utilities),
	$classEntry("sun.security.ssl.X509Authentication", ::sun::security::ssl::X509Authentication),
	$classEntry("sun.security.ssl.X509Authentication$X509Credentials", ::sun::security::ssl::X509Authentication$X509Credentials),
	$classEntry("sun.security.ssl.X509Authentication$X509Possession", ::sun::security::ssl::X509Authentication$X509Possession),
	$classEntry("sun.security.ssl.X509Authentication$X509PossessionGenerator", ::sun::security::ssl::X509Authentication$X509PossessionGenerator),
	$classEntry("sun.security.ssl.X509KeyManagerImpl", ::sun::security::ssl::X509KeyManagerImpl),
	$classEntry("sun.security.ssl.X509KeyManagerImpl$CheckResult", ::sun::security::ssl::X509KeyManagerImpl$CheckResult),
	$classEntry("sun.security.ssl.X509KeyManagerImpl$CheckType", ::sun::security::ssl::X509KeyManagerImpl$CheckType),
	$classEntry("sun.security.ssl.X509KeyManagerImpl$EntryStatus", ::sun::security::ssl::X509KeyManagerImpl$EntryStatus),
	$classEntry("sun.security.ssl.X509KeyManagerImpl$KeyType", ::sun::security::ssl::X509KeyManagerImpl$KeyType),
	$classEntry("sun.security.ssl.X509KeyManagerImpl$SizedMap", ::sun::security::ssl::X509KeyManagerImpl$SizedMap),
	$classEntry("sun.security.ssl.X509TrustManagerImpl", ::sun::security::ssl::X509TrustManagerImpl),
	$classEntry("sun.security.ssl.XDHKeyExchange", ::sun::security::ssl::XDHKeyExchange),
	$classEntry("sun.security.ssl.XDHKeyExchange$1", ::sun::security::ssl::XDHKeyExchange$1),
	$classEntry("sun.security.ssl.XDHKeyExchange$XDHECredentials", ::sun::security::ssl::XDHKeyExchange$XDHECredentials),
	$classEntry("sun.security.ssl.XDHKeyExchange$XDHEKAGenerator", ::sun::security::ssl::XDHKeyExchange$XDHEKAGenerator),
	$classEntry("sun.security.ssl.XDHKeyExchange$XDHEPossession", ::sun::security::ssl::XDHKeyExchange$XDHEPossession),
	$classEntry("sun.security.timestamp.HttpTimestamper", ::sun::security::timestamp::HttpTimestamper),
	$classEntry("sun.security.timestamp.TSRequest", ::sun::security::timestamp::TSRequest),
	$classEntry("sun.security.timestamp.TSResponse", ::sun::security::timestamp::TSResponse),
	$classEntry("sun.security.timestamp.TSResponse$TimestampException", ::sun::security::timestamp::TSResponse$TimestampException),
	$classEntry("sun.security.timestamp.TimestampToken", ::sun::security::timestamp::TimestampToken),
	$classEntry("sun.security.timestamp.Timestamper", ::sun::security::timestamp::Timestamper),
	$classEntry("sun.security.tools.KeyStoreUtil", ::sun::security::tools::KeyStoreUtil),
	$classEntry("sun.security.tools.PathList", ::sun::security::tools::PathList),
	$classEntry("sun.security.tools.keytool.CertAndKeyGen", ::sun::security::tools::keytool::CertAndKeyGen),
	$classEntry("sun.security.tools.keytool.Main", ::sun::security::tools::keytool::Main),
	$classEntry("sun.security.tools.keytool.Main$Command", ::sun::security::tools::keytool::Main$Command),
	$classEntry("sun.security.tools.keytool.Main$Option", ::sun::security::tools::keytool::Main$Option),
	$classEntry("sun.security.tools.keytool.Pair", ::sun::security::tools::keytool::Pair),
	$classEntry("sun.security.tools.keytool.Resources", ::sun::security::tools::keytool::Resources),
	$classEntry("sun.security.tools.keytool.Resources_ja", ::sun::security::tools::keytool::Resources_ja),
	$classEntry("sun.security.tools.keytool.Resources_zh_CN", ::sun::security::tools::keytool::Resources_zh_CN),
	$classEntry("sun.security.tools.keytool.ShowInfo", ::sun::security::tools::keytool::ShowInfo),
	$classEntry("sun.security.util.AbstractAlgorithmConstraints", ::sun::security::util::AbstractAlgorithmConstraints),
	$classEntry("sun.security.util.AbstractAlgorithmConstraints$1", ::sun::security::util::AbstractAlgorithmConstraints$1),
	$classEntry("sun.security.util.AlgorithmDecomposer", ::sun::security::util::AlgorithmDecomposer),
	$classEntry("sun.security.util.AnchorCertificates", ::sun::security::util::AnchorCertificates),
	$classEntry("sun.security.util.AnchorCertificates$1", ::sun::security::util::AnchorCertificates$1),
	$classEntry("sun.security.util.ArrayUtil", ::sun::security::util::ArrayUtil),
	$classEntry("sun.security.util.AuthResources", ::sun::security::util::AuthResources),
	$classEntry("sun.security.util.AuthResources_ja", ::sun::security::util::AuthResources_ja),
	$classEntry("sun.security.util.AuthResources_zh_CN", ::sun::security::util::AuthResources_zh_CN),
	$classEntry("sun.security.util.BitArray", ::sun::security::util::BitArray),
	$classEntry("sun.security.util.ByteArrayLexOrder", ::sun::security::util::ByteArrayLexOrder),
	$classEntry("sun.security.util.ByteArrayTagOrder", ::sun::security::util::ByteArrayTagOrder),
	$classEntry("sun.security.util.Cache", ::sun::security::util::Cache),
	$classEntry("sun.security.util.Cache$CacheVisitor", ::sun::security::util::Cache$CacheVisitor),
	$classEntry("sun.security.util.Cache$EqualByteArray", ::sun::security::util::Cache$EqualByteArray),
	$classEntry("sun.security.util.ConsoleCallbackHandler", ::sun::security::util::ConsoleCallbackHandler),
	$classEntry("sun.security.util.ConsoleCallbackHandler$1OptionInfo", ::sun::security::util::ConsoleCallbackHandler$1OptionInfo),
	$classEntry("sun.security.util.ConstraintsParameters", ::sun::security::util::ConstraintsParameters),
	$classEntry("sun.security.util.CurveDB", ::sun::security::util::CurveDB),
	$classEntry("sun.security.util.Debug", ::sun::security::util::Debug),
	$classEntry("sun.security.util.DerEncoder", ::sun::security::util::DerEncoder),
	$classEntry("sun.security.util.DerIndefLenConverter", ::sun::security::util::DerIndefLenConverter),
	$classEntry("sun.security.util.DerInputStream", ::sun::security::util::DerInputStream),
	$classEntry("sun.security.util.DerOutputStream", ::sun::security::util::DerOutputStream),
	$classEntry("sun.security.util.DerValue", ::sun::security::util::DerValue),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints", ::sun::security::util::DisabledAlgorithmConstraints),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$1", ::sun::security::util::DisabledAlgorithmConstraints$1),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$CertPathHolder", ::sun::security::util::DisabledAlgorithmConstraints$CertPathHolder),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$Constraint", ::sun::security::util::DisabledAlgorithmConstraints$Constraint),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator", ::sun::security::util::DisabledAlgorithmConstraints$Constraint$Operator),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$Constraints", ::sun::security::util::DisabledAlgorithmConstraints$Constraints),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$Constraints$Holder", ::sun::security::util::DisabledAlgorithmConstraints$Constraints$Holder),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$DenyAfterConstraint", ::sun::security::util::DisabledAlgorithmConstraints$DenyAfterConstraint),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$DisabledConstraint", ::sun::security::util::DisabledAlgorithmConstraints$DisabledConstraint),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$JarHolder", ::sun::security::util::DisabledAlgorithmConstraints$JarHolder),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint", ::sun::security::util::DisabledAlgorithmConstraints$KeySizeConstraint),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$UsageConstraint", ::sun::security::util::DisabledAlgorithmConstraints$UsageConstraint),
	$classEntry("sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint", ::sun::security::util::DisabledAlgorithmConstraints$jdkCAConstraint),
	$classEntry("sun.security.util.DomainName", ::sun::security::util::DomainName),
	$classEntry("sun.security.util.DomainName$1", ::sun::security::util::DomainName$1),
	$classEntry("sun.security.util.DomainName$CommonMatch", ::sun::security::util::DomainName$CommonMatch),
	$classEntry("sun.security.util.DomainName$Match", ::sun::security::util::DomainName$Match),
	$classEntry("sun.security.util.DomainName$OtherMatch", ::sun::security::util::DomainName$OtherMatch),
	$classEntry("sun.security.util.DomainName$OtherRule", ::sun::security::util::DomainName$OtherRule),
	$classEntry("sun.security.util.DomainName$RegisteredDomainImpl", ::sun::security::util::DomainName$RegisteredDomainImpl),
	$classEntry("sun.security.util.DomainName$Rule", ::sun::security::util::DomainName$Rule),
	$classEntry("sun.security.util.DomainName$Rule$Type", ::sun::security::util::DomainName$Rule$Type),
	$classEntry("sun.security.util.DomainName$Rules", ::sun::security::util::DomainName$Rules),
	$classEntry("sun.security.util.DomainName$Rules$1", ::sun::security::util::DomainName$Rules$1),
	$classEntry("sun.security.util.DomainName$Rules$RuleSet", ::sun::security::util::DomainName$Rules$RuleSet),
	$classEntry("sun.security.util.ECKeySizeParameterSpec", ::sun::security::util::ECKeySizeParameterSpec),
	$classEntry("sun.security.util.ECParameters", ::sun::security::util::ECParameters),
	$classEntry("sun.security.util.ECUtil", ::sun::security::util::ECUtil),
	$classEntry("sun.security.util.Event", ::sun::security::util::Event),
	$classEntry("sun.security.util.Event$Reporter", ::sun::security::util::Event$Reporter),
	$classEntry("sun.security.util.Event$ReporterCategory", ::sun::security::util::Event$ReporterCategory),
	$classEntry("sun.security.util.FilePaths", ::sun::security::util::FilePaths),
	$classEntry("sun.security.util.FilePermCompat", ::sun::security::util::FilePermCompat),
	$classEntry("sun.security.util.GCMParameters", ::sun::security::util::GCMParameters),
	$classEntry("sun.security.util.HexDumpEncoder", ::sun::security::util::HexDumpEncoder),
	$classEntry("sun.security.util.HostnameChecker", ::sun::security::util::HostnameChecker),
	$classEntry("sun.security.util.IOUtils", ::sun::security::util::IOUtils),
	$classEntry("sun.security.util.JarConstraintsParameters", ::sun::security::util::JarConstraintsParameters),
	$classEntry("sun.security.util.KeyStoreDelegator", ::sun::security::util::KeyStoreDelegator),
	$classEntry("sun.security.util.KeyUtil", ::sun::security::util::KeyUtil),
	$classEntry("sun.security.util.KnownOIDs", ::sun::security::util::KnownOIDs),
	$classEntry("sun.security.util.KnownOIDs$1", ::sun::security::util::KnownOIDs$1),
	$classEntry("sun.security.util.KnownOIDs$10", ::sun::security::util::KnownOIDs$10),
	$classEntry("sun.security.util.KnownOIDs$2", ::sun::security::util::KnownOIDs$2),
	$classEntry("sun.security.util.KnownOIDs$3", ::sun::security::util::KnownOIDs$3),
	$classEntry("sun.security.util.KnownOIDs$4", ::sun::security::util::KnownOIDs$4),
	$classEntry("sun.security.util.KnownOIDs$5", ::sun::security::util::KnownOIDs$5),
	$classEntry("sun.security.util.KnownOIDs$6", ::sun::security::util::KnownOIDs$6),
	$classEntry("sun.security.util.KnownOIDs$7", ::sun::security::util::KnownOIDs$7),
	$classEntry("sun.security.util.KnownOIDs$8", ::sun::security::util::KnownOIDs$8),
	$classEntry("sun.security.util.KnownOIDs$9", ::sun::security::util::KnownOIDs$9),
	$classEntry("sun.security.util.LazyCodeSourcePermissionCollection", ::sun::security::util::LazyCodeSourcePermissionCollection),
	$classEntry("sun.security.util.LegacyAlgorithmConstraints", ::sun::security::util::LegacyAlgorithmConstraints),
	$classEntry("sun.security.util.Length", ::sun::security::util::Length),
	$classEntry("sun.security.util.LocalizedMessage", ::sun::security::util::LocalizedMessage),
	$classEntry("sun.security.util.ManifestDigester", ::sun::security::util::ManifestDigester),
	$classEntry("sun.security.util.ManifestDigester$Entry", ::sun::security::util::ManifestDigester$Entry),
	$classEntry("sun.security.util.ManifestDigester$Position", ::sun::security::util::ManifestDigester$Position),
	$classEntry("sun.security.util.ManifestDigester$Section", ::sun::security::util::ManifestDigester$Section),
	$classEntry("sun.security.util.ManifestEntryVerifier", ::sun::security::util::ManifestEntryVerifier),
	$classEntry("sun.security.util.ManifestEntryVerifier$SunProviderHolder", ::sun::security::util::ManifestEntryVerifier$SunProviderHolder),
	$classEntry("sun.security.util.MemoryCache", ::sun::security::util::MemoryCache),
	$classEntry("sun.security.util.MemoryCache$CacheEntry", ::sun::security::util::MemoryCache$CacheEntry),
	$classEntry("sun.security.util.MemoryCache$HardCacheEntry", ::sun::security::util::MemoryCache$HardCacheEntry),
	$classEntry("sun.security.util.MemoryCache$SoftCacheEntry", ::sun::security::util::MemoryCache$SoftCacheEntry),
	$classEntry("sun.security.util.MessageDigestSpi2", ::sun::security::util::MessageDigestSpi2),
	$classEntry("sun.security.util.NamedCurve", ::sun::security::util::NamedCurve),
	$classEntry("sun.security.util.NullCache", ::sun::security::util::NullCache),
	$classEntry("sun.security.util.ObjectIdentifier", ::sun::security::util::ObjectIdentifier),
	$classEntry("sun.security.util.ObjectIdentifier$HugeOidNotSupportedByOldJDK", ::sun::security::util::ObjectIdentifier$HugeOidNotSupportedByOldJDK),
	$classEntry("sun.security.util.Password", ::sun::security::util::Password),
	$classEntry("sun.security.util.Pem", ::sun::security::util::Pem),
	$classEntry("sun.security.util.PendingException", ::sun::security::util::PendingException),
	$classEntry("sun.security.util.PermissionFactory", ::sun::security::util::PermissionFactory),
	$classEntry("sun.security.util.PolicyUtil", ::sun::security::util::PolicyUtil),
	$classEntry("sun.security.util.PropertyExpander", ::sun::security::util::PropertyExpander),
	$classEntry("sun.security.util.PropertyExpander$ExpandException", ::sun::security::util::PropertyExpander$ExpandException),
	$classEntry("sun.security.util.RegisteredDomain", ::sun::security::util::RegisteredDomain),
	$classEntry("sun.security.util.RegisteredDomain$Type", ::sun::security::util::RegisteredDomain$Type),
	$classEntry("sun.security.util.Resources", ::sun::security::util::Resources),
	$classEntry("sun.security.util.ResourcesMgr", ::sun::security::util::ResourcesMgr),
	$classEntry("sun.security.util.Resources_ja", ::sun::security::util::Resources_ja),
	$classEntry("sun.security.util.Resources_zh_CN", ::sun::security::util::Resources_zh_CN),
	$classEntry("sun.security.util.SecurityConstants", ::sun::security::util::SecurityConstants),
	$classEntry("sun.security.util.SecurityProperties", ::sun::security::util::SecurityProperties),
	$classEntry("sun.security.util.SecurityProviderConstants", ::sun::security::util::SecurityProviderConstants),
	$classEntry("sun.security.util.SignatureFileVerifier", ::sun::security::util::SignatureFileVerifier),
	$classEntry("sun.security.util.SignatureUtil", ::sun::security::util::SignatureUtil),
	$classEntry("sun.security.util.SignatureUtil$EdDSADigestAlgHolder", ::sun::security::util::SignatureUtil$EdDSADigestAlgHolder),
	$classEntry("sun.security.util.SignatureUtil$PSSParamsHolder", ::sun::security::util::SignatureUtil$PSSParamsHolder),
	$classEntry("sun.security.util.UntrustedCertificates", ::sun::security::util::UntrustedCertificates),
	$classEntry("sun.security.util.UntrustedCertificates$1", ::sun::security::util::UntrustedCertificates$1),
	$classEntry("sun.security.util.math.ImmutableIntegerModuloP", ::sun::security::util::math::ImmutableIntegerModuloP),
	$classEntry("sun.security.util.math.IntegerFieldModuloP", ::sun::security::util::math::IntegerFieldModuloP),
	$classEntry("sun.security.util.math.IntegerModuloP", ::sun::security::util::math::IntegerModuloP),
	$classEntry("sun.security.util.math.MutableIntegerModuloP", ::sun::security::util::math::MutableIntegerModuloP),
	$classEntry("sun.security.util.math.SmallValue", ::sun::security::util::math::SmallValue),
	$classEntry("sun.security.util.math.intpoly.Curve25519OrderField", ::sun::security::util::math::intpoly::Curve25519OrderField),
	$classEntry("sun.security.util.math.intpoly.Curve448OrderField", ::sun::security::util::math::intpoly::Curve448OrderField),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial", ::sun::security::util::math::intpoly::IntegerPolynomial),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial$Element", ::sun::security::util::math::intpoly::IntegerPolynomial$Element),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement", ::sun::security::util::math::intpoly::IntegerPolynomial$ImmutableElement),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial$Limb", ::sun::security::util::math::intpoly::IntegerPolynomial$Limb),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial$MutableElement", ::sun::security::util::math::intpoly::IntegerPolynomial$MutableElement),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial1305", ::sun::security::util::math::intpoly::IntegerPolynomial1305),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial25519", ::sun::security::util::math::intpoly::IntegerPolynomial25519),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomial448", ::sun::security::util::math::intpoly::IntegerPolynomial448),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialModBinP", ::sun::security::util::math::intpoly::IntegerPolynomialModBinP),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialModBinP$Curve25519OrderField", ::sun::security::util::math::intpoly::IntegerPolynomialModBinP$Curve25519OrderField),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialModBinP$Curve448OrderField", ::sun::security::util::math::intpoly::IntegerPolynomialModBinP$Curve448OrderField),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialP256", ::sun::security::util::math::intpoly::IntegerPolynomialP256),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialP384", ::sun::security::util::math::intpoly::IntegerPolynomialP384),
	$classEntry("sun.security.util.math.intpoly.IntegerPolynomialP521", ::sun::security::util::math::intpoly::IntegerPolynomialP521),
	$classEntry("sun.security.util.math.intpoly.P256OrderField", ::sun::security::util::math::intpoly::P256OrderField),
	$classEntry("sun.security.util.math.intpoly.P384OrderField", ::sun::security::util::math::intpoly::P384OrderField),
	$classEntry("sun.security.util.math.intpoly.P521OrderField", ::sun::security::util::math::intpoly::P521OrderField),
	$classEntry("sun.security.validator.CADistrustPolicy", ::sun::security::validator::CADistrustPolicy),
	$classEntry("sun.security.validator.CADistrustPolicy$1", ::sun::security::validator::CADistrustPolicy$1),
	$classEntry("sun.security.validator.CADistrustPolicy$2", ::sun::security::validator::CADistrustPolicy$2),
	$classEntry("sun.security.validator.EndEntityChecker", ::sun::security::validator::EndEntityChecker),
	$classEntry("sun.security.validator.PKIXValidator", ::sun::security::validator::PKIXValidator),
	$classEntry("sun.security.validator.SimpleValidator", ::sun::security::validator::SimpleValidator),
	$classEntry("sun.security.validator.SymantecTLSPolicy", ::sun::security::validator::SymantecTLSPolicy),
	$classEntry("sun.security.validator.TrustStoreUtil", ::sun::security::validator::TrustStoreUtil),
	$classEntry("sun.security.validator.Validator", ::sun::security::validator::Validator),
	$classEntry("sun.security.validator.ValidatorException", ::sun::security::validator::ValidatorException),
	$classEntry("sun.security.x509.AVA", ::sun::security::x509::AVA),
	$classEntry("sun.security.x509.AVAComparator", ::sun::security::x509::AVAComparator),
	$classEntry("sun.security.x509.AVAKeyword", ::sun::security::x509::AVAKeyword),
	$classEntry("sun.security.x509.AccessDescription", ::sun::security::x509::AccessDescription),
	$classEntry("sun.security.x509.AlgIdDSA", ::sun::security::x509::AlgIdDSA),
	$classEntry("sun.security.x509.AlgorithmId", ::sun::security::x509::AlgorithmId),
	$classEntry("sun.security.x509.AttributeNameEnumeration", ::sun::security::x509::AttributeNameEnumeration),
	$classEntry("sun.security.x509.AuthorityInfoAccessExtension", ::sun::security::x509::AuthorityInfoAccessExtension),
	$classEntry("sun.security.x509.AuthorityKeyIdentifierExtension", ::sun::security::x509::AuthorityKeyIdentifierExtension),
	$classEntry("sun.security.x509.BasicConstraintsExtension", ::sun::security::x509::BasicConstraintsExtension),
	$classEntry("sun.security.x509.CRLDistributionPointsExtension", ::sun::security::x509::CRLDistributionPointsExtension),
	$classEntry("sun.security.x509.CRLExtensions", ::sun::security::x509::CRLExtensions),
	$classEntry("sun.security.x509.CRLNumberExtension", ::sun::security::x509::CRLNumberExtension),
	$classEntry("sun.security.x509.CRLReasonCodeExtension", ::sun::security::x509::CRLReasonCodeExtension),
	$classEntry("sun.security.x509.CertAttrSet", ::sun::security::x509::CertAttrSet),
	$classEntry("sun.security.x509.CertException", ::sun::security::x509::CertException),
	$classEntry("sun.security.x509.CertParseError", ::sun::security::x509::CertParseError),
	$classEntry("sun.security.x509.CertificateAlgorithmId", ::sun::security::x509::CertificateAlgorithmId),
	$classEntry("sun.security.x509.CertificateExtensions", ::sun::security::x509::CertificateExtensions),
	$classEntry("sun.security.x509.CertificateIssuerExtension", ::sun::security::x509::CertificateIssuerExtension),
	$classEntry("sun.security.x509.CertificateIssuerName", ::sun::security::x509::CertificateIssuerName),
	$classEntry("sun.security.x509.CertificatePoliciesExtension", ::sun::security::x509::CertificatePoliciesExtension),
	$classEntry("sun.security.x509.CertificatePolicyId", ::sun::security::x509::CertificatePolicyId),
	$classEntry("sun.security.x509.CertificatePolicyMap", ::sun::security::x509::CertificatePolicyMap),
	$classEntry("sun.security.x509.CertificatePolicySet", ::sun::security::x509::CertificatePolicySet),
	$classEntry("sun.security.x509.CertificateSerialNumber", ::sun::security::x509::CertificateSerialNumber),
	$classEntry("sun.security.x509.CertificateSubjectName", ::sun::security::x509::CertificateSubjectName),
	$classEntry("sun.security.x509.CertificateValidity", ::sun::security::x509::CertificateValidity),
	$classEntry("sun.security.x509.CertificateVersion", ::sun::security::x509::CertificateVersion),
	$classEntry("sun.security.x509.CertificateX509Key", ::sun::security::x509::CertificateX509Key),
	$classEntry("sun.security.x509.DNSName", ::sun::security::x509::DNSName),
	$classEntry("sun.security.x509.DeltaCRLIndicatorExtension", ::sun::security::x509::DeltaCRLIndicatorExtension),
	$classEntry("sun.security.x509.DistributionPoint", ::sun::security::x509::DistributionPoint),
	$classEntry("sun.security.x509.DistributionPointName", ::sun::security::x509::DistributionPointName),
	$classEntry("sun.security.x509.EDIPartyName", ::sun::security::x509::EDIPartyName),
	$classEntry("sun.security.x509.ExtendedKeyUsageExtension", ::sun::security::x509::ExtendedKeyUsageExtension),
	$classEntry("sun.security.x509.Extension", ::sun::security::x509::Extension),
	$classEntry("sun.security.x509.FreshestCRLExtension", ::sun::security::x509::FreshestCRLExtension),
	$classEntry("sun.security.x509.GeneralName", ::sun::security::x509::GeneralName),
	$classEntry("sun.security.x509.GeneralNameInterface", ::sun::security::x509::GeneralNameInterface),
	$classEntry("sun.security.x509.GeneralNames", ::sun::security::x509::GeneralNames),
	$classEntry("sun.security.x509.GeneralSubtree", ::sun::security::x509::GeneralSubtree),
	$classEntry("sun.security.x509.GeneralSubtrees", ::sun::security::x509::GeneralSubtrees),
	$classEntry("sun.security.x509.IPAddressName", ::sun::security::x509::IPAddressName),
	$classEntry("sun.security.x509.InhibitAnyPolicyExtension", ::sun::security::x509::InhibitAnyPolicyExtension),
	$classEntry("sun.security.x509.InvalidityDateExtension", ::sun::security::x509::InvalidityDateExtension),
	$classEntry("sun.security.x509.IssuerAlternativeNameExtension", ::sun::security::x509::IssuerAlternativeNameExtension),
	$classEntry("sun.security.x509.IssuingDistributionPointExtension", ::sun::security::x509::IssuingDistributionPointExtension),
	$classEntry("sun.security.x509.KeyIdentifier", ::sun::security::x509::KeyIdentifier),
	$classEntry("sun.security.x509.KeyUsageExtension", ::sun::security::x509::KeyUsageExtension),
	$classEntry("sun.security.x509.NameConstraintsExtension", ::sun::security::x509::NameConstraintsExtension),
	$classEntry("sun.security.x509.NetscapeCertTypeExtension", ::sun::security::x509::NetscapeCertTypeExtension),
	$classEntry("sun.security.x509.NetscapeCertTypeExtension$MapEntry", ::sun::security::x509::NetscapeCertTypeExtension$MapEntry),
	$classEntry("sun.security.x509.OCSPNoCheckExtension", ::sun::security::x509::OCSPNoCheckExtension),
	$classEntry("sun.security.x509.OIDMap", ::sun::security::x509::OIDMap),
	$classEntry("sun.security.x509.OIDMap$OIDInfo", ::sun::security::x509::OIDMap$OIDInfo),
	$classEntry("sun.security.x509.OIDName", ::sun::security::x509::OIDName),
	$classEntry("sun.security.x509.OtherName", ::sun::security::x509::OtherName),
	$classEntry("sun.security.x509.PKIXExtensions", ::sun::security::x509::PKIXExtensions),
	$classEntry("sun.security.x509.PolicyConstraintsExtension", ::sun::security::x509::PolicyConstraintsExtension),
	$classEntry("sun.security.x509.PolicyInformation", ::sun::security::x509::PolicyInformation),
	$classEntry("sun.security.x509.PolicyMappingsExtension", ::sun::security::x509::PolicyMappingsExtension),
	$classEntry("sun.security.x509.PrivateKeyUsageExtension", ::sun::security::x509::PrivateKeyUsageExtension),
	$classEntry("sun.security.x509.RDN", ::sun::security::x509::RDN),
	$classEntry("sun.security.x509.RFC822Name", ::sun::security::x509::RFC822Name),
	$classEntry("sun.security.x509.ReasonFlags", ::sun::security::x509::ReasonFlags),
	$classEntry("sun.security.x509.SerialNumber", ::sun::security::x509::SerialNumber),
	$classEntry("sun.security.x509.SubjectAlternativeNameExtension", ::sun::security::x509::SubjectAlternativeNameExtension),
	$classEntry("sun.security.x509.SubjectInfoAccessExtension", ::sun::security::x509::SubjectInfoAccessExtension),
	$classEntry("sun.security.x509.SubjectKeyIdentifierExtension", ::sun::security::x509::SubjectKeyIdentifierExtension),
	$classEntry("sun.security.x509.URIName", ::sun::security::x509::URIName),
	$classEntry("sun.security.x509.UniqueIdentity", ::sun::security::x509::UniqueIdentity),
	$classEntry("sun.security.x509.UnparseableExtension", ::sun::security::x509::UnparseableExtension),
	$classEntry("sun.security.x509.X400Address", ::sun::security::x509::X400Address),
	$classEntry("sun.security.x509.X500Name", ::sun::security::x509::X500Name),
	$classEntry("sun.security.x509.X500Name$1", ::sun::security::x509::X500Name$1),
	$classEntry("sun.security.x509.X509AttributeName", ::sun::security::x509::X509AttributeName),
	$classEntry("sun.security.x509.X509CRLEntryImpl", ::sun::security::x509::X509CRLEntryImpl),
	$classEntry("sun.security.x509.X509CRLImpl", ::sun::security::x509::X509CRLImpl),
	$classEntry("sun.security.x509.X509CRLImpl$X509IssuerSerial", ::sun::security::x509::X509CRLImpl$X509IssuerSerial),
	$classEntry("sun.security.x509.X509CertImpl", ::sun::security::x509::X509CertImpl),
	$classEntry("sun.security.x509.X509CertInfo", ::sun::security::x509::X509CertInfo),
	$classEntry("sun.security.x509.X509Key", ::sun::security::x509::X509Key),
	$classEntry("sun.text.BreakDictionary", ::sun::text::BreakDictionary),
	$classEntry("sun.text.CollatorUtilities", ::sun::text::CollatorUtilities),
	$classEntry("sun.text.CompactByteArray", ::sun::text::CompactByteArray),
	$classEntry("sun.text.ComposedCharIter", ::sun::text::ComposedCharIter),
	$classEntry("sun.text.DictionaryBasedBreakIterator", ::sun::text::DictionaryBasedBreakIterator),
	$classEntry("sun.text.IntHashtable", ::sun::text::IntHashtable),
	$classEntry("sun.text.Normalizer", ::sun::text::Normalizer),
	$classEntry("sun.text.RuleBasedBreakIterator", ::sun::text::RuleBasedBreakIterator),
	$classEntry("sun.text.RuleBasedBreakIterator$SafeCharIterator", ::sun::text::RuleBasedBreakIterator$SafeCharIterator),
	$classEntry("sun.text.SupplementaryCharacterData", ::sun::text::SupplementaryCharacterData),
	$classEntry("sun.text.UCompactIntArray", ::sun::text::UCompactIntArray),
	$classEntry("sun.text.resources.BreakIteratorInfo", ::sun::text::resources::BreakIteratorInfo),
	$classEntry("sun.text.resources.BreakIteratorInfoProvider", ::sun::text::resources::BreakIteratorInfoProvider),
	$classEntry("sun.text.resources.BreakIteratorResources", ::sun::text::resources::BreakIteratorResources),
	$classEntry("sun.text.resources.BreakIteratorRules", ::sun::text::resources::BreakIteratorRules),
	$classEntry("sun.text.resources.CollationData", ::sun::text::resources::CollationData),
	$classEntry("sun.text.resources.CollationDataProvider", ::sun::text::resources::CollationDataProvider),
	$classEntry("sun.text.resources.FormatData", ::sun::text::resources::FormatData),
	$classEntry("sun.text.resources.FormatDataProvider", ::sun::text::resources::FormatDataProvider),
	$classEntry("sun.text.resources.FormatData_en", ::sun::text::resources::FormatData_en),
	$classEntry("sun.text.resources.FormatData_en_US", ::sun::text::resources::FormatData_en_US),
	$classEntry("sun.text.resources.JavaTimeSupplementary", ::sun::text::resources::JavaTimeSupplementary),
	$classEntry("sun.text.resources.JavaTimeSupplementaryProvider", ::sun::text::resources::JavaTimeSupplementaryProvider),
	$classEntry("sun.text.resources.JavaTimeSupplementary_en", ::sun::text::resources::JavaTimeSupplementary_en),
	$classEntry("sun.text.resources.cldr.FormatData", ::sun::text::resources::cldr::FormatData),
	$classEntry("sun.text.resources.cldr.FormatDataProvider", ::sun::text::resources::cldr::FormatDataProvider),
	$classEntry("sun.text.resources.cldr.FormatData_en", ::sun::text::resources::cldr::FormatData_en),
	$classEntry("sun.text.resources.cldr.FormatData_en_US_POSIX", ::sun::text::resources::cldr::FormatData_en_US_POSIX),
	$classEntry("sun.text.spi.JavaTimeDateTimePatternProvider", ::sun::text::spi::JavaTimeDateTimePatternProvider),
	$classEntry("sun.util.BuddhistCalendar", ::sun::util::BuddhistCalendar),
	$classEntry("sun.util.PreHashedMap", ::sun::util::PreHashedMap),
	$classEntry("sun.util.PreHashedMap$1", ::sun::util::PreHashedMap$1),
	$classEntry("sun.util.PreHashedMap$1$1", ::sun::util::PreHashedMap$1$1),
	$classEntry("sun.util.PreHashedMap$2", ::sun::util::PreHashedMap$2),
	$classEntry("sun.util.PreHashedMap$2$1", ::sun::util::PreHashedMap$2$1),
	$classEntry("sun.util.PreHashedMap$2$1$1", ::sun::util::PreHashedMap$2$1$1),
	$classEntry("sun.util.PropertyResourceBundleCharset", ::sun::util::PropertyResourceBundleCharset),
	$classEntry("sun.util.PropertyResourceBundleCharset$PropertiesFileDecoder", ::sun::util::PropertyResourceBundleCharset$PropertiesFileDecoder),
	$classEntry("sun.util.ResourceBundleEnumeration", ::sun::util::ResourceBundleEnumeration),
	$classEntry("sun.util.calendar.AbstractCalendar", ::sun::util::calendar::AbstractCalendar),
	$classEntry("sun.util.calendar.BaseCalendar", ::sun::util::calendar::BaseCalendar),
	$classEntry("sun.util.calendar.BaseCalendar$Date", ::sun::util::calendar::BaseCalendar$Date),
	$classEntry("sun.util.calendar.CalendarDate", ::sun::util::calendar::CalendarDate),
	$classEntry("sun.util.calendar.CalendarSystem", ::sun::util::calendar::CalendarSystem),
	$classEntry("sun.util.calendar.CalendarUtils", ::sun::util::calendar::CalendarUtils),
	$classEntry("sun.util.calendar.Era", ::sun::util::calendar::Era),
	$classEntry("sun.util.calendar.Gregorian", ::sun::util::calendar::Gregorian),
	$classEntry("sun.util.calendar.Gregorian$Date", ::sun::util::calendar::Gregorian$Date),
	$classEntry("sun.util.calendar.ImmutableGregorianDate", ::sun::util::calendar::ImmutableGregorianDate),
	$classEntry("sun.util.calendar.JulianCalendar", ::sun::util::calendar::JulianCalendar),
	$classEntry("sun.util.calendar.JulianCalendar$Date", ::sun::util::calendar::JulianCalendar$Date),
	$classEntry("sun.util.calendar.LocalGregorianCalendar", ::sun::util::calendar::LocalGregorianCalendar),
	$classEntry("sun.util.calendar.LocalGregorianCalendar$Date", ::sun::util::calendar::LocalGregorianCalendar$Date),
	$classEntry("sun.util.calendar.ZoneInfo", ::sun::util::calendar::ZoneInfo),
	$classEntry("sun.util.calendar.ZoneInfoFile", ::sun::util::calendar::ZoneInfoFile),
	$classEntry("sun.util.calendar.ZoneInfoFile$1", ::sun::util::calendar::ZoneInfoFile$1),
	$classEntry("sun.util.calendar.ZoneInfoFile$Checksum", ::sun::util::calendar::ZoneInfoFile$Checksum),
	$classEntry("sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule", ::sun::util::calendar::ZoneInfoFile$ZoneOffsetTransitionRule),
	$classEntry("sun.util.cldr.CLDRBaseLocaleDataMetaInfo", ::sun::util::cldr::CLDRBaseLocaleDataMetaInfo),
	$classEntry("sun.util.cldr.CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder", ::sun::util::cldr::CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder),
	$classEntry("sun.util.cldr.CLDRCalendarDataProviderImpl", ::sun::util::cldr::CLDRCalendarDataProviderImpl),
	$classEntry("sun.util.cldr.CLDRCalendarNameProviderImpl", ::sun::util::cldr::CLDRCalendarNameProviderImpl),
	$classEntry("sun.util.cldr.CLDRLocaleProviderAdapter", ::sun::util::cldr::CLDRLocaleProviderAdapter),
	$classEntry("sun.util.cldr.CLDRTimeZoneNameProviderImpl", ::sun::util::cldr::CLDRTimeZoneNameProviderImpl),
	$classEntry("sun.util.cldr.CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS", ::sun::util::cldr::CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS),
	$classEntry("sun.util.locale.BaseLocale", ::sun::util::locale::BaseLocale),
	$classEntry("sun.util.locale.BaseLocale$Cache", ::sun::util::locale::BaseLocale$Cache),
	$classEntry("sun.util.locale.BaseLocale$Key", ::sun::util::locale::BaseLocale$Key),
	$classEntry("sun.util.locale.Extension", ::sun::util::locale::Extension),
	$classEntry("sun.util.locale.InternalLocaleBuilder", ::sun::util::locale::InternalLocaleBuilder),
	$classEntry("sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar", ::sun::util::locale::InternalLocaleBuilder$CaseInsensitiveChar),
	$classEntry("sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString", ::sun::util::locale::InternalLocaleBuilder$CaseInsensitiveString),
	$classEntry("sun.util.locale.LanguageTag", ::sun::util::locale::LanguageTag),
	$classEntry("sun.util.locale.LocaleEquivalentMaps", ::sun::util::locale::LocaleEquivalentMaps),
	$classEntry("sun.util.locale.LocaleExtensions", ::sun::util::locale::LocaleExtensions),
	$classEntry("sun.util.locale.LocaleMatcher", ::sun::util::locale::LocaleMatcher),
	$classEntry("sun.util.locale.LocaleObjectCache", ::sun::util::locale::LocaleObjectCache),
	$classEntry("sun.util.locale.LocaleObjectCache$CacheEntry", ::sun::util::locale::LocaleObjectCache$CacheEntry),
	$classEntry("sun.util.locale.LocaleSyntaxException", ::sun::util::locale::LocaleSyntaxException),
	$classEntry("sun.util.locale.LocaleUtils", ::sun::util::locale::LocaleUtils),
	$classEntry("sun.util.locale.ParseStatus", ::sun::util::locale::ParseStatus),
	$classEntry("sun.util.locale.StringTokenIterator", ::sun::util::locale::StringTokenIterator),
	$classEntry("sun.util.locale.UnicodeLocaleExtension", ::sun::util::locale::UnicodeLocaleExtension),
	$classEntry("sun.util.locale.provider.AuxLocaleProviderAdapter", ::sun::util::locale::provider::AuxLocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.AuxLocaleProviderAdapter$NullProvider", ::sun::util::locale::provider::AuxLocaleProviderAdapter$NullProvider),
	$classEntry("sun.util.locale.provider.AvailableLanguageTags", ::sun::util::locale::provider::AvailableLanguageTags),
	$classEntry("sun.util.locale.provider.BaseLocaleDataMetaInfo", ::sun::util::locale::provider::BaseLocaleDataMetaInfo),
	$classEntry("sun.util.locale.provider.BreakIteratorProviderImpl", ::sun::util::locale::provider::BreakIteratorProviderImpl),
	$classEntry("sun.util.locale.provider.CalendarDataProviderImpl", ::sun::util::locale::provider::CalendarDataProviderImpl),
	$classEntry("sun.util.locale.provider.CalendarDataUtility", ::sun::util::locale::provider::CalendarDataUtility),
	$classEntry("sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter", ::sun::util::locale::provider::CalendarDataUtility$CalendarFieldValueNameGetter),
	$classEntry("sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNamesMapGetter", ::sun::util::locale::provider::CalendarDataUtility$CalendarFieldValueNamesMapGetter),
	$classEntry("sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter", ::sun::util::locale::provider::CalendarDataUtility$CalendarWeekParameterGetter),
	$classEntry("sun.util.locale.provider.CalendarNameProviderImpl", ::sun::util::locale::provider::CalendarNameProviderImpl),
	$classEntry("sun.util.locale.provider.CalendarNameProviderImpl$LengthBasedComparator", ::sun::util::locale::provider::CalendarNameProviderImpl$LengthBasedComparator),
	$classEntry("sun.util.locale.provider.CalendarProviderImpl", ::sun::util::locale::provider::CalendarProviderImpl),
	$classEntry("sun.util.locale.provider.CollationRules", ::sun::util::locale::provider::CollationRules),
	$classEntry("sun.util.locale.provider.CollatorProviderImpl", ::sun::util::locale::provider::CollatorProviderImpl),
	$classEntry("sun.util.locale.provider.CurrencyNameProviderImpl", ::sun::util::locale::provider::CurrencyNameProviderImpl),
	$classEntry("sun.util.locale.provider.DateFormatProviderImpl", ::sun::util::locale::provider::DateFormatProviderImpl),
	$classEntry("sun.util.locale.provider.DateFormatSymbolsProviderImpl", ::sun::util::locale::provider::DateFormatSymbolsProviderImpl),
	$classEntry("sun.util.locale.provider.DecimalFormatSymbolsProviderImpl", ::sun::util::locale::provider::DecimalFormatSymbolsProviderImpl),
	$classEntry("sun.util.locale.provider.FallbackLocaleProviderAdapter", ::sun::util::locale::provider::FallbackLocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapter", ::sun::util::locale::provider::HostLocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$1", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$1),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$10", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$10),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$11", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$11),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$2", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$2),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$3", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$3),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$4", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$4),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$5", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$5),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$6", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$6),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$7", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$7),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$8", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$8),
	$classEntry("sun.util.locale.provider.HostLocaleProviderAdapterImpl$9", ::sun::util::locale::provider::HostLocaleProviderAdapterImpl$9),
	$classEntry("sun.util.locale.provider.JRELocaleConstants", ::sun::util::locale::provider::JRELocaleConstants),
	$classEntry("sun.util.locale.provider.JRELocaleProviderAdapter", ::sun::util::locale::provider::JRELocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.JRELocaleProviderAdapter$AvailableJRELocales", ::sun::util::locale::provider::JRELocaleProviderAdapter$AvailableJRELocales),
	$classEntry("sun.util.locale.provider.JavaTimeDateTimePatternImpl", ::sun::util::locale::provider::JavaTimeDateTimePatternImpl),
	$classEntry("sun.util.locale.provider.LocaleDataMetaInfo", ::sun::util::locale::provider::LocaleDataMetaInfo),
	$classEntry("sun.util.locale.provider.LocaleNameProviderImpl", ::sun::util::locale::provider::LocaleNameProviderImpl),
	$classEntry("sun.util.locale.provider.LocaleProviderAdapter", ::sun::util::locale::provider::LocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.LocaleProviderAdapter$1", ::sun::util::locale::provider::LocaleProviderAdapter$1),
	$classEntry("sun.util.locale.provider.LocaleProviderAdapter$Type", ::sun::util::locale::provider::LocaleProviderAdapter$Type),
	$classEntry("sun.util.locale.provider.LocaleResources", ::sun::util::locale::provider::LocaleResources),
	$classEntry("sun.util.locale.provider.LocaleResources$ResourceReference", ::sun::util::locale::provider::LocaleResources$ResourceReference),
	$classEntry("sun.util.locale.provider.LocaleServiceProviderPool", ::sun::util::locale::provider::LocaleServiceProviderPool),
	$classEntry("sun.util.locale.provider.LocaleServiceProviderPool$AllAvailableLocales", ::sun::util::locale::provider::LocaleServiceProviderPool$AllAvailableLocales),
	$classEntry("sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter", ::sun::util::locale::provider::LocaleServiceProviderPool$LocalizedObjectGetter),
	$classEntry("sun.util.locale.provider.NumberFormatProviderImpl", ::sun::util::locale::provider::NumberFormatProviderImpl),
	$classEntry("sun.util.locale.provider.ResourceBundleBasedAdapter", ::sun::util::locale::provider::ResourceBundleBasedAdapter),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter", ::sun::util::locale::provider::SPILocaleProviderAdapter),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$1", ::sun::util::locale::provider::SPILocaleProviderAdapter$1),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$BreakIteratorProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$BreakIteratorProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$CalendarDataProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$CalendarDataProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$CalendarNameProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$CalendarNameProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$CollatorProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$CollatorProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$CurrencyNameProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$CurrencyNameProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$DateFormatProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$DateFormatSymbolsProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$DecimalFormatSymbolsProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$Delegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$Delegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$LocaleNameProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$LocaleNameProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$NumberFormatProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$NumberFormatProviderDelegate),
	$classEntry("sun.util.locale.provider.SPILocaleProviderAdapter$TimeZoneNameProviderDelegate", ::sun::util::locale::provider::SPILocaleProviderAdapter$TimeZoneNameProviderDelegate),
	$classEntry("sun.util.locale.provider.TimeZoneNameProviderImpl", ::sun::util::locale::provider::TimeZoneNameProviderImpl),
	$classEntry("sun.util.locale.provider.TimeZoneNameUtility", ::sun::util::locale::provider::TimeZoneNameUtility),
	$classEntry("sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter", ::sun::util::locale::provider::TimeZoneNameUtility$TimeZoneNameGetter),
	$classEntry("sun.util.logging.PlatformLogger", ::sun::util::logging::PlatformLogger),
	$classEntry("sun.util.logging.PlatformLogger$Bridge", ::sun::util::logging::PlatformLogger$Bridge),
	$classEntry("sun.util.logging.PlatformLogger$ConfigurableBridge", ::sun::util::logging::PlatformLogger$ConfigurableBridge),
	$classEntry("sun.util.logging.PlatformLogger$ConfigurableBridge$LoggerConfiguration", ::sun::util::logging::PlatformLogger$ConfigurableBridge$LoggerConfiguration),
	$classEntry("sun.util.logging.PlatformLogger$Level", ::sun::util::logging::PlatformLogger$Level),
	$classEntry("sun.util.resources.BreakIteratorResourceBundle", ::sun::util::resources::BreakIteratorResourceBundle),
	$classEntry("sun.util.resources.Bundles", ::sun::util::resources::Bundles),
	$classEntry("sun.util.resources.Bundles$1", ::sun::util::resources::Bundles$1),
	$classEntry("sun.util.resources.Bundles$2", ::sun::util::resources::Bundles$2),
	$classEntry("sun.util.resources.Bundles$BundleReference", ::sun::util::resources::Bundles$BundleReference),
	$classEntry("sun.util.resources.Bundles$CacheKey", ::sun::util::resources::Bundles$CacheKey),
	$classEntry("sun.util.resources.Bundles$CacheKeyReference", ::sun::util::resources::Bundles$CacheKeyReference),
	$classEntry("sun.util.resources.Bundles$Strategy", ::sun::util::resources::Bundles$Strategy),
	$classEntry("sun.util.resources.CalendarData", ::sun::util::resources::CalendarData),
	$classEntry("sun.util.resources.CalendarDataProvider", ::sun::util::resources::CalendarDataProvider),
	$classEntry("sun.util.resources.CalendarData_en", ::sun::util::resources::CalendarData_en),
	$classEntry("sun.util.resources.CurrencyNames", ::sun::util::resources::CurrencyNames),
	$classEntry("sun.util.resources.CurrencyNamesProvider", ::sun::util::resources::CurrencyNamesProvider),
	$classEntry("sun.util.resources.CurrencyNames_en_US", ::sun::util::resources::CurrencyNames_en_US),
	$classEntry("sun.util.resources.LocaleData", ::sun::util::resources::LocaleData),
	$classEntry("sun.util.resources.LocaleData$1", ::sun::util::resources::LocaleData$1),
	$classEntry("sun.util.resources.LocaleData$2", ::sun::util::resources::LocaleData$2),
	$classEntry("sun.util.resources.LocaleData$CommonResourceBundleProvider", ::sun::util::resources::LocaleData$CommonResourceBundleProvider),
	$classEntry("sun.util.resources.LocaleData$LocaleDataResourceBundleProvider", ::sun::util::resources::LocaleData$LocaleDataResourceBundleProvider),
	$classEntry("sun.util.resources.LocaleData$LocaleDataStrategy", ::sun::util::resources::LocaleData$LocaleDataStrategy),
	$classEntry("sun.util.resources.LocaleData$SupplementaryResourceBundleProvider", ::sun::util::resources::LocaleData$SupplementaryResourceBundleProvider),
	$classEntry("sun.util.resources.LocaleData$SupplementaryStrategy", ::sun::util::resources::LocaleData$SupplementaryStrategy),
	$classEntry("sun.util.resources.LocaleDataProvider", ::sun::util::resources::LocaleDataProvider),
	$classEntry("sun.util.resources.LocaleNames", ::sun::util::resources::LocaleNames),
	$classEntry("sun.util.resources.LocaleNamesBundle", ::sun::util::resources::LocaleNamesBundle),
	$classEntry("sun.util.resources.LocaleNamesProvider", ::sun::util::resources::LocaleNamesProvider),
	$classEntry("sun.util.resources.LocaleNames_en", ::sun::util::resources::LocaleNames_en),
	$classEntry("sun.util.resources.OpenListResourceBundle", ::sun::util::resources::OpenListResourceBundle),
	$classEntry("sun.util.resources.ParallelListResourceBundle", ::sun::util::resources::ParallelListResourceBundle),
	$classEntry("sun.util.resources.ParallelListResourceBundle$KeySet", ::sun::util::resources::ParallelListResourceBundle$KeySet),
	$classEntry("sun.util.resources.ParallelListResourceBundle$KeySet$1", ::sun::util::resources::ParallelListResourceBundle$KeySet$1),
	$classEntry("sun.util.resources.TimeZoneNames", ::sun::util::resources::TimeZoneNames),
	$classEntry("sun.util.resources.TimeZoneNamesBundle", ::sun::util::resources::TimeZoneNamesBundle),
	$classEntry("sun.util.resources.TimeZoneNamesProvider", ::sun::util::resources::TimeZoneNamesProvider),
	$classEntry("sun.util.resources.TimeZoneNames_en", ::sun::util::resources::TimeZoneNames_en),
	$classEntry("sun.util.resources.cldr.CalendarData", ::sun::util::resources::cldr::CalendarData),
	$classEntry("sun.util.resources.cldr.CalendarDataProvider", ::sun::util::resources::cldr::CalendarDataProvider),
	$classEntry("sun.util.resources.cldr.CurrencyNames", ::sun::util::resources::cldr::CurrencyNames),
	$classEntry("sun.util.resources.cldr.CurrencyNamesProvider", ::sun::util::resources::cldr::CurrencyNamesProvider),
	$classEntry("sun.util.resources.cldr.CurrencyNames_en", ::sun::util::resources::cldr::CurrencyNames_en),
	$classEntry("sun.util.resources.cldr.LocaleNames", ::sun::util::resources::cldr::LocaleNames),
	$classEntry("sun.util.resources.cldr.LocaleNamesProvider", ::sun::util::resources::cldr::LocaleNamesProvider),
	$classEntry("sun.util.resources.cldr.LocaleNames_en", ::sun::util::resources::cldr::LocaleNames_en),
	$classEntry("sun.util.resources.cldr.TimeZoneNames", ::sun::util::resources::cldr::TimeZoneNames),
	$classEntry("sun.util.resources.cldr.TimeZoneNamesProvider", ::sun::util::resources::cldr::TimeZoneNamesProvider),
	$classEntry("sun.util.resources.cldr.TimeZoneNames_en", ::sun::util::resources::cldr::TimeZoneNames_en),
	$classEntry("sun.util.spi.CalendarProvider", ::sun::util::spi::CalendarProvider)
};

#define $resourceEntry(name, clazz) {name, clazz::get}
::java::lang::ResourceEntry _java$base_resources_[] = {
	$resourceEntry("META-INF/services/java.nio.file.spi.FileSystemProvider", ::META$INF::services::java$nio$file$spi$FileSystemProvider$resource),
	$resourceEntry("java/lang/uniName.dat", ::java::lang::uniName$dat$resource),
	$resourceEntry("java/time/chrono/hijrah-config-Hijrah-umalqura_islamic-umalqura.properties", ::java::time::chrono::hijrah$config$Hijrah$umalqura_islamic$umalqura$properties$resource),
	$resourceEntry("java/time/tzdb.dat", ::java::time::tzdb$dat$resource),
	$resourceEntry("java/util/currency.data", ::java::util::currency$data$resource),
	$resourceEntry("jdk/internal/icu/impl/data/icudt67b/nfc.nrm", ::jdk::internal::icu::impl::data::icudt67b::nfc$nrm$resource),
	$resourceEntry("jdk/internal/icu/impl/data/icudt67b/nfkc.nrm", ::jdk::internal::icu::impl::data::icudt67b::nfkc$nrm$resource),
	$resourceEntry("jdk/internal/icu/impl/data/icudt67b/ubidi.icu", ::jdk::internal::icu::impl::data::icudt67b::ubidi$icu$resource),
	$resourceEntry("jdk/internal/icu/impl/data/icudt67b/uprops.icu", ::jdk::internal::icu::impl::data::icudt67b::uprops$icu$resource),
	$resourceEntry("sun/net/idn/uidna.spp", ::sun::net::idn::uidna$spp$resource),
	$resourceEntry("sun/net/www/content-types.properties", ::sun::net::www::content$types$properties$resource),
	$resourceEntry("sun/text/resources/CharacterBreakIteratorData", ::sun::text::resources::CharacterBreakIteratorData$resource),
	$resourceEntry("sun/text/resources/LineBreakIteratorData", ::sun::text::resources::LineBreakIteratorData$resource),
	$resourceEntry("sun/text/resources/SentenceBreakIteratorData", ::sun::text::resources::SentenceBreakIteratorData$resource),
	$resourceEntry("sun/text/resources/WordBreakIteratorData", ::sun::text::resources::WordBreakIteratorData$resource)
};

const char* _java$base_packages_[] = {
	"apple.security",
	"com.sun.crypto.provider",
	"com.sun.security.ntlm",
	"java.io",
	"java.lang",
	"java.lang.annotation",
	"java.lang.constant",
	"java.lang.invoke",
	"java.lang.module",
	"java.lang.ref",
	"java.lang.reflect",
	"java.lang.runtime",
	"java.math",
	"java.net",
	"java.net.spi",
	"java.nio",
	"java.nio.channels",
	"java.nio.channels.spi",
	"java.nio.charset",
	"java.nio.charset.spi",
	"java.nio.file",
	"java.nio.file.attribute",
	"java.nio.file.spi",
	"java.security",
	"java.security.cert",
	"java.security.interfaces",
	"java.security.spec",
	"java.text",
	"java.text.spi",
	"java.time",
	"java.time.chrono",
	"java.time.format",
	"java.time.temporal",
	"java.time.zone",
	"java.util",
	"java.util.concurrent",
	"java.util.concurrent.atomic",
	"java.util.concurrent.locks",
	"java.util.function",
	"java.util.jar",
	"java.util.random",
	"java.util.regex",
	"java.util.spi",
	"java.util.stream",
	"java.util.zip",
	"javax.crypto",
	"javax.crypto.interfaces",
	"javax.crypto.spec",
	"javax.net",
	"javax.net.ssl",
	"javax.security.auth",
	"javax.security.auth.callback",
	"javax.security.auth.login",
	"javax.security.auth.spi",
	"javax.security.auth.x500",
	"javax.security.cert",
	"jdk.internal",
	"jdk.internal.access",
	"jdk.internal.access.foreign",
	"jdk.internal.event",
	"jdk.internal.icu.impl",
	"jdk.internal.icu.lang",
	"jdk.internal.icu.text",
	"jdk.internal.icu.util",
	"jdk.internal.invoke",
	"jdk.internal.javac",
	"jdk.internal.jimage",
	"jdk.internal.jimage.decompressor",
	"jdk.internal.jmod",
	"jdk.internal.jrtfs",
	"jdk.internal.loader",
	"jdk.internal.logger",
	"jdk.internal.math",
	"jdk.internal.misc",
	"jdk.internal.module",
	"jdk.internal.org.objectweb.asm",
	"jdk.internal.org.objectweb.asm.commons",
	"jdk.internal.org.objectweb.asm.signature",
	"jdk.internal.org.objectweb.asm.tree",
	"jdk.internal.org.objectweb.asm.tree.analysis",
	"jdk.internal.org.objectweb.asm.util",
	"jdk.internal.org.xml.sax",
	"jdk.internal.org.xml.sax.helpers",
	"jdk.internal.perf",
	"jdk.internal.platform",
	"jdk.internal.ref",
	"jdk.internal.reflect",
	"jdk.internal.util",
	"jdk.internal.util.jar",
	"jdk.internal.util.random",
	"jdk.internal.util.xml",
	"jdk.internal.util.xml.impl",
	"jdk.internal.vm",
	"jdk.internal.vm.annotation",
	"jdk.internal.vm.vector",
	"sun.invoke",
	"sun.invoke.empty",
	"sun.invoke.util",
	"sun.launcher",
	"sun.launcher.resources",
	"sun.net",
	"sun.net.dns",
	"sun.net.ext",
	"sun.net.ftp",
	"sun.net.ftp.impl",
	"sun.net.sdp",
	"sun.net.smtp",
	"sun.net.spi",
	"sun.net.util",
	"sun.net.www",
	"sun.net.www.content.text",
	"sun.net.www.http",
	"sun.net.www.protocol.file",
	"sun.net.www.protocol.ftp",
	"sun.net.www.protocol.http",
	"sun.net.www.protocol.http.ntlm",
	"sun.net.www.protocol.https",
	"sun.net.www.protocol.jar",
	"sun.net.www.protocol.jmod",
	"sun.net.www.protocol.jrt",
	"sun.net.www.protocol.mailto",
	"sun.nio",
	"sun.nio.ch",
	"sun.nio.cs",
	"sun.nio.fs",
	"sun.reflect.annotation",
	"sun.reflect.generics.factory",
	"sun.reflect.generics.parser",
	"sun.reflect.generics.reflectiveObjects",
	"sun.reflect.generics.repository",
	"sun.reflect.generics.scope",
	"sun.reflect.generics.tree",
	"sun.reflect.generics.visitor",
	"sun.reflect.misc",
	"sun.security.action",
	"sun.security.internal.interfaces",
	"sun.security.internal.spec",
	"sun.security.jca",
	"sun.security.pkcs",
	"sun.security.pkcs10",
	"sun.security.pkcs12",
	"sun.security.provider",
	"sun.security.provider.certpath",
	"sun.security.provider.certpath.ssl",
	"sun.security.rsa",
	"sun.security.ssl",
	"sun.security.timestamp",
	"sun.security.tools",
	"sun.security.tools.keytool",
	"sun.security.util",
	"sun.security.util.math",
	"sun.security.util.math.intpoly",
	"sun.security.validator",
	"sun.security.x509",
	"sun.text",
	"sun.text.resources",
	"sun.text.resources.cldr",
	"sun.text.spi",
	"sun.util",
	"sun.util.calendar",
	"sun.util.cldr",
	"sun.util.locale",
	"sun.util.locale.provider",
	"sun.util.logging",
	"sun.util.resources",
	"sun.util.resources.cldr",
	"sun.util.spi"
};

void java$base$PreloadClass(void* eventData) {
	::java::lang::PreloadClassEvent* event = (::java::lang::PreloadClassEvent*)eventData;
	int32_t length = $lengthOf(_java$base_classes_);
	for (int i = 0; i < length; i++) {
		::java::lang::ClassEntry* classEntry = &_java$base_classes_[i];
		if (event->preinit) {
			if ($hasFlag(classEntry->mark, $PREINIT)) {
				classEntry->loader(nullptr, true);
				continue;
			}
		}
		if (event->preload) {
			if ($hasFlag(classEntry->mark, $PRELOAD) || $hasFlag(classEntry->mark, $PREINIT)) {
				classEntry->loader(nullptr, false);
			}
		}
	}
}

void java$base$LibEventAction(int32_t eventType, void* eventData) {
	if (eventType == JCPP_LIB_EVENT_TYPE_PRELOAD_CLASS) {
		java$base$PreloadClass(eventData);
	}
	if (eventType == JCPP_LIB_EVENT_TYPE_THREAD_START) {
		$setCurrentObjectStack();
	}
}

$StringArray* java$base$GetPackages() {
	int32_t length = $lengthOf(_java$base_packages_);
	$var($StringArray, packages, $new($StringArray, length));
	for (int32_t i = 0; i < length; i++) {
		packages->set(i, $str(_java$base_packages_[i]));
	}
	return packages;
}

::java::lang::ClassEntry* java$base$GetClassEntry($String* name) {
	int32_t begin = 0;
	int32_t end = $lengthOf(_java$base_classes_) - 1;
	while (begin <= end) {
		int32_t mid = begin + (end - begin) / 2;
		::java::lang::ClassEntry* classEntry = &_java$base_classes_[mid];
		int32_t ret = name->compareTo(classEntry->name);
		if (ret < 0) {
			end = mid - 1;
		} else if (ret > 0) {
			begin = mid + 1;
		} else {
			return classEntry;
		}
	}
	return nullptr;
}

$bytes* java$base$GetResource($String* name) {
	int32_t begin = 0;
	int32_t end = $lengthOf(_java$base_resources_) - 1;
	while (begin <= end) {
		int32_t mid = begin + (end - begin) / 2;
		::java::lang::ResourceEntry* resourceEntry = &_java$base_resources_[mid];
		int32_t ret = name->compareTo(resourceEntry->name);
		if (ret < 0) {
			end = mid - 1;
		} else if (ret > 0) {
			begin = mid + 1;
		} else {
			int32_t length = 0;
			int8_t* data = resourceEntry->getResource(length);
			$var($bytes, bytes, $new($bytes, length));
			bytes->setRegion(0, length, data);
			return bytes;
		}
	}
	return nullptr;
}

void java$base::init() {
	::java::lang::Library lib = {
		"java.base", "17.35", "",
		&_java$base_ModuleInfo_,
		java$base$LibEventAction,
		java$base$GetPackages,
		java$base$GetClassEntry,
		java$base$GetResource
	};
	$System::addLibrary(&lib);
}