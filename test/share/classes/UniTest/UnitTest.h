#ifndef _UniTest_UnitTest_h_
#define _UniTest_UnitTest_h_
//$ class UniTest.UnitTest
//$ extends java.lang.Object

#include <java/lang/Array.h>

#pragma push_macro("X")
#undef X
#pragma push_macro("Y")
#undef Y

namespace UniTest {
	class ArrayTypes;
	class ArrayTypesWithDefault;
	class Marker;
	class ScalarTypes;
	class ScalarTypesWithDefault;
	class SingleMemberBoolean;
	class SingleMemberBooleanArray;
	class SingleMemberBooleanArrayDef;
	class SingleMemberBooleanWithDef;
	class SingleMemberByte;
	class SingleMemberByteArray;
	class SingleMemberByteArrayDef;
	class SingleMemberByteWithDef;
	class SingleMemberChar;
	class SingleMemberCharArray;
	class SingleMemberCharArrayDef;
	class SingleMemberCharWithDef;
	class SingleMemberClass;
	class SingleMemberClassArray;
	class SingleMemberClassArrayDef;
	class SingleMemberClassWithDef;
	class SingleMemberDouble;
	class SingleMemberDoubleArray;
	class SingleMemberDoubleArrayDef;
	class SingleMemberDoubleWithDef;
	class SingleMemberEnum;
	class SingleMemberEnumArray;
	class SingleMemberEnumArrayDef;
	class SingleMemberEnumWithDef;
	class SingleMemberFloat;
	class SingleMemberFloatArray;
	class SingleMemberFloatArrayDef;
	class SingleMemberFloatWithDef;
	class SingleMemberInt;
	class SingleMemberIntArray;
	class SingleMemberIntArrayDef;
	class SingleMemberIntWithDef;
	class SingleMemberLong;
	class SingleMemberLongArray;
	class SingleMemberLongArrayDef;
	class SingleMemberLongWithDef;
	class SingleMemberShort;
	class SingleMemberShortArray;
	class SingleMemberShortArrayDef;
	class SingleMemberShortWithDef;
	class SingleMemberString;
	class SingleMemberStringArray;
	class SingleMemberStringArrayDef;
	class SingleMemberStringWithDef;
}
namespace java {
	namespace lang {
		class Enum;
	}
}
namespace java {
	namespace lang {
		namespace reflect {
			class AnnotatedElement;
			class Method;
		}
	}
}
namespace java {
	namespace util {
		class Collection;
		class Iterator;
		class List;
		class Map;
		class RandomAccess;
		class Set;
		class SortedMap;
		class SortedSet;
	}
}

namespace UniTest {

class $export UnitTest : public ::java::lang::Object {
	$class(UnitTest, 0, ::java::lang::Object)
public:
	UnitTest();
	void init$(::java::util::Iterator* it);
	void init$(::java::util::Set* s);
	void init$(::java::util::Map* s);
	void init$(::java::util::List* l);
	void init$(::java::util::Collection* c);
	void init$(::java::util::SortedSet* ss);
	void init$(::java::util::SortedMap* sm);
	void init$(::java::util::RandomAccess* r);
	void init$();
	void init$(int8_t b);
	void init$(int16_t s);
	void init$(int32_t i);
	void init$(int64_t l);
	void init$(char16_t c);
	void init$(float f);
	void init$(double d);
	void init$(bool b);
	void init$($String* s);
	void init$($Class* c);
	void init$(::java::lang::Enum* e);
	void init$(int8_t b, ::java::util::Set* s);
	void init$(int16_t s, ::java::util::Set* x);
	void init$(int32_t i, ::java::util::Set* s);
	void init$(int64_t l, ::java::util::Set* s);
	void init$(char16_t c, ::java::util::Set* s);
	void init$(float f, ::java::util::Set* s);
	void init$(double d, ::java::util::Set* s);
	void init$(bool b, ::java::util::Set* s);
	void init$($String* s, ::java::util::Set* x);
	void init$($Class* c, ::java::util::Set* s);
	void init$(::java::lang::Enum* e, ::java::util::Set* s);
	void init$(int8_t b, ::java::util::Map* m);
	void init$(int16_t s, ::java::util::Map* m);
	void init$(int32_t i, ::java::util::Map* m);
	void init$(int64_t l, ::java::util::Map* m);
	void init$(char16_t c, ::java::util::Map* m);
	void init$(float f, ::java::util::Map* m);
	void init$(double d, ::java::util::Map* m);
	void init$(bool b, ::java::util::Map* m);
	void init$($String* s, ::java::util::Map* m);
	void init$($Class* c, ::java::util::Map* m);
	void init$(::java::lang::Enum* e, ::java::util::Map* m);
	void init$($bytes* b);
	void init$($shorts* s);
	void init$($ints* i);
	void init$($longs* l);
	void init$($chars* c);
	void init$($floats* f);
	void init$($doubles* d);
	void init$($booleans* b);
	void init$($StringArray* s);
	void init$($ClassArray* c);
	void init$($Array<::java::lang::Enum>* e);
	void init$($bytes* b, ::java::util::Set* s);
	void init$($shorts* s, ::java::util::Set* x);
	void init$($ints* i, ::java::util::Set* s);
	void init$($longs* l, ::java::util::Set* s);
	void init$($chars* c, ::java::util::Set* s);
	void init$($floats* f, ::java::util::Set* s);
	void init$($doubles* d, ::java::util::Set* s);
	void init$($booleans* b, ::java::util::Set* s);
	void init$($StringArray* s, ::java::util::Set* x);
	void init$($ClassArray* c, ::java::util::Set* s);
	void init$($Array<::java::lang::Enum>* e, ::java::util::Set* s);
	void init$($bytes* b, ::java::util::Map* m);
	void init$($shorts* s, ::java::util::Map* m);
	void init$($ints* i, ::java::util::Map* m);
	void init$($longs* l, ::java::util::Map* m);
	void init$($chars* c, ::java::util::Map* m);
	void init$($floats* f, ::java::util::Map* m);
	void init$($doubles* d, ::java::util::Map* m);
	void init$($booleans* b, ::java::util::Map* m);
	void init$($StringArray* s, ::java::util::Map* m);
	void init$($ClassArray* c, ::java::util::Map* m);
	void init$($Array<::java::lang::Enum>* e, ::java::util::Map* m);
	void init$($bytes* b, ::java::util::List* l);
	void init$($shorts* s, ::java::util::List* l);
	void init$($ints* i, ::java::util::List* l);
	void init$($longs* l, ::java::util::List* x);
	void init$($chars* c, ::java::util::List* l);
	void init$($floats* f, ::java::util::List* l);
	void init$($doubles* d, ::java::util::List* l);
	void init$($booleans* b, ::java::util::List* l);
	void init$($StringArray* s, ::java::util::List* l);
	void init$($ClassArray* c, ::java::util::List* l);
	void init$($Array<::java::lang::Enum>* e, ::java::util::List* l);
	void init$($bytes* b, ::java::util::Collection* c);
	void init$($shorts* s, ::java::util::Collection* c);
	void init$($ints* i, ::java::util::Collection* c);
	void init$($longs* l, ::java::util::Collection* c);
	void init$($chars* c, ::java::util::Collection* x);
	void init$($floats* f, ::java::util::Collection* c);
	void init$($doubles* d, ::java::util::Collection* c);
	void init$($booleans* b, ::java::util::Collection* c);
	void init$($StringArray* s, ::java::util::Collection* c);
	void init$($ClassArray* c, ::java::util::Collection* x);
	void init$($Array<::java::lang::Enum>* e, ::java::util::Collection* c);
	virtual void SingleMemberBoolean();
	virtual void SingleMemberBooleanAcceptDef();
	virtual void SingleMemberBooleanAcceptDefParam(int32_t x);
	virtual void SingleMemberBooleanArrAcceptDef();
	virtual void SingleMemberBooleanArrAcceptDefParam(int32_t x);
	virtual void SingleMemberBooleanArrEmpty();
	virtual void SingleMemberBooleanArrEmptyParam(int32_t x);
	virtual void SingleMemberBooleanArrOne();
	virtual void SingleMemberBooleanArrOneParam(int32_t x);
	virtual void SingleMemberBooleanArrOvrdDef();
	virtual void SingleMemberBooleanArrOvrdDefParam(int32_t x);
	virtual void SingleMemberBooleanArrTwo();
	virtual void SingleMemberBooleanArrTwoParam(int32_t x);
	virtual void SingleMemberBooleanOvrdDef();
	virtual void SingleMemberBooleanOvrdDefParam(int32_t x);
	virtual void SingleMemberBooleanParam(int32_t x);
	virtual void SingleMemberByte();
	virtual void SingleMemberByteAcceptDef();
	virtual void SingleMemberByteAcceptDefParam(int32_t x);
	virtual void SingleMemberByteArrAcceptDef();
	virtual void SingleMemberByteArrAcceptDefParam(int32_t x);
	virtual void SingleMemberByteArrEmpty();
	virtual void SingleMemberByteArrEmptyParam(int32_t x);
	virtual void SingleMemberByteArrOne();
	virtual void SingleMemberByteArrOneParam(int32_t x);
	virtual void SingleMemberByteArrOvrdDef();
	virtual void SingleMemberByteArrOvrdDefParam(int32_t x);
	virtual void SingleMemberByteArrTwo();
	virtual void SingleMemberByteArrTwoParam(int32_t x);
	virtual void SingleMemberByteOvrdDef();
	virtual void SingleMemberByteOvrdDefParam(int32_t x);
	virtual void SingleMemberByteParam(int32_t x);
	virtual void SingleMemberChar();
	virtual void SingleMemberCharAcceptDef();
	virtual void SingleMemberCharAcceptDefParam(int32_t x);
	virtual void SingleMemberCharArrAcceptDef();
	virtual void SingleMemberCharArrAcceptDefParam(int32_t x);
	virtual void SingleMemberCharArrEmpty();
	virtual void SingleMemberCharArrEmptyParam(int32_t x);
	virtual void SingleMemberCharArrOne();
	virtual void SingleMemberCharArrOneParam(int32_t x);
	virtual void SingleMemberCharArrOvrdDef();
	virtual void SingleMemberCharArrOvrdDefParam(int32_t x);
	virtual void SingleMemberCharArrTwo();
	virtual void SingleMemberCharArrTwoParam(int32_t x);
	virtual void SingleMemberCharOvrdDef();
	virtual void SingleMemberCharOvrdDefParam(int32_t x);
	virtual void SingleMemberCharParam(int32_t x);
	virtual void SingleMemberClass();
	virtual void SingleMemberClassAcceptDef();
	virtual void SingleMemberClassAcceptDefParam(int32_t x);
	virtual void SingleMemberClassArrAcceptDef();
	virtual void SingleMemberClassArrAcceptDefParam(int32_t x);
	virtual void SingleMemberClassArrEmpty();
	virtual void SingleMemberClassArrEmptyParam(int32_t x);
	virtual void SingleMemberClassArrOne();
	virtual void SingleMemberClassArrOneParam(int32_t x);
	virtual void SingleMemberClassArrOvrdDef();
	virtual void SingleMemberClassArrOvrdDefParam(int32_t x);
	virtual void SingleMemberClassArrTwo();
	virtual void SingleMemberClassArrTwoParam(int32_t x);
	virtual void SingleMemberClassOvrdDef();
	virtual void SingleMemberClassOvrdDefParam(int32_t x);
	virtual void SingleMemberClassParam(int32_t x);
	virtual void SingleMemberDouble();
	virtual void SingleMemberDoubleAcceptDef();
	virtual void SingleMemberDoubleAcceptDefParam(int32_t x);
	virtual void SingleMemberDoubleArrAcceptDef();
	virtual void SingleMemberDoubleArrAcceptDefParam(int32_t x);
	virtual void SingleMemberDoubleArrEmpty();
	virtual void SingleMemberDoubleArrEmptyParam(int32_t x);
	virtual void SingleMemberDoubleArrOne();
	virtual void SingleMemberDoubleArrOneParam(int32_t x);
	virtual void SingleMemberDoubleArrOvrdDef();
	virtual void SingleMemberDoubleArrOvrdDefParam(int32_t x);
	virtual void SingleMemberDoubleArrTwo();
	virtual void SingleMemberDoubleArrTwoParam(int32_t x);
	virtual void SingleMemberDoubleOvrdDef();
	virtual void SingleMemberDoubleOvrdDefParam(int32_t x);
	virtual void SingleMemberDoubleParam(int32_t x);
	virtual void SingleMemberEnum();
	virtual void SingleMemberEnumAcceptDef();
	virtual void SingleMemberEnumAcceptDefParam(int32_t x);
	virtual void SingleMemberEnumArrAcceptDef();
	virtual void SingleMemberEnumArrAcceptDefParam(int32_t x);
	virtual void SingleMemberEnumArrEmpty();
	virtual void SingleMemberEnumArrEmptyParam(int32_t x);
	virtual void SingleMemberEnumArrOne();
	virtual void SingleMemberEnumArrOneParam(int32_t x);
	virtual void SingleMemberEnumArrOvrdDef();
	virtual void SingleMemberEnumArrOvrdDefParam(int32_t x);
	virtual void SingleMemberEnumArrTwo();
	virtual void SingleMemberEnumArrTwoParam(int32_t x);
	virtual void SingleMemberEnumOvrdDef();
	virtual void SingleMemberEnumOvrdDefParam(int32_t x);
	virtual void SingleMemberEnumParam(int32_t x);
	virtual void SingleMemberFloat();
	virtual void SingleMemberFloatAcceptDef();
	virtual void SingleMemberFloatAcceptDefParam(int32_t x);
	virtual void SingleMemberFloatArrAcceptDef();
	virtual void SingleMemberFloatArrAcceptDefParam(int32_t x);
	virtual void SingleMemberFloatArrEmpty();
	virtual void SingleMemberFloatArrEmptyParam(int32_t x);
	virtual void SingleMemberFloatArrOne();
	virtual void SingleMemberFloatArrOneParam(int32_t x);
	virtual void SingleMemberFloatArrOvrdDef();
	virtual void SingleMemberFloatArrOvrdDefParam(int32_t x);
	virtual void SingleMemberFloatArrTwo();
	virtual void SingleMemberFloatArrTwoParam(int32_t x);
	virtual void SingleMemberFloatOvrdDef();
	virtual void SingleMemberFloatOvrdDefParam(int32_t x);
	virtual void SingleMemberFloatParam(int32_t x);
	virtual void SingleMemberInt();
	virtual void SingleMemberIntAcceptDef();
	virtual void SingleMemberIntAcceptDefParam(int32_t x);
	virtual void SingleMemberIntArrAcceptDef();
	virtual void SingleMemberIntArrAcceptDefParam(int32_t x);
	virtual void SingleMemberIntArrEmpty();
	virtual void SingleMemberIntArrEmptyParam(int32_t x);
	virtual void SingleMemberIntArrOne();
	virtual void SingleMemberIntArrOneParam(int32_t x);
	virtual void SingleMemberIntArrOvrdDef();
	virtual void SingleMemberIntArrOvrdDefParam(int32_t x);
	virtual void SingleMemberIntArrTwo();
	virtual void SingleMemberIntArrTwoParam(int32_t x);
	virtual void SingleMemberIntOvrdDef();
	virtual void SingleMemberIntOvrdDefParam(int32_t x);
	virtual void SingleMemberIntParam(int32_t x);
	virtual void SingleMemberLong();
	virtual void SingleMemberLongAcceptDef();
	virtual void SingleMemberLongAcceptDefParam(int32_t x);
	virtual void SingleMemberLongArrAcceptDef();
	virtual void SingleMemberLongArrAcceptDefParam(int32_t x);
	virtual void SingleMemberLongArrEmpty();
	virtual void SingleMemberLongArrEmptyParam(int32_t x);
	virtual void SingleMemberLongArrOne();
	virtual void SingleMemberLongArrOneParam(int32_t x);
	virtual void SingleMemberLongArrOvrdDef();
	virtual void SingleMemberLongArrOvrdDefParam(int32_t x);
	virtual void SingleMemberLongArrTwo();
	virtual void SingleMemberLongArrTwoParam(int32_t x);
	virtual void SingleMemberLongOvrdDef();
	virtual void SingleMemberLongOvrdDefParam(int32_t x);
	virtual void SingleMemberLongParam(int32_t x);
	virtual void SingleMemberShort();
	virtual void SingleMemberShortAcceptDef();
	virtual void SingleMemberShortAcceptDefParam(int32_t x);
	virtual void SingleMemberShortArrAcceptDef();
	virtual void SingleMemberShortArrAcceptDefParam(int32_t x);
	virtual void SingleMemberShortArrEmpty();
	virtual void SingleMemberShortArrEmptyParam(int32_t x);
	virtual void SingleMemberShortArrOne();
	virtual void SingleMemberShortArrOneParam(int32_t x);
	virtual void SingleMemberShortArrOvrdDef();
	virtual void SingleMemberShortArrOvrdDefParam(int32_t x);
	virtual void SingleMemberShortArrTwo();
	virtual void SingleMemberShortArrTwoParam(int32_t x);
	virtual void SingleMemberShortOvrdDef();
	virtual void SingleMemberShortOvrdDefParam(int32_t x);
	virtual void SingleMemberShortParam(int32_t x);
	virtual void SingleMemberString();
	virtual void SingleMemberStringAcceptDef();
	virtual void SingleMemberStringAcceptDefParam(int32_t x);
	virtual void SingleMemberStringArrAcceptDef();
	virtual void SingleMemberStringArrAcceptDefParam(int32_t x);
	virtual void SingleMemberStringArrEmpty();
	virtual void SingleMemberStringArrEmptyParam(int32_t x);
	virtual void SingleMemberStringArrOne();
	virtual void SingleMemberStringArrOneParam(int32_t x);
	virtual void SingleMemberStringArrOvrdDef();
	virtual void SingleMemberStringArrOvrdDefParam(int32_t x);
	virtual void SingleMemberStringArrTwo();
	virtual void SingleMemberStringArrTwoParam(int32_t x);
	virtual void SingleMemberStringOvrdDef();
	virtual void SingleMemberStringOvrdDefParam(int32_t x);
	virtual void SingleMemberStringParam(int32_t x);
	virtual void arrayTypesAcceptDefaultMethod();
	virtual void arrayTypesAcceptDefaultParam(int32_t x);
	virtual void arrayTypesOverrideDefaultMethod();
	virtual void arrayTypesOverrideDefaultParam(int32_t x);
	static void checkArrayTypes0(::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes0(::UniTest::ArrayTypes* at, ::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes0Param(::java::lang::reflect::Method* m);
	static void checkArrayTypes1(::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes1(::UniTest::ArrayTypes* at, ::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes1Param(::java::lang::reflect::Method* m);
	static void checkArrayTypes2(::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes2(::UniTest::ArrayTypes* at, ::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypes2Param(::java::lang::reflect::Method* m);
	static void checkArrayTypesAcceptDefault(::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypesAcceptDefault(::UniTest::ArrayTypesWithDefault* at, ::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypesAcceptDefaultParam(::java::lang::reflect::Method* m);
	static void checkArrayTypesOverrideDefault(::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypesOverrideDefault(::UniTest::ArrayTypesWithDefault* at, ::java::lang::reflect::AnnotatedElement* e);
	static void checkArrayTypesOverrideDefaultParam(::java::lang::reflect::Method* m);
	static void checkDeclaredAnnotations(::java::lang::reflect::AnnotatedElement* e, bool shouldHaveFoo, bool shouldHaveBar);
	static void checkEquals(::java::lang::reflect::AnnotatedElement* e1, ::java::lang::reflect::AnnotatedElement* e2, $Class* annoType);
	static void checkInheritence(::java::lang::reflect::AnnotatedElement* e, bool shouldHaveFoo, bool shouldHaveBar);
	static void checkMarker(::java::lang::reflect::AnnotatedElement* e);
	static void checkMarker(::UniTest::Marker* m, ::java::lang::reflect::AnnotatedElement* e);
	static void checkMarkerParam(::java::lang::reflect::Method* m);
	static void checkScalarTypes(::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypes(::UniTest::ScalarTypes* st, ::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypesAcceptDefault(::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypesAcceptDefault(::UniTest::ScalarTypesWithDefault* st, ::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypesAcceptDefaultParam(::java::lang::reflect::Method* m);
	static void checkScalarTypesOverrideDefault(::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypesOverrideDefault(::UniTest::ScalarTypesWithDefault* st, ::java::lang::reflect::AnnotatedElement* e);
	static void checkScalarTypesOverrideDefaultParam(::java::lang::reflect::Method* m);
	static void checkScalarTypesParam(::java::lang::reflect::Method* m);
	static void checkSerialization(::java::lang::reflect::AnnotatedElement* e, $Class* annoType);
	static void checkSingleMemberBoolean(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBoolean(::UniTest::SingleMemberBoolean* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanAcceptDef(::UniTest::SingleMemberBooleanWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrAcceptDef(::UniTest::SingleMemberBooleanArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrEmpty(::UniTest::SingleMemberBooleanArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrOne(::UniTest::SingleMemberBooleanArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrOvrdDef(::UniTest::SingleMemberBooleanArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrTwo(::UniTest::SingleMemberBooleanArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanOvrdDef(::UniTest::SingleMemberBooleanWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberBooleanOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberBooleanParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByte(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByte(::UniTest::SingleMemberByte* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteAcceptDef(::UniTest::SingleMemberByteWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrAcceptDef(::UniTest::SingleMemberByteArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrEmpty(::UniTest::SingleMemberByteArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrOne(::UniTest::SingleMemberByteArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrOvrdDef(::UniTest::SingleMemberByteArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrTwo(::UniTest::SingleMemberByteArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteOvrdDef(::UniTest::SingleMemberByteWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberByteOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberByteParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberChar(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberChar(::UniTest::SingleMemberChar* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharAcceptDef(::UniTest::SingleMemberCharWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrAcceptDef(::UniTest::SingleMemberCharArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrEmpty(::UniTest::SingleMemberCharArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrOne(::UniTest::SingleMemberCharArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrOvrdDef(::UniTest::SingleMemberCharArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrTwo(::UniTest::SingleMemberCharArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharOvrdDef(::UniTest::SingleMemberCharWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberCharOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberCharParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClass(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClass(::UniTest::SingleMemberClass* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassAcceptDef(::UniTest::SingleMemberClassWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrAcceptDef(::UniTest::SingleMemberClassArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrEmpty(::UniTest::SingleMemberClassArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrOne(::UniTest::SingleMemberClassArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrOvrdDef(::UniTest::SingleMemberClassArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrTwo(::UniTest::SingleMemberClassArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassOvrdDef(::UniTest::SingleMemberClassWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberClassOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberClassParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDouble(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDouble(::UniTest::SingleMemberDouble* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleAcceptDef(::UniTest::SingleMemberDoubleWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrAcceptDef(::UniTest::SingleMemberDoubleArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrEmpty(::UniTest::SingleMemberDoubleArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrOne(::UniTest::SingleMemberDoubleArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrOvrdDef(::UniTest::SingleMemberDoubleArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrTwo(::UniTest::SingleMemberDoubleArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleOvrdDef(::UniTest::SingleMemberDoubleWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberDoubleOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberDoubleParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnum(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnum(::UniTest::SingleMemberEnum* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumAcceptDef(::UniTest::SingleMemberEnumWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrAcceptDef(::UniTest::SingleMemberEnumArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrEmpty(::UniTest::SingleMemberEnumArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrOne(::UniTest::SingleMemberEnumArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrOvrdDef(::UniTest::SingleMemberEnumArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrTwo(::UniTest::SingleMemberEnumArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumOvrdDef(::UniTest::SingleMemberEnumWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberEnumOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberEnumParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloat(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloat(::UniTest::SingleMemberFloat* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatAcceptDef(::UniTest::SingleMemberFloatWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrAcceptDef(::UniTest::SingleMemberFloatArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrEmpty(::UniTest::SingleMemberFloatArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrOne(::UniTest::SingleMemberFloatArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrOvrdDef(::UniTest::SingleMemberFloatArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrTwo(::UniTest::SingleMemberFloatArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatOvrdDef(::UniTest::SingleMemberFloatWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberFloatOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberFloatParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberInt(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberInt(::UniTest::SingleMemberInt* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntAcceptDef(::UniTest::SingleMemberIntWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrAcceptDef(::UniTest::SingleMemberIntArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrEmpty(::UniTest::SingleMemberIntArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrOne(::UniTest::SingleMemberIntArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrOvrdDef(::UniTest::SingleMemberIntArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrTwo(::UniTest::SingleMemberIntArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntOvrdDef(::UniTest::SingleMemberIntWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberIntOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberIntParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLong(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLong(::UniTest::SingleMemberLong* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongAcceptDef(::UniTest::SingleMemberLongWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrAcceptDef(::UniTest::SingleMemberLongArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrEmpty(::UniTest::SingleMemberLongArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrOne(::UniTest::SingleMemberLongArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrOvrdDef(::UniTest::SingleMemberLongArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrTwo(::UniTest::SingleMemberLongArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongOvrdDef(::UniTest::SingleMemberLongWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberLongOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberLongParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShort(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShort(::UniTest::SingleMemberShort* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortAcceptDef(::UniTest::SingleMemberShortWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrAcceptDef(::UniTest::SingleMemberShortArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrEmpty(::UniTest::SingleMemberShortArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrOne(::UniTest::SingleMemberShortArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrOvrdDef(::UniTest::SingleMemberShortArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrTwo(::UniTest::SingleMemberShortArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortOvrdDef(::UniTest::SingleMemberShortWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberShortOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberShortParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberString(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberString(::UniTest::SingleMemberString* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringAcceptDef(::UniTest::SingleMemberStringWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringArrAcceptDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrAcceptDef(::UniTest::SingleMemberStringArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrAcceptDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringArrEmpty(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrEmpty(::UniTest::SingleMemberStringArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrEmptyParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringArrOne(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrOne(::UniTest::SingleMemberStringArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrOneParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringArrOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrOvrdDef(::UniTest::SingleMemberStringArrayDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringArrTwo(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrTwo(::UniTest::SingleMemberStringArray* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringArrTwoParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringOvrdDef(::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringOvrdDef(::UniTest::SingleMemberStringWithDef* a, ::java::lang::reflect::AnnotatedElement* e);
	static void checkSingleMemberStringOvrdDefParam(::java::lang::reflect::Method* m);
	static void checkSingleMemberStringParam(::java::lang::reflect::Method* m);
	static void checkUnequals(::java::lang::reflect::AnnotatedElement* e1, ::java::lang::reflect::AnnotatedElement* e2, $Class* annoType);
	static $Object* deepCopy(Object$* original);
	virtual void emptyArrayTypesMethod();
	virtual void emptyArrayTypesParam(int32_t x);
	static void fail($String* test);
	static void main($StringArray* args);
	virtual void markerMethod();
	virtual void markerParam(int32_t x);
	virtual void scalarTypesAcceptDefaultMethod();
	virtual void scalarTypesAcceptDefaultParam(int32_t x);
	virtual void scalarTypesMethod();
	virtual void scalarTypesOverrideDefaultMethod();
	virtual void scalarTypesOverrideDefaultParam(int32_t x);
	virtual void scalarTypesParam(int32_t x);
	virtual void singleElementArrayTypesMethod();
	virtual void singleElementArrayTypesParam(int32_t x);
	virtual void twoElementArrayTypesMethod();
	virtual void twoElementArrayTypesParam(int32_t x);
	static $ClassArray* X;
	static $ClassArray* Y;
	static int32_t numTests;
	static int32_t failCount;
	int32_t scalarTypesField = 0;
	int32_t scalarTypesAcceptDefaultField = 0;
	int32_t scalarTypesOverrideDefaultField = 0;
	int32_t emptyArrayTypesField = 0;
	int32_t singleElementArrayTypesField = 0;
	int32_t twoElementArrayTypesField = 0;
	int32_t arrayTypesAcceptDefaultField = 0;
	int32_t arrayTypesOverrideDefaultField = 0;
	int32_t markerField = 0;
	int32_t SingleMemberByteField = 0;
	int32_t SingleMemberShortField = 0;
	int32_t SingleMemberIntField = 0;
	int32_t SingleMemberLongField = 0;
	int32_t SingleMemberCharField = 0;
	int32_t SingleMemberFloatField = 0;
	int32_t SingleMemberDoubleField = 0;
	int32_t SingleMemberBooleanField = 0;
	int32_t SingleMemberStringField = 0;
	int32_t SingleMemberClassField = 0;
	int32_t SingleMemberEnumField = 0;
	int32_t SingleMemberByteOvrdDefField = 0;
	int32_t SingleMemberShortOvrdDefField = 0;
	int32_t SingleMemberIntOvrdDefField = 0;
	int32_t SingleMemberLongOvrdDefField = 0;
	int32_t SingleMemberCharOvrdDefField = 0;
	int32_t SingleMemberFloatOvrdDefField = 0;
	int32_t SingleMemberDoubleOvrdDefField = 0;
	int32_t SingleMemberBooleanOvrdDefField = 0;
	int32_t SingleMemberStringOvrdDefField = 0;
	int32_t SingleMemberClassOvrdDefField = 0;
	int32_t SingleMemberEnumOvrdDefField = 0;
	int32_t SingleMemberByteAcceptDefField = 0;
	int32_t SingleMemberShortAcceptDefField = 0;
	int32_t SingleMemberIntAcceptDefField = 0;
	int32_t SingleMemberLongAcceptDefField = 0;
	int32_t SingleMemberCharAcceptDefField = 0;
	int32_t SingleMemberFloatAcceptDefField = 0;
	int32_t SingleMemberDoubleAcceptDefField = 0;
	int32_t SingleMemberBooleanAcceptDefField = 0;
	int32_t SingleMemberStringAcceptDefField = 0;
	int32_t SingleMemberClassAcceptDefField = 0;
	int32_t SingleMemberEnumAcceptDefField = 0;
	int32_t SingleMemberByteArrEmptyField = 0;
	int32_t SingleMemberShortArrEmptyField = 0;
	int32_t SingleMemberIntArrEmptyField = 0;
	int32_t SingleMemberLongArrEmptyField = 0;
	int32_t SingleMemberCharArrEmptyField = 0;
	int32_t SingleMemberFloatArrEmptyField = 0;
	int32_t SingleMemberDoubleArrEmptyField = 0;
	int32_t SingleMemberBooleanArrEmptyField = 0;
	int32_t SingleMemberStringArrEmptyField = 0;
	int32_t SingleMemberClassArrEmptyField = 0;
	int32_t SingleMemberEnumArrEmptyField = 0;
	int32_t SingleMemberByteArrOneField = 0;
	int32_t SingleMemberShortArrOneField = 0;
	int32_t SingleMemberIntArrOneField = 0;
	int32_t SingleMemberLongArrOneField = 0;
	int32_t SingleMemberCharArrOneField = 0;
	int32_t SingleMemberFloatArrOneField = 0;
	int32_t SingleMemberDoubleArrOneField = 0;
	int32_t SingleMemberBooleanArrOneField = 0;
	int32_t SingleMemberStringArrOneField = 0;
	int32_t SingleMemberClassArrOneField = 0;
	int32_t SingleMemberEnumArrOneField = 0;
	int32_t SingleMemberByteArrTwoField = 0;
	int32_t SingleMemberShortArrTwoField = 0;
	int32_t SingleMemberIntArrTwoField = 0;
	int32_t SingleMemberLongArrTwoField = 0;
	int32_t SingleMemberCharArrTwoField = 0;
	int32_t SingleMemberFloatArrTwoField = 0;
	int32_t SingleMemberDoubleArrTwoField = 0;
	int32_t SingleMemberBooleanArrTwoField = 0;
	int32_t SingleMemberStringArrTwoField = 0;
	int32_t SingleMemberClassArrTwoField = 0;
	int32_t SingleMemberEnumArrTwoField = 0;
	int32_t SingleMemberByteArrOvrdDefField = 0;
	int32_t SingleMemberShortArrOvrdDefField = 0;
	int32_t SingleMemberIntArrOvrdDefField = 0;
	int32_t SingleMemberLongArrOvrdDefField = 0;
	int32_t SingleMemberCharArrOvrdDefField = 0;
	int32_t SingleMemberFloatArrOvrdDefField = 0;
	int32_t SingleMemberDoubleArrOvrdDefField = 0;
	int32_t SingleMemberBooleanArrOvrdDefField = 0;
	int32_t SingleMemberStringArrOvrdDefField = 0;
	int32_t SingleMemberClassArrOvrdDefField = 0;
	int32_t SingleMemberEnumArrOvrdDefField = 0;
	int32_t SingleMemberByteArrAcceptDefField = 0;
	int32_t SingleMemberShortArrAcceptDefField = 0;
	int32_t SingleMemberIntArrAcceptDefField = 0;
	int32_t SingleMemberLongArrAcceptDefField = 0;
	int32_t SingleMemberCharArrAcceptDefField = 0;
	int32_t SingleMemberFloatArrAcceptDefField = 0;
	int32_t SingleMemberDoubleArrAcceptDefField = 0;
	int32_t SingleMemberBooleanArrAcceptDefField = 0;
	int32_t SingleMemberStringArrAcceptDefField = 0;
	int32_t SingleMemberClassArrAcceptDefField = 0;
	int32_t SingleMemberEnumArrAcceptDefField = 0;
};

} // UniTest

#pragma pop_macro("X")
#pragma pop_macro("Y")

#endif // _UniTest_UnitTest_h_