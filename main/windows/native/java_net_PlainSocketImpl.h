/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_net_PlainSocketImpl */

#ifndef _Included_java_net_PlainSocketImpl
#define _Included_java_net_PlainSocketImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef java_net_PlainSocketImpl_SHUT_RD
#define java_net_PlainSocketImpl_SHUT_RD 0L
#undef java_net_PlainSocketImpl_SHUT_WR
#define java_net_PlainSocketImpl_SHUT_WR 1L
#undef java_net_PlainSocketImpl_WOULDBLOCK
#define java_net_PlainSocketImpl_WOULDBLOCK -2L
/*
 * Class:     java_net_PlainSocketImpl
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    socket0
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_socket0
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    bind0
 * Signature: (ILjava/net/InetAddress;IZ)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_bind0
  (JNIEnv *, jclass, jint, jobject, jint, jboolean);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    connect0
 * Signature: (ILjava/net/InetAddress;I)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_connect0
  (JNIEnv *, jclass, jint, jobject, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    waitForConnect
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_waitForConnect
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    localPort0
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_localPort0
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    localAddress
 * Signature: (ILjava/net/InetAddressContainer;)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_localAddress
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    listen0
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_listen0
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    accept0
 * Signature: (I[Ljava/net/InetSocketAddress;)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_accept0
  (JNIEnv *, jclass, jint, jobjectArray);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    waitForNewConnection
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_waitForNewConnection
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    available0
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_available0
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    close0
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_close0
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    shutdown0
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_shutdown0
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    setIntOption
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_setIntOption
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    setSoTimeout0
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_setSoTimeout0
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    getIntOption
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_java_net_PlainSocketImpl_getIntOption
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    sendOOB
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_sendOOB
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_net_PlainSocketImpl
 * Method:    configureBlocking
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_java_net_PlainSocketImpl_configureBlocking
  (JNIEnv *, jclass, jint, jboolean);

#ifdef __cplusplus
}
#endif
#endif
