/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_io_WinNTFileSystem */

#ifndef _Included_java_io_WinNTFileSystem
#define _Included_java_io_WinNTFileSystem
#ifdef __cplusplus
extern "C" {
#endif
#undef java_io_WinNTFileSystem_BA_EXISTS
#define java_io_WinNTFileSystem_BA_EXISTS 1L
#undef java_io_WinNTFileSystem_BA_REGULAR
#define java_io_WinNTFileSystem_BA_REGULAR 2L
#undef java_io_WinNTFileSystem_BA_DIRECTORY
#define java_io_WinNTFileSystem_BA_DIRECTORY 4L
#undef java_io_WinNTFileSystem_BA_HIDDEN
#define java_io_WinNTFileSystem_BA_HIDDEN 8L
#undef java_io_WinNTFileSystem_ACCESS_READ
#define java_io_WinNTFileSystem_ACCESS_READ 4L
#undef java_io_WinNTFileSystem_ACCESS_WRITE
#define java_io_WinNTFileSystem_ACCESS_WRITE 2L
#undef java_io_WinNTFileSystem_ACCESS_EXECUTE
#define java_io_WinNTFileSystem_ACCESS_EXECUTE 1L
#undef java_io_WinNTFileSystem_SPACE_TOTAL
#define java_io_WinNTFileSystem_SPACE_TOTAL 0L
#undef java_io_WinNTFileSystem_SPACE_FREE
#define java_io_WinNTFileSystem_SPACE_FREE 1L
#undef java_io_WinNTFileSystem_SPACE_USABLE
#define java_io_WinNTFileSystem_SPACE_USABLE 2L
/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getDriveDirectory
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_io_WinNTFileSystem_getDriveDirectory
  (JNIEnv *, jobject, jint);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    canonicalize0
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_io_WinNTFileSystem_canonicalize0
  (JNIEnv *, jobject, jstring);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    canonicalizeWithPrefix0
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_io_WinNTFileSystem_canonicalizeWithPrefix0
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getBooleanAttributes
 * Signature: (Ljava/io/File;)I
 */
JNIEXPORT jint JNICALL Java_java_io_WinNTFileSystem_getBooleanAttributes
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    checkAccess
 * Signature: (Ljava/io/File;I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_checkAccess
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getLastModifiedTime
 * Signature: (Ljava/io/File;)J
 */
JNIEXPORT jlong JNICALL Java_java_io_WinNTFileSystem_getLastModifiedTime
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getLength
 * Signature: (Ljava/io/File;)J
 */
JNIEXPORT jlong JNICALL Java_java_io_WinNTFileSystem_getLength
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    setPermission
 * Signature: (Ljava/io/File;IZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_setPermission
  (JNIEnv *, jobject, jobject, jint, jboolean, jboolean);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    createFileExclusively
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_createFileExclusively
  (JNIEnv *, jobject, jstring);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    list
 * Signature: (Ljava/io/File;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_java_io_WinNTFileSystem_list
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    createDirectory
 * Signature: (Ljava/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_createDirectory
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    setLastModifiedTime
 * Signature: (Ljava/io/File;J)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_setLastModifiedTime
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    setReadOnly
 * Signature: (Ljava/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_setReadOnly
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    delete0
 * Signature: (Ljava/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_delete0
  (JNIEnv *, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    rename0
 * Signature: (Ljava/io/File;Ljava/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_io_WinNTFileSystem_rename0
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    listRoots0
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_io_WinNTFileSystem_listRoots0
  (JNIEnv *, jclass);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getSpace0
 * Signature: (Ljava/io/File;I)J
 */
JNIEXPORT jlong JNICALL Java_java_io_WinNTFileSystem_getSpace0
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    getNameMax0
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_java_io_WinNTFileSystem_getNameMax0
  (JNIEnv *, jobject, jstring);

/*
 * Class:     java_io_WinNTFileSystem
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_io_WinNTFileSystem_initIDs
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
