/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl */

#ifndef _Included_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
#define _Included_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_DATA_BUFFER_SIZE
#define sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_DATA_BUFFER_SIZE 88L
/*
 * Class:     sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
 * Method:    accept0
 * Signature: (JJJJ)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_accept0
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
 * Method:    updateAcceptContext
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_updateAcceptContext
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl
 * Method:    closesocket0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_ch_WindowsAsynchronousServerSocketChannelImpl_closesocket0
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
