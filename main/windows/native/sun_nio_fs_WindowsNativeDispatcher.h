/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class sun_nio_fs_WindowsNativeDispatcher */

#ifndef _Included_sun_nio_fs_WindowsNativeDispatcher
#define _Included_sun_nio_fs_WindowsNativeDispatcher
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateEvent
 * Signature: (ZZ)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateEvent
  (JNIEnv *, jclass, jboolean, jboolean);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateFile0
 * Signature: (JIIJII)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateFile0
  (JNIEnv *, jclass, jlong, jint, jint, jlong, jint, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CloseHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CloseHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    DeleteFile0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_DeleteFile0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateDirectory0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateDirectory0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    RemoveDirectory0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_RemoveDirectory0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    DeviceIoControlSetSparse
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_DeviceIoControlSetSparse
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    DeviceIoControlGetReparsePoint
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_DeviceIoControlGetReparsePoint
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFileSizeEx
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFileSizeEx
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindFirstFile0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/FirstFile;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindFirstFile0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindFirstFile1
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindFirstFile1
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindNextFile
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindNextFile
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindFirstStream0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/FirstStream;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindFirstStream0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindNextStream
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindNextStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FindClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FindClose
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFileInformationByHandle
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFileInformationByHandle
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CopyFileEx0
 * Signature: (JJIJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CopyFileEx0
  (JNIEnv *, jclass, jlong, jlong, jint, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    MoveFileEx0
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_MoveFileEx0
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFileAttributes0
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFileAttributes0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetFileAttributes0
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetFileAttributes0
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFileAttributesEx0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFileAttributesEx0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetFileTime
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetFileTime
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetEndOfFile
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetEndOfFile
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetLogicalDrives
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetLogicalDrives
  (JNIEnv *, jclass);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetVolumeInformation0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/VolumeInformation;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetVolumeInformation0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetDriveType0
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetDriveType0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetDiskFreeSpaceEx0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/DiskFreeSpace;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetDiskFreeSpaceEx0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetDiskFreeSpace0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/DiskFreeSpace;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetDiskFreeSpace0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetVolumePathName0
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetVolumePathName0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    InitializeSecurityDescriptor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_InitializeSecurityDescriptor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    InitializeAcl
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_InitializeAcl
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFileSecurity0
 * Signature: (JIJI)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFileSecurity0
  (JNIEnv *, jclass, jlong, jint, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetFileSecurity0
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetFileSecurity0
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetSecurityDescriptorOwner
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetSecurityDescriptorOwner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetSecurityDescriptorOwner
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetSecurityDescriptorOwner
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetSecurityDescriptorDacl
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetSecurityDescriptorDacl
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetSecurityDescriptorDacl
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetSecurityDescriptorDacl
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetAclInformation0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/AclInformation;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetAclInformation0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetAce
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetAce
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    AddAccessAllowedAceEx
 * Signature: (JIIJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_AddAccessAllowedAceEx
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    AddAccessDeniedAceEx
 * Signature: (JIIJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_AddAccessDeniedAceEx
  (JNIEnv *, jclass, jlong, jint, jint, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    LookupAccountSid0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/Account;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_LookupAccountSid0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    LookupAccountName0
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_LookupAccountName0
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetLengthSid
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetLengthSid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    ConvertSidToStringSid
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_ConvertSidToStringSid
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    ConvertStringSidToSid0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_ConvertStringSidToSid0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetCurrentProcess
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetCurrentProcess
  (JNIEnv *, jclass);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetCurrentThread
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetCurrentThread
  (JNIEnv *, jclass);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    OpenProcessToken
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_OpenProcessToken
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    OpenThreadToken
 * Signature: (JIZ)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_OpenThreadToken
  (JNIEnv *, jclass, jlong, jint, jboolean);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    DuplicateTokenEx
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_DuplicateTokenEx
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    SetThreadToken
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_SetThreadToken
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetTokenInformation
 * Signature: (JIJI)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetTokenInformation
  (JNIEnv *, jclass, jlong, jint, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    AdjustTokenPrivileges
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_AdjustTokenPrivileges
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    AccessCheck
 * Signature: (JJIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_AccessCheck
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    LookupPrivilegeValue0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_LookupPrivilegeValue0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateSymbolicLink0
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateSymbolicLink0
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateHardLink0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateHardLink0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFullPathName0
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFullPathName0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetFinalPathNameByHandle
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetFinalPathNameByHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    FormatMessage
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_FormatMessage
  (JNIEnv *, jclass, jint);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    LocalFree
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_LocalFree
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CreateIoCompletionPort
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CreateIoCompletionPort
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetQueuedCompletionStatus0
 * Signature: (JLsun/nio/fs/WindowsNativeDispatcher/CompletionStatus;)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetQueuedCompletionStatus0
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    PostQueuedCompletionStatus
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_PostQueuedCompletionStatus
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    ReadDirectoryChangesW
 * Signature: (JJIZIJJ)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_ReadDirectoryChangesW
  (JNIEnv *, jclass, jlong, jlong, jint, jboolean, jint, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    CancelIo
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_CancelIo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    GetOverlappedResult
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_GetOverlappedResult
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     sun_nio_fs_WindowsNativeDispatcher
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_sun_nio_fs_WindowsNativeDispatcher_initIDs
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
